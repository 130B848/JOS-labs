!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOCATE_SIZE	obj/user/sbrktest.asm	/^#define ALLOCATE_SIZE 4096$/;"	d
ALLOCATE_SIZE	user/sbrktest.c	3;"	d	file:
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon8
ALT	kern/console.c	219;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sbrktest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/writemotd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	16;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon9
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon9
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Cpu	kern/cpu.h	/^struct Cpu {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	13;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sbrktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/writemotd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	225;"	d	file:
E1000_DEVICE_ID	kern/e1000.h	13;"	d
E1000_RAH	kern/e1000.h	71;"	d
E1000_RAH_AV	kern/e1000.h	72;"	d
E1000_RAL	kern/e1000.h	70;"	d
E1000_RCTL	kern/e1000.h	24;"	d
E1000_RCTL_BAM	kern/e1000.h	51;"	d
E1000_RCTL_BSIZE	kern/e1000.h	52;"	d
E1000_RCTL_EN	kern/e1000.h	46;"	d
E1000_RCTL_LBM	kern/e1000.h	48;"	d
E1000_RCTL_LPE	kern/e1000.h	47;"	d
E1000_RCTL_MO	kern/e1000.h	50;"	d
E1000_RCTL_RDMTS	kern/e1000.h	49;"	d
E1000_RCTL_SECRC	kern/e1000.h	53;"	d
E1000_RDBAH	kern/e1000.h	33;"	d
E1000_RDBAL	kern/e1000.h	32;"	d
E1000_RDH	kern/e1000.h	35;"	d
E1000_RDLEN	kern/e1000.h	34;"	d
E1000_RDT	kern/e1000.h	36;"	d
E1000_RXD_STAT_DD	kern/e1000.h	66;"	d
E1000_RXD_STAT_EOP	kern/e1000.h	67;"	d
E1000_STATUS	kern/e1000.h	21;"	d
E1000_TCTL	kern/e1000.h	22;"	d
E1000_TCTL_COLD	kern/e1000.h	42;"	d
E1000_TCTL_CT	kern/e1000.h	41;"	d
E1000_TCTL_EN	kern/e1000.h	39;"	d
E1000_TCTL_PSP	kern/e1000.h	40;"	d
E1000_TDBAH	kern/e1000.h	27;"	d
E1000_TDBAL	kern/e1000.h	26;"	d
E1000_TDH	kern/e1000.h	29;"	d
E1000_TDLEN	kern/e1000.h	28;"	d
E1000_TDT	kern/e1000.h	30;"	d
E1000_TIPG	kern/e1000.h	23;"	d
E1000_TIPG_IPGR1	kern/e1000.h	57;"	d
E1000_TIPG_IPGR2	kern/e1000.h	58;"	d
E1000_TIPG_IPGT	kern/e1000.h	56;"	d
E1000_TXD_CMD_EOP	kern/e1000.h	61;"	d
E1000_TXD_CMD_RS	kern/e1000.h	62;"	d
E1000_TXD_STAT_DD	kern/e1000.h	63;"	d
E1000_VENDOR_ID	kern/e1000.h	12;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBP_OFFSET	kern/monitor.c	143;"	d	file:
EBP_OFFSET	obj/kern/kernel.asm	/^#define EBP_OFFSET(ebp, offset) (*((uint32_t *)(ebp) + (offset)))$/;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon1
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon1
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon1
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon1
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon1
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE,$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	17;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	39;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	20;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	96;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon4
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	= 12,	\/\/ Bad path$/;"	e	enum:__anon4
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon4
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon4
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	= 13,	\/\/ File already exists$/;"	e	enum:__anon4
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon4
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon4
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	= 10,	\/\/ Too many files are open$/;"	e	enum:__anon4
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	= 14,	\/\/ File not a valid executable$/;"	e	enum:__anon4
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	= 11, 	\/\/ File or block not found$/;"	e	enum:__anon4
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	= 15,	\/\/ Operation not supported$/;"	e	enum:__anon4
E_NO_DISK	inc/error.h	/^	E_NO_DISK	= 9,	\/\/ No free space left on disk$/;"	e	enum:__anon4
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon4
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon4
E_PKT_TOO_LONG	inc/error.h	/^	E_PKT_TOO_LONG = 18,$/;"	e	enum:__anon4
E_RCV_EMPTY	inc/error.h	/^	E_RCV_EMPTY = 17,$/;"	e	enum:__anon4
E_TX_FULL	inc/error.h	/^	E_TX_FULL = 16,$/;"	e	enum:__anon4
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon4
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon6
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon6
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon6
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon6
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon6
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon6
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon6
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon6
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= 1234 # $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	22;"	d	file:
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOMEMBASE	inc/memlayout.h	145;"	d
IOMEM_PADDR	inc/memlayout.h	143;"	d
IOPHYSMEM	inc/memlayout.h	95;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	132;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	90;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	99;"	d
KSTACKTOP_I	kern/pmap.c	259;"	d	file:
KSTACKTOP_I	obj/kern/kernel.asm	/^#define KSTACKTOP_I(i) (KSTACKTOP - (i) * (KSTKSIZE + KSTKGAP) - KSTKSIZE)$/;"	d
KSTKGAP	inc/memlayout.h	101;"	d
KSTKSIZE	inc/memlayout.h	100;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon35	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	inc/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	inc/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	inc/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	inc/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	inc/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	inc/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	inc/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	28;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon32
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon32
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon32
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon32
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon32
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon32
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon32
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon34
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon32
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	178;"	d	file:
MAXERROR	inc/error.h	/^    MAXERROR$/;"	e	enum:__anon4
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon11	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	15;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon37
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon21
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon22
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon22
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	42;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	140;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon35	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	39;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	336;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
NO	kern/console.c	215;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	46;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NSEM	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon5
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon5
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon5
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon5
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon5
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon5
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon5
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon5
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon5
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon5
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon5
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon5
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon35	file:
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	181;"	d
O_CREAT	inc/lib.h	183;"	d
O_EXCL	inc/lib.h	185;"	d
O_MKDIR	inc/lib.h	186;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	178;"	d
O_RDWR	inc/lib.h	180;"	d
O_TRUNC	inc/lib.h	184;"	d
O_WRONLY	inc/lib.h	179;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Thu Dec 1 17:59:43 EST 2011$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon23
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon23
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon24
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon24
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon23
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon24
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon24
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon23
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCINT	kern/lapic.c	36;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon36	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon36	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon36	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon36	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon36	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon36	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon36	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	135;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon34
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon34
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon34
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon34
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon34
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon34
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon34
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon36	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	122;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	conf/env.mk	/^QEMU = \/usr\/local\/bin\/qemu-system-i386$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUGDB	GNUmakefile	/^QEMUGDB = $(shell if $(QEMU) -nographic -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -nographic -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	63;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
RX_ARRAY_LEN	kern/e1000.h	19;"	d
RX_MAX_PKT_LEN	kern/e1000.h	18;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	217;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STRING_SIZE	obj/user/sbrktest.asm	/^#define STRING_SIZE	  64$/;"	d
STRING_SIZE	user/sbrktest.c	4;"	d	file:
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon3
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon3
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon3
SYS_exec	inc/syscall.h	/^	SYS_exec,$/;"	e	enum:__anon3
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon3
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon3
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon3
SYS_map_kernel_page	inc/syscall.h	/^	SYS_map_kernel_page,$/;"	e	enum:__anon3
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon3
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon3
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon3
SYS_pkt_receive	inc/syscall.h	/^    SYS_pkt_receive,$/;"	e	enum:__anon3
SYS_pkt_transmit	inc/syscall.h	/^    SYS_pkt_transmit,$/;"	e	enum:__anon3
SYS_sbrk	inc/syscall.h	/^	SYS_sbrk,$/;"	e	enum:__anon3
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon3
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon3
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	43;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	41;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	33;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TX_ARRAY_LEN	kern/e1000.h	16;"	d
TX_MAX_PKT_LEN	kern/e1000.h	15;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	114;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	102;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	112;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	27;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USE_TICKET_SPIN_LOCK	kern/spinlock.h	10;"	d
USTABDATA	inc/memlayout.h	137;"	d
USTACKTOP	inc/memlayout.h	126;"	d
UTEMP	inc/memlayout.h	132;"	d
UTEMP2	kern/syscall.c	19;"	d	file:
UTEMP2	lib/exec.c	4;"	d	file:
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP2toUSTACK	lib/exec.c	5;"	d	file:
UTEMP2toUSTACK	lib/spawn.c	7;"	d	file:
UTEMP3	kern/syscall.c	20;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	129;"	d
UTOP	inc/memlayout.h	121;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	110;"	d
UXSTACKTOP	inc/memlayout.h	123;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon35	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
WHITESPACE	kern/monitor.c	177;"	d	file:
X1	kern/lapic.c	34;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^ _alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^ _alltraps:$/;"	l
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/evilhello2.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sbrktest.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/writemotd.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon13	typeref:struct:api_msg_msg::__anon13::__anon16
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon25	typeref:struct:netifapi_msg_msg::__anon25::__anon26
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	kern/e1000.h	/^    uint64_t addr;$/;"	m	struct:rx_desc
addr	kern/e1000.h	/^    uint64_t addr;$/;"	m	struct:tx_desc
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^    addr = ROUNDDOWN(addr, BLKSIZE);$/;"	d
addr	obj/kern/kernel.asm	/^	addr = (char*)page2kva(pp0);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sbrktest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sbrktest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/writemotd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/writemotd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon13::__anon17
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon28::__anon31
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sbrktest.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/writemotd.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
atomic_return_and_add	kern/spinlock.c	/^unsigned atomic_return_and_add(volatile unsigned *addr, unsigned value)$/;"	f
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon13	typeref:struct:api_msg_msg::__anon13::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon13::__anon20
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
backup	obj/user/evilhello2.asm	/^		backup = *entry;$/;"	d
backup	user/evilhello2.c	/^struct Segdesc backup;$/;"	v	typeref:struct:Segdesc
backup_map_segment	lib/spawn.c	/^backup_map_segment(envid_t this_id, uintptr_t va, size_t memsz,$/;"	f	file:
backup_stack	lib/exec.c	/^backup_stack(envid_t this_id, const char **argv, uintptr_t *init_esp, uint32_t middleware)$/;"	f	file:
backup_stack	lib/spawn.c	/^backup_stack(envid_t this_id, const char **argv, uintptr_t *init_esp, uint32_t middleware)$/;"	f	file:
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello2.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello2.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 10;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 16;$/;"	d
base	obj/user/sbrktest.asm	/^			base = 8;$/;"	d
base	obj/user/sbrktest.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
base	obj/user/writemotd.asm	/^			base = 10;$/;"	d
base	obj/user/writemotd.asm	/^			base = 16;$/;"	d
base	obj/user/writemotd.asm	/^			base = 8;$/;"	d
base	obj/user/writemotd.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon13	typeref:struct:api_msg_msg::__anon13::__anon15
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sbrktest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/writemotd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef int bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f
bootcpu	kern/mpconfig.c	/^struct Cpu *bootcpu;$/;"	v	typeref:struct:Cpu
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon10	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon37
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sbrktest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/writemotd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::__anon30
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sbrktest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/writemotd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/evilhello2.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sbrktest.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/writemotd.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab2.sh	/^check () {$/;"	f
check	obj/kern/kernel.asm	/^				check = result;$/;"	d
check	obj/kern/kernel.asm	/^		check = result = list;$/;"	d
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_continuous	kern/pmap.c	/^check_continuous(struct Page *pp, int num_page)$/;"	f	file:
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_invalid	kern/pmap.c	507;"	d	file:
check_invalid	obj/kern/kernel.asm	/^#define check_invalid(i) (i == 0 || (i >= IOPHYSMEM && i < PADDR(boot_alloc(0))))$/;"	d
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_n_pages	kern/pmap.c	/^check_n_pages(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_realloc_npages	kern/pmap.c	/^check_realloc_npages(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checkregexps	grade-functions.sh	/^checkregexps () {$/;"	f
checksum	kern/e1000.h	/^    uint16_t checksum;$/;"	m	struct:rx_desc
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child_id	obj/net/ns.asm	/^	child_id = sys_exofork();$/;"	d
child_id	obj/net/testinput.asm	/^	child_id = sys_exofork();$/;"	d
child_id	obj/net/testoutput.asm	/^	child_id = sys_exofork();$/;"	d
child_id	obj/user/forktree.asm	/^	child_id = sys_exofork();$/;"	d
child_id	obj/user/pingpong.asm	/^	child_id = sys_exofork();$/;"	d
child_id	obj/user/pingpongs.asm	/^	child_id = sys_exofork();$/;"	d
child_id	obj/user/primes.asm	/^	child_id = sys_exofork();$/;"	d
child_id	obj/user/spin.asm	/^	child_id = sys_exofork();$/;"	d
child_id	obj/user/stresssched.asm	/^	child_id = sys_exofork();$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chunk_list	kern/pmap.c	/^static struct Page *chunk_list;$/;"	v	typeref:struct:Page	file:
chunk_list	obj/kern/kernel.asm	/^	chunk_list = NULL;$/;"	d
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	kern/e1000.h	/^    uint8_t cmd;$/;"	m	struct:tx_desc
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^				cnt = n;$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sbrktest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/writemotd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon25	typeref:struct:netifapi_msg_msg::__anon25::__anon27
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon10	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon40::__anon41	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct Cpu cpus[NCPU];$/;"	v	typeref:struct:Cpu
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/e1000.h	/^    uint8_t cso;$/;"	m	struct:tx_desc
css	kern/e1000.h	/^    uint8_t css;$/;"	m	struct:tx_desc
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon33
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon33	typeref:struct:cstate::__anon33::ip
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon28::__anon30
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = e;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello2.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sbrktest.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/writemotd.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon43
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon13::__anon17
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	11;"	d	file:
debug	net/serv.c	34;"	d	file:
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/evilhello2.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sbrktest.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/writemotd.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sbrktest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon37
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sbrktest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/writemotd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000_attach	kern/e1000.c	/^int e1000_attach(struct pci_func *pcif) {$/;"	f
e1000_ptr	kern/e1000.h	/^volatile uint32_t *volatile e1000_ptr;$/;"	v
e1000_ptr	obj/kern/kernel.asm	/^    e1000_ptr = (uint32_t *)KSTACKTOP;$/;"	d
e1000_receive	kern/e1000.c	/^int e1000_receive(uint8_t *data) {$/;"	f
e1000_transmit	kern/e1000.c	/^int e1000_transmit(uint8_t *data, uint32_t length) {$/;"	f
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = EBP_OFFSET(ebp, 0);$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_n	grade-functions.sh	/^echo_n () {$/;"	f
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	obj/kern/kernel.asm	/^		eip = EBP_OFFSET(ebp, 1);$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end	obj/user/sbrktest.asm	/^	end = sys_sbrk(ALLOCATE_SIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry	obj/user/evilhello2.asm	/^		entry = gdt + index;$/;"	d
entry	user/evilhello2.c	/^struct Segdesc *entry;$/;"	v	typeref:struct:Segdesc
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_cur_brk	inc/env.h	/^	uint32_t env_cur_brk;$/;"	m	struct:Env
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = envs;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sbrktest.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/writemotd.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/evilhello2.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello2.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/sbrktest.asm	/^				err = -err;$/;"	d
err	obj/user/sbrktest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sbrktest.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/writemotd.asm	/^				err = -err;$/;"	d
err	obj/user/writemotd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/writemotd.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^err:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	kern/e1000.h	/^    uint8_t errors;$/;"	m	struct:rx_desc
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon25::__anon27
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
evil	user/evilhello2.c	/^void evil()$/;"	f
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exec	lib/exec.c	/^exec(const char *prog, const char **argv)$/;"	f
exec	lib/spawn.c	/^exec(const char *prog, const char **argv)$/;"	f
execl	lib/exec.c	/^execl(const char *prog, const char *arg0, ...)$/;"	f
execl	lib/spawn.c	/^execl(const char *prog, const char *arg0, ...)$/;"	f
exit	lib/exit.c	/^exit(void)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon28::__anon30
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 40 12 f0       	mov    $0xf0124000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6d 01 00 00       	call   f01001ab <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	83 3d b0 0e 28 f0 00 	cmpl   $0x0,0xf0280eb0$/;"	l
f010004f	obj/kern/kernel.asm	/^f010004f:	75 3a                	jne    f010008b <_panic+0x4b>$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	89 35 b0 0e 28 f0    	mov    %esi,0xf0280eb0$/;"	l
f0100057	obj/kern/kernel.asm	/^f0100057:	fa                   	cli    $/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	fc                   	cld    $/;"	l
f0100059	obj/kern/kernel.asm	/^f0100059:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	e8 f6 6c 00 00       	call   f0106d57 <cpunum>$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	50                   	push   %eax$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	68 a0 7e 10 f0       	push   $0xf0107ea0$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	e8 76 3e 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	53                   	push   %ebx$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	56                   	push   %esi$/;"	l
f0100077	obj/kern/kernel.asm	/^f0100077:	e8 46 3e 00 00       	call   f0103ec2 <vcprintf>$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	c7 04 24 96 82 10 f0 	movl   $0xf0108296,(%esp)$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	e8 60 3e 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	83 c4 10             	add    $0x10,%esp$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	6a 00                	push   $0x0$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	e8 aa 0b 00 00       	call   f0100c3f <monitor>$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	eb f1                	jmp    f010008b <_panic+0x4b>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a <spinlock_test>:$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	55                   	push   %ebp$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	89 e5                	mov    %esp,%ebp$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	56                   	push   %esi$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	53                   	push   %ebx$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01000a2	obj/kern/kernel.asm	/^f01000a2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	e8 a9 6c 00 00       	call   f0106d57 <cpunum>$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	85 c0                	test   %eax,%eax$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	75 10                	jne    f01000c2 <spinlock_test+0x28>$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01000b5	obj/kern/kernel.asm	/^f01000b5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01000bb	obj/kern/kernel.asm	/^f01000bb:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f01000c0	obj/kern/kernel.asm	/^f01000c0:	7e 0c                	jle    f01000ce <spinlock_test+0x34>$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	bb 64 00 00 00       	mov    $0x64,%ebx$/;"	l
f01000c7	obj/kern/kernel.asm	/^f01000c7:	be ad 8b db 68       	mov    $0x68db8bad,%esi$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	eb 14                	jmp    f01000e2 <spinlock_test+0x48>$/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	f3 90                	pause  $/;"	l
f01000d0	obj/kern/kernel.asm	/^f01000d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01000d9	obj/kern/kernel.asm	/^f01000d9:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	7e ee                	jle    f01000ce <spinlock_test+0x34>$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	eb e0                	jmp    f01000c2 <spinlock_test+0x28>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	68 a0 63 12 f0       	push   $0xf01263a0$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	e8 d6 6e 00 00       	call   f0106fc5 <spin_lock>$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	8b 0d 00 00 28 f0    	mov    0xf0280000,%ecx$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	89 c8                	mov    %ecx,%eax$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	f7 ee                	imul   %esi$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	89 c8                	mov    %ecx,%eax$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	29 c2                	sub    %eax,%edx$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	69 d2 10 27 00 00    	imul   $0x2710,%edx,%edx$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	83 c4 10             	add    $0x10,%esp$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	39 d1                	cmp    %edx,%ecx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	74 14                	je     f0100124 <spinlock_test+0x8a>$/;"	l
f0100110	obj/kern/kernel.asm	/^f0100110:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100113	obj/kern/kernel.asm	/^f0100113:	68 c4 7e 10 f0       	push   $0xf0107ec4$/;"	l
f0100118	obj/kern/kernel.asm	/^f0100118:	6a 28                	push   $0x28$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	68 68 7f 10 f0       	push   $0xf0107f68$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	e8 1c ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100134	obj/kern/kernel.asm	/^f0100134:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f0100139	obj/kern/kernel.asm	/^f0100139:	7f 1d                	jg     f0100158 <spinlock_test+0xbe>$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	a1 00 00 28 f0       	mov    0xf0280000,%eax$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	a3 00 00 28 f0       	mov    %eax,0xf0280000$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	3d 0f 27 00 00       	cmp    $0x270f,%eax$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	7e e3                	jle    f010013b <spinlock_test+0xa1>$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	68 a0 63 12 f0       	push   $0xf01263a0$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	e8 35 6f 00 00       	call   f010709a <spin_unlock>$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	f3 90                	pause  $/;"	l
f0100167	obj/kern/kernel.asm	/^f0100167:	83 c4 10             	add    $0x10,%esp$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	0f 85 6f ff ff ff    	jne    f01000e2 <spinlock_test+0x48>$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	68 a0 63 12 f0       	push   $0xf01263a0$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	e8 45 6e 00 00       	call   f0106fc5 <spin_lock>$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	e8 d2 6b 00 00       	call   f0106d57 <cpunum>$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	50                   	push   %eax$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	68 f8 7e 10 f0       	push   $0xf0107ef8$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	e8 55 3d 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100193	obj/kern/kernel.asm	/^f0100193:	c7 04 24 a0 63 12 f0 	movl   $0xf01263a0,(%esp)$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	e8 fb 6e 00 00       	call   f010709a <spin_unlock>$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	f3 90                	pause  $/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	5b                   	pop    %ebx$/;"	l
f01001a8	obj/kern/kernel.asm	/^f01001a8:	5e                   	pop    %esi$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	5d                   	pop    %ebp$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	c3                   	ret    $/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab <i386_init>:$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	55                   	push   %ebp$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	53                   	push   %ebx$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	b8 90 a7 31 f0       	mov    $0xf031a790,%eax$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	2d 28 f2 27 f0       	sub    $0xf027f228,%eax$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	50                   	push   %eax$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	6a 00                	push   $0x0$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	68 28 f2 27 f0       	push   $0xf027f228$/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	e8 19 65 00 00       	call   f01066e2 <memset>$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	e8 e4 05 00 00       	call   f01007b2 <cons_init>$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	83 c4 08             	add    $0x8,%esp$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	68 74 7f 10 f0       	push   $0xf0107f74$/;"	l
f01001db	obj/kern/kernel.asm	/^f01001db:	e8 08 3d 00 00       	call   f0103ee8 <cprintf>$/;"	l
f01001e0	obj/kern/kernel.asm	/^f01001e0:	e8 4a 19 00 00       	call   f0101b2f <mem_init>$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	e8 1a 35 00 00       	call   f0103704 <env_init>$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	e8 13 3e 00 00       	call   f0104002 <trap_init>$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	e8 4a 68 00 00       	call   f0106a3e <mp_init>$/;"	l
f01001f4	obj/kern/kernel.asm	/^f01001f4:	e8 79 6b 00 00       	call   f0106d72 <lapic_init>$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	e8 f8 3b 00 00       	call   f0103df6 <pic_init>$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	e8 bf 79 00 00       	call   f0107bc2 <time_init>$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	e8 9a 79 00 00       	call   f0107ba2 <pci_init>$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	c7 04 24 a0 63 12 f0 	movl   $0xf01263a0,(%esp)$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	e8 b1 6d 00 00       	call   f0106fc5 <spin_lock>$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	83 3d b8 0e 28 f0 07 	cmpl   $0x7,0xf0280eb8$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	77 19                	ja     f0100239 <i386_init+0x8e>$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	68 00 70 00 00       	push   $0x7000$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	68 93 00 00 00       	push   $0x93$/;"	l
f010022f	obj/kern/kernel.asm	/^f010022f:	68 68 7f 10 f0       	push   $0xf0107f68$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	e8 07 fe ff ff       	call   f0100040 <_panic>$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	b8 96 69 10 f0       	mov    $0xf0106996,%eax$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	2d 1c 69 10 f0       	sub    $0xf010691c,%eax$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	50                   	push   %eax$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	68 1c 69 10 f0       	push   $0xf010691c$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	68 00 70 00 f0       	push   $0xf0007000$/;"	l
f0100251	obj/kern/kernel.asm	/^f0100251:	e8 d9 64 00 00       	call   f010672f <memmove>$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	6b 05 c4 13 28 f0 74 	imul   $0x74,0xf02813c4,%eax$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	05 20 10 28 f0       	add    $0xf0281020,%eax$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	3d 20 10 28 f0       	cmp    $0xf0281020,%eax$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	76 62                	jbe    f01002ce <i386_init+0x123>$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	bb 20 10 28 f0       	mov    $0xf0281020,%ebx$/;"	l
f0100271	obj/kern/kernel.asm	/^f0100271:	e8 e1 6a 00 00       	call   f0106d57 <cpunum>$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	05 20 10 28 f0       	add    $0xf0281020,%eax$/;"	l
f010027e	obj/kern/kernel.asm	/^f010027e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	74 39                	je     f01002bb <i386_init+0x110>$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	89 d8                	mov    %ebx,%eax$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	2d 20 10 28 f0       	sub    $0xf0281020,%eax$/;"	l
f0100289	obj/kern/kernel.asm	/^f0100289:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	05 00 a0 28 f0       	add    $0xf028a000,%eax$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	a3 b4 0e 28 f0       	mov    %eax,0xf0280eb4$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	68 00 70 00 00       	push   $0x7000$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	50                   	push   %eax$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	e8 fa 6b 00 00       	call   f0106eaa <lapic_startap>$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	75 f8                	jne    f01002b3 <i386_init+0x108>$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	6b 05 c4 13 28 f0 74 	imul   $0x74,0xf02813c4,%eax$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	05 20 10 28 f0       	add    $0xf0281020,%eax$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	39 c3                	cmp    %eax,%ebx$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	72 a3                	jb     f0100271 <i386_init+0xc6>$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	6a 01                	push   $0x1$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	68 90 51 00 00       	push   $0x5190$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	68 f0 2c 17 f0       	push   $0xf0172cf0$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	e8 d6 35 00 00       	call   f01038bd <env_create>$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	75 e4                	jne    f01002d3 <i386_init+0x128>$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	6a 02                	push   $0x2$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	68 48 a8 01 00       	push   $0x1a848$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	68 ac b5 1d f0       	push   $0xf01db5ac$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	e8 ba 35 00 00       	call   f01038bd <env_create>$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	6a 00                	push   $0x0$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	68 a0 44 01 00       	push   $0x144a0$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	68 cc eb 21 f0       	push   $0xf021ebcc$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	e8 a6 35 00 00       	call   f01038bd <env_create>$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	e8 a6 49 00 00       	call   f0104cc2 <sched_yield>$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c <mp_main>:$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	55                   	push   %ebp$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	89 e5                	mov    %esp,%ebp$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	77 15                	ja     f0100343 <mp_main+0x27>$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	50                   	push   %eax$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	68 aa 00 00 00       	push   $0xaa$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	68 68 7f 10 f0       	push   $0xf0107f68$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	e8 fd fc ff ff       	call   f0100040 <_panic>$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	e8 07 6a 00 00       	call   f0106d57 <cpunum>$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	50                   	push   %eax$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	68 8f 7f 10 f0       	push   $0xf0107f8f$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	e8 8a 3b 00 00       	call   f0103ee8 <cprintf>$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	e8 0f 6a 00 00       	call   f0106d72 <lapic_init>$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	e8 6c 33 00 00       	call   f01036d4 <env_init_percpu>$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	e8 8f 3b 00 00       	call   f0103efc <trap_init_percpu>$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	e8 e5 69 00 00       	call   f0106d57 <cpunum>$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	81 c2 20 10 28 f0    	add    $0xf0281020,%edx$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	e8 11 fd ff ff       	call   f010009a <spinlock_test>$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	c7 04 24 a0 63 12 f0 	movl   $0xf01263a0,(%esp)$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	e8 30 6c 00 00       	call   f0106fc5 <spin_lock>$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	e8 28 49 00 00       	call   f0104cc2 <sched_yield>$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a <_warn>:$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	55                   	push   %ebp$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	89 e5                	mov    %esp,%ebp$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	53                   	push   %ebx$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	68 a5 7f 10 f0       	push   $0xf0107fa5$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	e8 34 3b 00 00       	call   f0103ee8 <cprintf>$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	53                   	push   %ebx$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	e8 02 3b 00 00       	call   f0103ec2 <vcprintf>$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	c7 04 24 96 82 10 f0 	movl   $0xf0108296,(%esp)$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	e8 1c 3b 00 00       	call   f0103ee8 <cprintf>$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	c9                   	leave  $/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	c3                   	ret    $/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4 <serial_proc_data>:$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	55                   	push   %ebp$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	ec                   	in     (%dx),%al$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	a8 01                	test   $0x1,%al$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	74 0b                	je     f01003ec <serial_proc_data+0x18>$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	ec                   	in     (%dx),%al$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	eb 05                	jmp    f01003f1 <serial_proc_data+0x1d>$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	5d                   	pop    %ebp$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	c3                   	ret    $/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3 <cons_intr>:$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	55                   	push   %ebp$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	53                   	push   %ebx$/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	89 c3                	mov    %eax,%ebx$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	eb 2b                	jmp    f0100429 <cons_intr+0x36>$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	85 c0                	test   %eax,%eax$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	74 27                	je     f0100429 <cons_intr+0x36>$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	8b 0d 44 02 28 f0    	mov    0xf0280244,%ecx$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	8d 51 01             	lea    0x1(%ecx),%edx$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	89 15 44 02 28 f0    	mov    %edx,0xf0280244$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	88 81 40 00 28 f0    	mov    %al,-0xfd7ffc0(%ecx)$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010041d	obj/kern/kernel.asm	/^f010041d:	75 0a                	jne    f0100429 <cons_intr+0x36>$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	c7 05 44 02 28 f0 00 	movl   $0x0,0xf0280244$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	00 00 00 $/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	ff d3                	call   *%ebx$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	75 ce                	jne    f01003fe <cons_intr+0xb>$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	5b                   	pop    %ebx$/;"	l
f0100434	obj/kern/kernel.asm	/^f0100434:	5d                   	pop    %ebp$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	c3                   	ret    $/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436 <kbd_proc_data>:$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	ec                   	in     (%dx),%al$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	a8 01                	test   $0x1,%al$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	0f 84 f0 00 00 00    	je     f0100534 <kbd_proc_data+0xfe>$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	ba 60 00 00 00       	mov    $0x60,%edx$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	ec                   	in     (%dx),%al$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	89 c2                	mov    %eax,%edx$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	3c e0                	cmp    $0xe0,%al$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	75 0d                	jne    f010045d <kbd_proc_data+0x27>$/;"	l
f0100450	obj/kern/kernel.asm	/^f0100450:	83 0d 20 00 28 f0 40 	orl    $0x40,0xf0280020$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	c3                   	ret    $/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	55                   	push   %ebp$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	53                   	push   %ebx$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	84 c0                	test   %al,%al$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	79 36                	jns    f010049e <kbd_proc_data+0x68>$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	8b 0d 20 00 28 f0    	mov    0xf0280020,%ecx$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	83 e3 40             	and    $0x40,%ebx$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	85 db                	test   %ebx,%ebx$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f010047b	obj/kern/kernel.asm	/^f010047b:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	0f b6 82 20 81 10 f0 	movzbl -0xfef7ee0(%edx),%eax$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	f7 d0                	not    %eax$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	21 c8                	and    %ecx,%eax$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	a3 20 00 28 f0       	mov    %eax,0xf0280020$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	e9 9e 00 00 00       	jmp    f010053c <kbd_proc_data+0x106>$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	8b 0d 20 00 28 f0    	mov    0xf0280020,%ecx$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	74 0e                	je     f01004b7 <kbd_proc_data+0x81>$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	89 c2                	mov    %eax,%edx$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	89 0d 20 00 28 f0    	mov    %ecx,0xf0280020$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	0f b6 82 20 81 10 f0 	movzbl -0xfef7ee0(%edx),%eax$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	0b 05 20 00 28 f0    	or     0xf0280020,%eax$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	0f b6 8a 20 80 10 f0 	movzbl -0xfef7fe0(%edx),%ecx$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	31 c8                	xor    %ecx,%eax$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	a3 20 00 28 f0       	mov    %eax,0xf0280020$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	89 c1                	mov    %eax,%ecx$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	8b 0c 8d 00 80 10 f0 	mov    -0xfef8000(,%ecx,4),%ecx$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	a8 08                	test   $0x8,%al$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	74 1b                	je     f0100507 <kbd_proc_data+0xd1>$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	89 da                	mov    %ebx,%edx$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	77 05                	ja     f01004fb <kbd_proc_data+0xc5>$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	eb 0c                	jmp    f0100507 <kbd_proc_data+0xd1>$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	f7 d0                	not    %eax$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	a8 06                	test   $0x6,%al$/;"	l
f010050b	obj/kern/kernel.asm	/^f010050b:	75 2d                	jne    f010053a <kbd_proc_data+0x104>$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	75 25                	jne    f010053a <kbd_proc_data+0x104>$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	68 bf 7f 10 f0       	push   $0xf0107fbf$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	e8 c6 39 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	ee                   	out    %al,(%dx)$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	89 d8                	mov    %ebx,%eax$/;"	l
f0100532	obj/kern/kernel.asm	/^f0100532:	eb 08                	jmp    f010053c <kbd_proc_data+0x106>$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	c3                   	ret    $/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	89 d8                	mov    %ebx,%eax$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	c9                   	leave  $/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	c3                   	ret    $/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541 <cons_putc>:$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	55                   	push   %ebp$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	89 e5                	mov    %esp,%ebp$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	57                   	push   %edi$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	56                   	push   %esi$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	53                   	push   %ebx$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	89 c7                	mov    %eax,%edi$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	ec                   	in     (%dx),%al$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	a8 20                	test   $0x20,%al$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	75 27                	jne    f010057d <cons_putc+0x3c>$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	89 ca                	mov    %ecx,%edx$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	ec                   	in     (%dx),%al$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	ec                   	in     (%dx),%al$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	ec                   	in     (%dx),%al$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	ec                   	in     (%dx),%al$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	89 f2                	mov    %esi,%edx$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	ec                   	in     (%dx),%al$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	a8 20                	test   $0x20,%al$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	75 08                	jne    f010057d <cons_putc+0x3c>$/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	7e e8                	jle    f0100565 <cons_putc+0x24>$/;"	l
f010057d	obj/kern/kernel.asm	/^f010057d:	89 f8                	mov    %edi,%eax$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	ee                   	out    %al,(%dx)$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	ba 79 03 00 00       	mov    $0x379,%edx$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	ec                   	in     (%dx),%al$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	84 c0                	test   %al,%al$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	78 27                	js     f01005b9 <cons_putc+0x78>$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	89 ca                	mov    %ecx,%edx$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	ec                   	in     (%dx),%al$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	ec                   	in     (%dx),%al$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	ec                   	in     (%dx),%al$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	ec                   	in     (%dx),%al$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	89 f2                	mov    %esi,%edx$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	ec                   	in     (%dx),%al$/;"	l
f01005ad	obj/kern/kernel.asm	/^f01005ad:	81 fb ff 31 00 00    	cmp    $0x31ff,%ebx$/;"	l
f01005b3	obj/kern/kernel.asm	/^f01005b3:	7f 04                	jg     f01005b9 <cons_putc+0x78>$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	84 c0                	test   %al,%al$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	79 e8                	jns    f01005a1 <cons_putc+0x60>$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	ee                   	out    %al,(%dx)$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	ba 7a 03 00 00       	mov    $0x37a,%edx$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	ee                   	out    %al,(%dx)$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	ee                   	out    %al,(%dx)$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	89 fa                	mov    %edi,%edx$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	89 f8                	mov    %edi,%eax$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	80 cc 07             	or     $0x7,%ah$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	85 d2                	test   %edx,%edx$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	89 f8                	mov    %edi,%eax$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	74 74                	je     f0100664 <cons_putc+0x123>$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	7f 0a                	jg     f01005ff <cons_putc+0xbe>$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	74 14                	je     f010060e <cons_putc+0xcd>$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	e9 99 00 00 00       	jmp    f0100698 <cons_putc+0x157>$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	74 3a                	je     f010063e <cons_putc+0xfd>$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	74 3d                	je     f0100646 <cons_putc+0x105>$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	e9 8a 00 00 00       	jmp    f0100698 <cons_putc+0x157>$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	0f b7 05 48 02 28 f0 	movzwl 0xf0280248,%eax$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	66 85 c0             	test   %ax,%ax$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	0f 84 e6 00 00 00    	je     f0100704 <cons_putc+0x1c3>$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	66 a3 48 02 28 f0    	mov    %ax,0xf0280248$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	8b 15 4c 02 28 f0    	mov    0xf028024c,%edx$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	eb 78                	jmp    f01006b6 <cons_putc+0x175>$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	66 83 05 48 02 28 f0 	addw   $0x50,0xf0280248$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	50 $/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	0f b7 05 48 02 28 f0 	movzwl 0xf0280248,%eax$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	66 a3 48 02 28 f0    	mov    %ax,0xf0280248$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	eb 52                	jmp    f01006b6 <cons_putc+0x175>$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	e8 d3 fe ff ff       	call   f0100541 <cons_putc>$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	e8 c9 fe ff ff       	call   f0100541 <cons_putc>$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	e8 bf fe ff ff       	call   f0100541 <cons_putc>$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	e8 b5 fe ff ff       	call   f0100541 <cons_putc>$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100691	obj/kern/kernel.asm	/^f0100691:	e8 ab fe ff ff       	call   f0100541 <cons_putc>$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	eb 1e                	jmp    f01006b6 <cons_putc+0x175>$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	0f b7 05 48 02 28 f0 	movzwl 0xf0280248,%eax$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	66 89 15 48 02 28 f0 	mov    %dx,0xf0280248$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	8b 15 4c 02 28 f0    	mov    0xf028024c,%edx$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	66 81 3d 48 02 28 f0 	cmpw   $0x7cf,0xf0280248$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	cf 07 $/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	76 43                	jbe    f0100704 <cons_putc+0x1c3>$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	a1 4c 02 28 f0       	mov    0xf028024c,%eax$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	68 00 0f 00 00       	push   $0xf00$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	52                   	push   %edx$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	50                   	push   %eax$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	e8 54 60 00 00       	call   f010672f <memmove>$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	8b 15 4c 02 28 f0    	mov    0xf028024c,%edx$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eax$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	81 c2 a0 0f 00 00    	add    $0xfa0,%edx$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	83 c0 02             	add    $0x2,%eax$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	39 c2                	cmp    %eax,%edx$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	75 f4                	jne    f01006f0 <cons_putc+0x1af>$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	66 83 2d 48 02 28 f0 	subw   $0x50,0xf0280248$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	50 $/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	8b 0d 50 02 28 f0    	mov    0xf0280250,%ecx$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	ee                   	out    %al,(%dx)$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	0f b7 1d 48 02 28 f0 	movzwl 0xf0280248,%ebx$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f010071c	obj/kern/kernel.asm	/^f010071c:	89 d8                	mov    %ebx,%eax$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	89 f2                	mov    %esi,%edx$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	ee                   	out    %al,(%dx)$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	89 ca                	mov    %ecx,%edx$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	ee                   	out    %al,(%dx)$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	89 d8                	mov    %ebx,%eax$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	89 f2                	mov    %esi,%edx$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	ee                   	out    %al,(%dx)$/;"	l
f0100732	obj/kern/kernel.asm	/^f0100732:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	5b                   	pop    %ebx$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	5e                   	pop    %esi$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	5f                   	pop    %edi$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	5d                   	pop    %ebp$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	c3                   	ret    $/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a <serial_intr>:$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	83 3d 54 02 28 f0 00 	cmpl   $0x0,0xf0280254$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	74 11                	je     f0100754 <serial_intr+0x1a>$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	55                   	push   %ebp$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	89 e5                	mov    %esp,%ebp$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	b8 d4 03 10 f0       	mov    $0xf01003d4,%eax$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	e8 a0 fc ff ff       	call   f01003f3 <cons_intr>$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	c9                   	leave  $/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	f3 c3                	repz ret $/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756 <kbd_intr>:$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	55                   	push   %ebp$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	89 e5                	mov    %esp,%ebp$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	b8 36 04 10 f0       	mov    $0xf0100436,%eax$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	e8 8d fc ff ff       	call   f01003f3 <cons_intr>$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	c9                   	leave  $/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	c3                   	ret    $/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768 <cons_getc>:$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	55                   	push   %ebp$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	89 e5                	mov    %esp,%ebp$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	e8 c7 ff ff ff       	call   f010073a <serial_intr>$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	e8 de ff ff ff       	call   f0100756 <kbd_intr>$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	a1 40 02 28 f0       	mov    0xf0280240,%eax$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	3b 05 44 02 28 f0    	cmp    0xf0280244,%eax$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	74 26                	je     f01007ab <cons_getc+0x43>$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	89 15 40 02 28 f0    	mov    %edx,0xf0280240$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	0f b6 88 40 00 28 f0 	movzbl -0xfd7ffc0(%eax),%ecx$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	89 c8                	mov    %ecx,%eax$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	75 11                	jne    f01007b0 <cons_getc+0x48>$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	c7 05 40 02 28 f0 00 	movl   $0x0,0xf0280240$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	00 00 00 $/;"	l
f01007a9	obj/kern/kernel.asm	/^f01007a9:	eb 05                	jmp    f01007b0 <cons_getc+0x48>$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	c9                   	leave  $/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	c3                   	ret    $/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2 <cons_init>:$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	55                   	push   %ebp$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	57                   	push   %edi$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	56                   	push   %esi$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	53                   	push   %ebx$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01007bb	obj/kern/kernel.asm	/^f01007bb:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	5a a5 $/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	74 11                	je     f01007e9 <cons_init+0x37>$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	c7 05 50 02 28 f0 b4 	movl   $0x3b4,0xf0280250$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	03 00 00 $/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	eb 16                	jmp    f01007ff <cons_init+0x4d>$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	c7 05 50 02 28 f0 d4 	movl   $0x3d4,0xf0280250$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	03 00 00 $/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	8b 3d 50 02 28 f0    	mov    0xf0280250,%edi$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	89 fa                	mov    %edi,%edx$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	ee                   	out    %al,(%dx)$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	89 da                	mov    %ebx,%edx$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	ec                   	in     (%dx),%al$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	89 fa                	mov    %edi,%edx$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	ee                   	out    %al,(%dx)$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	89 da                	mov    %ebx,%edx$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	ec                   	in     (%dx),%al$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	89 35 4c 02 28 f0    	mov    %esi,0xf028024c$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	09 c8                	or     %ecx,%eax$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	66 a3 48 02 28 f0    	mov    %ax,0xf0280248$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	e8 1c ff ff ff       	call   f0100756 <kbd_intr>$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	0f b7 05 88 63 12 f0 	movzwl 0xf0126388,%eax$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	50                   	push   %eax$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	e8 2f 35 00 00       	call   f0103d7e <irq_setmask_8259A>$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	89 f2                	mov    %esi,%edx$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	ee                   	out    %al,(%dx)$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	ee                   	out    %al,(%dx)$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	89 da                	mov    %ebx,%edx$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	ee                   	out    %al,(%dx)$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	ee                   	out    %al,(%dx)$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	ba fb 03 00 00       	mov    $0x3fb,%edx$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	ee                   	out    %al,(%dx)$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	ba fc 03 00 00       	mov    $0x3fc,%edx$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	ee                   	out    %al,(%dx)$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	ba f9 03 00 00       	mov    $0x3f9,%edx$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	ee                   	out    %al,(%dx)$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	ec                   	in     (%dx),%al$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	89 c1                	mov    %eax,%ecx$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	3c ff                	cmp    $0xff,%al$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	0f 95 c0             	setne  %al$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	a3 54 02 28 f0       	mov    %eax,0xf0280254$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	89 f2                	mov    %esi,%edx$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	ec                   	in     (%dx),%al$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	89 da                	mov    %ebx,%edx$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	ec                   	in     (%dx),%al$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	80 f9 ff             	cmp    $0xff,%cl$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	75 10                	jne    f01008d3 <cons_init+0x121>$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	68 cb 7f 10 f0       	push   $0xf0107fcb$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	e8 18 36 00 00       	call   f0103ee8 <cprintf>$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	5b                   	pop    %ebx$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	5e                   	pop    %esi$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	5f                   	pop    %edi$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	5d                   	pop    %ebp$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	c3                   	ret    $/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db <cputchar>:$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	55                   	push   %ebp$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	e8 58 fc ff ff       	call   f0100541 <cons_putc>$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	c9                   	leave  $/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	c3                   	ret    $/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb <getchar>:$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	55                   	push   %ebp$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	e8 72 fe ff ff       	call   f0100768 <cons_getc>$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	85 c0                	test   %eax,%eax$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	74 f7                	je     f01008f1 <getchar+0x6>$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	c9                   	leave  $/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	c3                   	ret    $/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc <iscons>:$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	55                   	push   %ebp$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100904	obj/kern/kernel.asm	/^f0100904:	5d                   	pop    %ebp$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	c3                   	ret    $/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906 <mon_help>:$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	55                   	push   %ebp$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	89 e5                	mov    %esp,%ebp$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	56                   	push   %esi$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	53                   	push   %ebx$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	bb 64 85 10 f0       	mov    $0xf0108564,%ebx$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	be b8 85 10 f0       	mov    $0xf01085b8,%esi$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	ff 33                	pushl  (%ebx)$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	ff 73 fc             	pushl  -0x4(%ebx)$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	68 20 82 10 f0       	push   $0xf0108220$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	e8 c1 35 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	39 f3                	cmp    %esi,%ebx$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	75 e4                	jne    f0100915 <mon_help+0xf>$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	5b                   	pop    %ebx$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	5e                   	pop    %esi$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	5d                   	pop    %ebp$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	c3                   	ret    $/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d <mon_kerninfo>:$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	55                   	push   %ebp$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	68 29 82 10 f0       	push   $0xf0108229$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	e8 9b 35 00 00       	call   f0103ee8 <cprintf>$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f010095a	obj/kern/kernel.asm	/^f010095a:	68 98 83 10 f0       	push   $0xf0108398$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	e8 84 35 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	68 91 7e 10 00       	push   $0x107e91$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	68 91 7e 10 f0       	push   $0xf0107e91$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	68 bc 83 10 f0       	push   $0xf01083bc$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	e8 6d 35 00 00       	call   f0103ee8 <cprintf>$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	68 28 f2 27 00       	push   $0x27f228$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	68 28 f2 27 f0       	push   $0xf027f228$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	68 e0 83 10 f0       	push   $0xf01083e0$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	e8 56 35 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	68 90 a7 31 00       	push   $0x31a790$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	68 90 a7 31 f0       	push   $0xf031a790$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	68 04 84 10 f0       	push   $0xf0108404$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	e8 3f 35 00 00       	call   f0103ee8 <cprintf>$/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9:	83 c4 08             	add    $0x8,%esp$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	b8 8f ab 31 f0       	mov    $0xf031ab8f,%eax$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	85 c0                	test   %eax,%eax$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	50                   	push   %eax$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	68 28 84 10 f0       	push   $0xf0108428$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	e8 19 35 00 00       	call   f0103ee8 <cprintf>$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	c9                   	leave  $/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	c3                   	ret    $/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6 <mon_debug_display>:$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	55                   	push   %ebp$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009dc	obj/kern/kernel.asm	/^f01009dc:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	74 17                	je     f01009f9 <mon_debug_display+0x23>$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	68 42 82 10 f0       	push   $0xf0108242$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	e8 f9 34 00 00       	call   f0103ee8 <cprintf>$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01009f7	obj/kern/kernel.asm	/^f01009f7:	eb 29                	jmp    f0100a22 <mon_debug_display+0x4c>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	6a 10                	push   $0x10$/;"	l
f01009fe	obj/kern/kernel.asm	/^f01009fe:	6a 00                	push   $0x0$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	e8 2a 5e 00 00       	call   f0106835 <strtol>$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	ff 30                	pushl  (%eax)$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	68 89 92 10 f0       	push   $0xf0109289$/;"	l
f0100a15	obj/kern/kernel.asm	/^f0100a15:	e8 ce 34 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	c9                   	leave  $/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	c3                   	ret    $/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24 <mon_debug_step>:$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	55                   	push   %ebp$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	85 c0                	test   %eax,%eax$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	74 2d                	je     f0100a5e <mon_debug_step+0x3a>$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	ff 70 30             	pushl  0x30(%eax)$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	68 69 82 10 f0       	push   $0xf0108269$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	e8 a0 34 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	e8 0a 63 00 00       	call   f0106d57 <cpunum>$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	e8 0b 32 00 00       	call   f0103c69 <env_run>$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	68 55 82 10 f0       	push   $0xf0108255$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	e8 7d 34 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	c9                   	leave  $/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	c3                   	ret    $/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72 <mon_debug_continue>:$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	55                   	push   %ebp$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a75	obj/kern/kernel.asm	/^f0100a75:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	85 c0                	test   %eax,%eax$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	74 1d                	je     f0100a9c <mon_debug_continue+0x2a>$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	e8 cc 62 00 00       	call   f0106d57 <cpunum>$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	e8 cd 31 00 00       	call   f0103c69 <env_run>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	68 55 82 10 f0       	push   $0xf0108255$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	e8 3f 34 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	c9                   	leave  $/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	c3                   	ret    $/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0 <mon_backtrace>:$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	55                   	push   %ebp$/;"	l
f0100ab1	obj/kern/kernel.asm	/^f0100ab1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	57                   	push   %edi$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	56                   	push   %esi$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	53                   	push   %ebx$/;"	l
f0100ab6	obj/kern/kernel.asm	/^f0100ab6:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	89 ee                	mov    %ebp,%esi$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	68 76 82 10 f0       	push   $0xf0108276$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	e8 23 34 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	85 f6                	test   %esi,%esi$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	0f 84 97 00 00 00    	je     f0100b67 <mon_backtrace+0xb7>$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	89 f3                	mov    %esi,%ebx$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	53                   	push   %ebx$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	56                   	push   %esi$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	68 54 84 10 f0       	push   $0xf0108454$/;"	l
f0100af1	obj/kern/kernel.asm	/^f0100af1:	e8 f2 33 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	83 c4 18             	add    $0x18,%esp$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	56                   	push   %esi$/;"	l
f0100afd	obj/kern/kernel.asm	/^f0100afd:	e8 3e 4e 00 00       	call   f0105940 <debuginfo_eip>$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	85 c0                	test   %eax,%eax$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	75 54                	jne    f0100b5d <mon_backtrace+0xad>$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	89 65 c0             	mov    %esp,-0x40(%ebp)$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	8d 41 10             	lea    0x10(%ecx),%eax$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	bf 10 00 00 00       	mov    $0x10,%edi$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	f7 f7                	div    %edi$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	29 c4                	sub    %eax,%esp$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	89 e0                	mov    %esp,%eax$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	89 e7                	mov    %esp,%edi$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	c6 04 0c 00          	movb   $0x0,(%esp,%ecx,1)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	51                   	push   %ecx$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	50                   	push   %eax$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	e8 4a 5a 00 00       	call   f0106582 <strncpy>$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	85 c0                	test   %eax,%eax$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	74 1b                	je     f0100b5a <mon_backtrace+0xaa>$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	2b 75 e0             	sub    -0x20(%ebp),%esi$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	56                   	push   %esi$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	57                   	push   %edi$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	68 88 82 10 f0       	push   $0xf0108288$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	e8 91 33 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	8b 65 c0             	mov    -0x40(%ebp),%esp$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	85 db                	test   %ebx,%ebx$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	0f 85 71 ff ff ff    	jne    f0100ad8 <mon_backtrace+0x28>$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	68 98 82 10 f0       	push   $0xf0108298$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	e8 74 33 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	5b                   	pop    %ebx$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	5e                   	pop    %esi$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	5f                   	pop    %edi$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	5d                   	pop    %ebp$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	c3                   	ret    $/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81 <mon_time>:$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	55                   	push   %ebp$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	57                   	push   %edi$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	56                   	push   %esi$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	53                   	push   %ebx$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	74 0c                	je     f0100b9f <mon_time+0x1e>$/;"	l
f0100b93	obj/kern/kernel.asm	/^f0100b93:	bf 60 85 10 f0       	mov    $0xf0108560,%edi$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	eb 1d                	jmp    f0100bbc <mon_time+0x3b>$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	68 ab 82 10 f0       	push   $0xf01082ab$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	e8 3c 33 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	eb 7a                	jmp    f0100c2b <mon_time+0xaa>$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	83 c7 0c             	add    $0xc,%edi$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	74 19                	je     f0100bd5 <mon_time+0x54>$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	ff 37                	pushl  (%edi)$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	e8 37 5a 00 00       	call   f0106600 <strcmp>$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	85 c0                	test   %eax,%eax$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	75 e1                	jne    f0100bb1 <mon_time+0x30>$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	75 15                	jne    f0100bea <mon_time+0x69>$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	68 c2 82 10 f0       	push   $0xf01082c2$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	e8 03 33 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	eb 41                	jmp    f0100c2b <mon_time+0xaa>$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	0f 31                	rdtsc  $/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	8d 14 5b             	lea    (%ebx,%ebx,2),%edx$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	8d 46 04             	lea    0x4(%esi),%eax$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	50                   	push   %eax$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	50                   	push   %eax$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	ff 14 95 68 85 10 f0 	call   *-0xfef7a98(,%edx,4)$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	0f 31                	rdtsc  $/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	89 d3                	mov    %edx,%ebx$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	2b 4d e0             	sub    -0x20(%ebp),%ecx$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	1b 5d e4             	sbb    -0x1c(%ebp),%ebx$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	53                   	push   %ebx$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	51                   	push   %ecx$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	ff 76 04             	pushl  0x4(%esi)$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	68 d7 82 10 f0       	push   $0xf01082d7$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	e8 c0 32 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	5b                   	pop    %ebx$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	5e                   	pop    %esi$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	5f                   	pop    %edi$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	5d                   	pop    %ebp$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	c3                   	ret    $/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38 <rdtsc>:$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	55                   	push   %ebp$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	0f 31                	rdtsc  $/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	5d                   	pop    %ebp$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	c3                   	ret    $/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f <monitor>:$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	55                   	push   %ebp$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	57                   	push   %edi$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	56                   	push   %esi$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	53                   	push   %ebx$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	68 8c 84 10 f0       	push   $0xf010848c$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	e8 96 32 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	c7 04 24 b0 84 10 f0 	movl   $0xf01084b0,(%esp)$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	e8 8a 32 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	74 0e                	je     f0100c75 <monitor+0x36>$/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	e8 35 3a 00 00       	call   f01046a7 <print_trapframe>$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	68 e8 82 10 f0       	push   $0xf01082e8$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	e8 8a 57 00 00       	call   f010640c <readline>$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	89 c3                	mov    %eax,%ebx$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	85 c0                	test   %eax,%eax$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	74 ea                	je     f0100c75 <monitor+0x36>$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	eb 0a                	jmp    f0100ca3 <monitor+0x64>$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	89 f7                	mov    %esi,%edi$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	89 fe                	mov    %edi,%esi$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	84 c0                	test   %al,%al$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	74 6a                	je     f0100d14 <monitor+0xd5>$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100cad	obj/kern/kernel.asm	/^f0100cad:	0f be c0             	movsbl %al,%eax$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	50                   	push   %eax$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	68 ec 82 10 f0       	push   $0xf01082ec$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	e8 c9 59 00 00       	call   f0106684 <strchr>$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	85 c0                	test   %eax,%eax$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	75 d7                	jne    f0100c99 <monitor+0x5a>$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	74 4d                	je     f0100d14 <monitor+0xd5>$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	75 14                	jne    f0100ce0 <monitor+0xa1>$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	6a 10                	push   $0x10$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	68 f1 82 10 f0       	push   $0xf01082f1$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	e8 0d 32 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	eb 95                	jmp    f0100c75 <monitor+0x36>$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	84 c0                	test   %al,%al$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	75 0c                	jne    f0100cfa <monitor+0xbb>$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	eb b1                	jmp    f0100ca1 <monitor+0x62>$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	84 c0                	test   %al,%al$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	74 a7                	je     f0100ca1 <monitor+0x62>$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	0f be c0             	movsbl %al,%eax$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	50                   	push   %eax$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	68 ec 82 10 f0       	push   $0xf01082ec$/;"	l
f0100d06	obj/kern/kernel.asm	/^f0100d06:	e8 79 59 00 00       	call   f0106684 <strchr>$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	85 c0                	test   %eax,%eax$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	74 de                	je     f0100cf0 <monitor+0xb1>$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	eb 8d                	jmp    f0100ca1 <monitor+0x62>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	00 $/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	85 f6                	test   %esi,%esi$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	0f 84 51 ff ff ff    	je     f0100c75 <monitor+0x36>$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d2c	obj/kern/kernel.asm	/^f0100d2c:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	ff 34 85 60 85 10 f0 	pushl  -0xfef7aa0(,%eax,4)$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	e8 c2 58 00 00       	call   f0106600 <strcmp>$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	85 c0                	test   %eax,%eax$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	75 21                	jne    f0100d66 <monitor+0x127>$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	52                   	push   %edx$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	56                   	push   %esi$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	ff 14 85 68 85 10 f0 	call   *-0xfef7a98(,%eax,4)$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	85 c0                	test   %eax,%eax$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	78 25                	js     f0100d86 <monitor+0x147>$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	e9 0f ff ff ff       	jmp    f0100c75 <monitor+0x36>$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	75 bb                	jne    f0100d29 <monitor+0xea>$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	68 0e 83 10 f0       	push   $0xf010830e$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	e8 6a 31 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	e9 ef fe ff ff       	jmp    f0100c75 <monitor+0x36>$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	5b                   	pop    %ebx$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	5e                   	pop    %esi$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	5f                   	pop    %edi$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	5d                   	pop    %ebp$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	c3                   	ret    $/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e <read_eip>:$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	55                   	push   %ebp$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	5d                   	pop    %ebp$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	c3                   	ret    $/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96 <check_continuous>:$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	8d 4a ff             	lea    -0x1(%edx),%ecx$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	85 c9                	test   %ecx,%ecx$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	7e 63                	jle    f0100e00 <check_continuous+0x6a>$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	85 c0                	test   %eax,%eax$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	74 65                	je     f0100e06 <check_continuous+0x70>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	55                   	push   %ebp$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	57                   	push   %edi$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	56                   	push   %esi$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	53                   	push   %ebx$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	8b 08                	mov    (%eax),%ecx$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	8b 35 c0 0e 28 f0    	mov    0xf0280ec0,%esi$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	29 f3                	sub    %esi,%ebx$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	29 f0                	sub    %esi,%eax$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	29 c3                	sub    %eax,%ebx$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	81 fb 00 10 00 00    	cmp    $0x1000,%ebx$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	75 44                	jne    f0100e0c <check_continuous+0x76>$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	8d 7a ff             	lea    -0x1(%edx),%edi$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	eb 20                	jmp    f0100df2 <check_continuous+0x5c>$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	85 c9                	test   %ecx,%ecx$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	74 3d                	je     f0100e13 <check_continuous+0x7d>$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	8b 19                	mov    (%ecx),%ebx$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	89 d8                	mov    %ebx,%eax$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	29 f0                	sub    %esi,%eax$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	29 f1                	sub    %esi,%ecx$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	29 c8                	sub    %ecx,%eax$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	75 2a                	jne    f0100e1a <check_continuous+0x84>$/;"	l
f0100df0	obj/kern/kernel.asm	/^f0100df0:	89 d9                	mov    %ebx,%ecx$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	39 fa                	cmp    %edi,%edx$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	75 d9                	jne    f0100dd2 <check_continuous+0x3c>$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	eb 1f                	jmp    f0100e1f <check_continuous+0x89>$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	c3                   	ret    $/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	c3                   	ret    $/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	eb 0c                	jmp    f0100e1f <check_continuous+0x89>$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	eb 05                	jmp    f0100e1f <check_continuous+0x89>$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	5b                   	pop    %ebx$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	5e                   	pop    %esi$/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	5f                   	pop    %edi$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	5d                   	pop    %ebp$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	c3                   	ret    $/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24 <check_va2pa>:$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	89 d1                	mov    %edx,%ecx$/;"	l
f0100e26	obj/kern/kernel.asm	/^f0100e26:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	a8 01                	test   $0x1,%al$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	74 52                	je     f0100e82 <check_va2pa+0x5e>$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	89 c1                	mov    %eax,%ecx$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	3b 0d b8 0e 28 f0    	cmp    0xf0280eb8,%ecx$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	72 1b                	jb     f0100e5d <check_va2pa+0x39>$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	55                   	push   %ebp$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	50                   	push   %eax$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0100e4e	obj/kern/kernel.asm	/^f0100e4e:	68 21 04 00 00       	push   $0x421$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	e8 e3 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	89 c2                	mov    %eax,%edx$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	85 d2                	test   %edx,%edx$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	c3                   	ret    $/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	c3                   	ret    $/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88 <boot_alloc>:$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	89 c2                	mov    %eax,%edx$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	83 3d 58 02 28 f0 00 	cmpl   $0x0,0xf0280258$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	75 0f                	jne    f0100ea2 <boot_alloc+0x1a>$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	b8 8f b7 31 f0       	mov    $0xf031b78f,%eax$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	a3 58 02 28 f0       	mov    %eax,0xf0280258$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	a1 58 02 28 f0       	mov    0xf0280258,%eax$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	85 d2                	test   %edx,%edx$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	74 64                	je     f0100f0f <boot_alloc+0x87>$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	55                   	push   %ebp$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	89 e5                	mov    %esp,%ebp$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	53                   	push   %ebx$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	01 c2                	add    %eax,%edx$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	89 15 58 02 28 f0    	mov    %edx,0xf0280258$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	77 12                	ja     f0100ed4 <boot_alloc+0x4c>$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	52                   	push   %edx$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	6a 6f                	push   $0x6f$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	e8 6c f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	8d 8a 00 00 00 10    	lea    0x10000000(%edx),%ecx$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	39 1d b8 0e 28 f0    	cmp    %ebx,0xf0280eb8$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	77 12                	ja     f0100ef9 <boot_alloc+0x71>$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	51                   	push   %ecx$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	6a 6f                	push   $0x6f$/;"	l
f0100eef	obj/kern/kernel.asm	/^f0100eef:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	e8 47 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	89 15 58 02 28 f0    	mov    %edx,0xf0280258$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	c9                   	leave  $/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	f3 c3                	repz ret $/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11 <check_page_free_list>:$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	55                   	push   %ebp$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	57                   	push   %edi$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	56                   	push   %esi$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	53                   	push   %ebx$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	85 c0                	test   %eax,%eax$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	0f 85 d0 02 00 00    	jne    f01011f2 <check_page_free_list+0x2e1>$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	8b 1d 64 02 28 f0    	mov    0xf0280264,%ebx$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	85 db                	test   %ebx,%ebx$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	75 6c                	jne    f0100f98 <check_page_free_list+0x87>$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	68 b4 85 10 f0       	push   $0xf01085b4$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	68 48 03 00 00       	push   $0x348$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	e8 fd f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	89 c2                	mov    %eax,%edx$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	0f 95 c2             	setne  %dl$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100f63	obj/kern/kernel.asm	/^f0100f63:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	85 c0                	test   %eax,%eax$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	75 dc                	jne    f0100f4f <check_page_free_list+0x3e>$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	89 10                	mov    %edx,(%eax)$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	89 1d 64 02 28 f0    	mov    %ebx,0xf0280264$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	85 db                	test   %ebx,%ebx$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	74 63                	je     f0100ff4 <check_page_free_list+0xe3>$/;"	l
f0100f91	obj/kern/kernel.asm	/^f0100f91:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	eb 05                	jmp    f0100f9d <check_page_free_list+0x8c>$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	89 d8                	mov    %ebx,%eax$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	89 c2                	mov    %eax,%edx$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	39 d6                	cmp    %edx,%esi$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	76 3a                	jbe    f0100fee <check_page_free_list+0xdd>$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	89 c2                	mov    %eax,%edx$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	72 12                	jb     f0100fd3 <check_page_free_list+0xc2>$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	50                   	push   %eax$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	6a 56                	push   $0x56$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	e8 6d f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	68 80 00 00 00       	push   $0x80$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	68 97 00 00 00       	push   $0x97$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	50                   	push   %eax$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	e8 f7 56 00 00       	call   f01066e2 <memset>$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	85 db                	test   %ebx,%ebx$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	75 a9                	jne    f0100f9d <check_page_free_list+0x8c>$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	e8 8a fe ff ff       	call   f0100e88 <boot_alloc>$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	8b 15 64 02 28 f0    	mov    0xf0280264,%edx$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	85 d2                	test   %edx,%edx$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	0f 84 ad 01 00 00    	je     f01011bc <check_page_free_list+0x2ab>$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	8b 0d c0 0e 28 f0    	mov    0xf0280ec0,%ecx$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	72 49                	jb     f0101062 <check_page_free_list+0x151>$/;"	l
f0101019	obj/kern/kernel.asm	/^f0101019:	a1 b8 0e 28 f0       	mov    0xf0280eb8,%eax$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	39 c2                	cmp    %eax,%edx$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	73 55                	jae    f0101080 <check_page_free_list+0x16f>$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	89 d0                	mov    %edx,%eax$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	29 c8                	sub    %ecx,%eax$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	a8 07                	test   $0x7,%al$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	75 6c                	jne    f01010a2 <check_page_free_list+0x191>$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	85 c0                	test   %eax,%eax$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	0f 84 81 00 00 00    	je     f01010c5 <check_page_free_list+0x1b4>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	0f 84 96 00 00 00    	je     f01010e5 <check_page_free_list+0x1d4>$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	e9 a0 00 00 00       	jmp    f01010fe <check_page_free_list+0x1ed>$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	73 19                	jae    f010107b <check_page_free_list+0x16a>$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	68 ef 8c 10 f0       	push   $0xf0108cef$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	68 63 03 00 00       	push   $0x363$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	e8 c5 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	72 19                	jb     f0101099 <check_page_free_list+0x188>$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	68 10 8d 10 f0       	push   $0xf0108d10$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	68 64 03 00 00       	push   $0x364$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	e8 a7 ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	89 d0                	mov    %edx,%eax$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	a8 07                	test   $0x7,%al$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	74 19                	je     f01010bb <check_page_free_list+0x1aa>$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	68 d8 85 10 f0       	push   $0xf01085d8$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	68 65 03 00 00       	push   $0x365$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	e8 85 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	85 c0                	test   %eax,%eax$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	75 19                	jne    f01010de <check_page_free_list+0x1cd>$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	68 24 8d 10 f0       	push   $0xf0108d24$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	68 68 03 00 00       	push   $0x368$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	e8 62 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	75 19                	jne    f01010fe <check_page_free_list+0x1ed>$/;"	l
f01010e5	obj/kern/kernel.asm	/^f01010e5:	68 35 8d 10 f0       	push   $0xf0108d35$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	68 69 03 00 00       	push   $0x369$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	e8 42 ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	75 19                	jne    f010111e <check_page_free_list+0x20d>$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	68 0c 86 10 f0       	push   $0xf010860c$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	68 6a 03 00 00       	push   $0x36a$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	e8 22 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	75 19                	jne    f010113e <check_page_free_list+0x22d>$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	68 4e 8d 10 f0       	push   $0xf0108d4e$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	68 6b 03 00 00       	push   $0x36b$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	e8 02 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	0f 86 bb 00 00 00    	jbe    f0101204 <check_page_free_list+0x2f3>$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	89 c7                	mov    %eax,%edi$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	39 7d c8             	cmp    %edi,-0x38(%ebp)$/;"	l
f0101151	obj/kern/kernel.asm	/^f0101151:	77 12                	ja     f0101165 <check_page_free_list+0x254>$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	50                   	push   %eax$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	6a 56                	push   $0x56$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	e8 db ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	0f 86 99 00 00 00    	jbe    f010120d <check_page_free_list+0x2fc>$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	68 30 86 10 f0       	push   $0xf0108630$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	68 6c 03 00 00       	push   $0x36c$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	e8 b3 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	68 68 8d 10 f0       	push   $0xf0108d68$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	68 6e 03 00 00       	push   $0x36e$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	e8 9a ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	83 c6 01             	add    $0x1,%esi$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	eb 03                	jmp    f01011ae <check_page_free_list+0x29d>$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	8b 12                	mov    (%edx),%edx$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	85 d2                	test   %edx,%edx$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	0f 85 a6 fe ff ff    	jne    f010105e <check_page_free_list+0x14d>$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	85 f6                	test   %esi,%esi$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	7f 19                	jg     f01011d5 <check_page_free_list+0x2c4>$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	68 85 8d 10 f0       	push   $0xf0108d85$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	68 76 03 00 00       	push   $0x376$/;"	l
f01011cb	obj/kern/kernel.asm	/^f01011cb:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	e8 6b ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	85 db                	test   %ebx,%ebx$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	7f 40                	jg     f0101219 <check_page_free_list+0x308>$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	68 97 8d 10 f0       	push   $0xf0108d97$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	68 77 03 00 00       	push   $0x377$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	e8 4e ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	a1 64 02 28 f0       	mov    0xf0280264,%eax$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	85 c0                	test   %eax,%eax$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	0f 85 44 fd ff ff    	jne    f0100f43 <check_page_free_list+0x32>$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	e9 28 fd ff ff       	jmp    f0100f2c <check_page_free_list+0x1b>$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	75 9b                	jne    f01011a6 <check_page_free_list+0x295>$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	eb 80                	jmp    f010118d <check_page_free_list+0x27c>$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	75 97                	jne    f01011ab <check_page_free_list+0x29a>$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	e9 74 ff ff ff       	jmp    f010118d <check_page_free_list+0x27c>$/;"	l
f0101219	obj/kern/kernel.asm	/^f0101219:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	5b                   	pop    %ebx$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	5e                   	pop    %esi$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	5f                   	pop    %edi$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	5d                   	pop    %ebp$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	c3                   	ret    $/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221 <page_init>:$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	c7 05 64 02 28 f0 00 	movl   $0x0,0xf0280264$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	00 00 00 $/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	83 3d b8 0e 28 f0 00 	cmpl   $0x0,0xf0280eb8$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	0f 85 92 00 00 00    	jne    f01012ca <page_init+0xa9>$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	c7 05 60 02 28 f0 00 	movl   $0x0,0xf0280260$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	00 00 00 $/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	c3                   	ret    $/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	8d 34 dd 00 00 00 00 	lea    0x0(,%ebx,8),%esi$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	a1 c0 0e 28 f0       	mov    0xf0280ec0,%eax$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	66 c7 44 30 04 00 00 	movw   $0x0,0x4(%eax,%esi,1)$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	85 db                	test   %ebx,%ebx$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	74 59                	je     f01012b3 <page_init+0x92>$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	81 fb 9f 00 00 00    	cmp    $0x9f,%ebx$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	76 32                	jbe    f0101294 <page_init+0x73>$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	e8 1c fc ff ff       	call   f0100e88 <boot_alloc>$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	77 15                	ja     f0101288 <page_init+0x67>$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	50                   	push   %eax$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	68 4a 01 00 00       	push   $0x14a$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	e8 b8 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	39 d8                	cmp    %ebx,%eax$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	77 1f                	ja     f01012b3 <page_init+0x92>$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	74 1a                	je     f01012b3 <page_init+0x92>$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	8b 15 64 02 28 f0    	mov    0xf0280264,%edx$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	a1 c0 0e 28 f0       	mov    0xf0280ec0,%eax$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	89 14 30             	mov    %edx,(%eax,%esi,1)$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	03 35 c0 0e 28 f0    	add    0xf0280ec0,%esi$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	89 35 64 02 28 f0    	mov    %esi,0xf0280264$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	39 1d b8 0e 28 f0    	cmp    %ebx,0xf0280eb8$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	77 85                	ja     f0101243 <page_init+0x22>$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	c7 05 60 02 28 f0 00 	movl   $0x0,0xf0280260$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	00 00 00 $/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	eb 17                	jmp    f01012e1 <page_init+0xc0>$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	55                   	push   %ebp$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	56                   	push   %esi$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	53                   	push   %ebx$/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	a1 c0 0e 28 f0       	mov    0xf0280ec0,%eax$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	eb d2                	jmp    f01012b3 <page_init+0x92>$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	5b                   	pop    %ebx$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	5e                   	pop    %esi$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	5d                   	pop    %ebp$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	c3                   	ret    $/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8 <page_alloc>:$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	55                   	push   %ebp$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	53                   	push   %ebx$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	8b 1d 64 02 28 f0    	mov    0xf0280264,%ebx$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	85 db                	test   %ebx,%ebx$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	74 58                	je     f0101351 <page_alloc+0x69>$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	a3 64 02 28 f0       	mov    %eax,0xf0280264$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	74 45                	je     f0101351 <page_alloc+0x69>$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	89 d8                	mov    %ebx,%eax$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	89 c2                	mov    %eax,%edx$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010131f	obj/kern/kernel.asm	/^f010131f:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	72 12                	jb     f0101339 <page_alloc+0x51>$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	50                   	push   %eax$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	6a 56                	push   $0x56$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	e8 07 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	6a 00                	push   $0x0$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	50                   	push   %eax$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	e8 94 53 00 00       	call   f01066e2 <memset>$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	89 d8                	mov    %ebx,%eax$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	c9                   	leave  $/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	c3                   	ret    $/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358 <page_alloc_npages_helper>:$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	55                   	push   %ebp$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	89 e5                	mov    %esp,%ebp$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	57                   	push   %edi$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	56                   	push   %esi$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	53                   	push   %ebx$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	85 db                	test   %ebx,%ebx$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	0f 84 35 01 00 00    	je     f01014a1 <page_alloc_npages_helper+0x149>$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	0f 8e 2b 01 00 00    	jle    f01014a1 <page_alloc_npages_helper+0x149>$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	a1 c0 0e 28 f0       	mov    0xf0280ec0,%eax$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	89 d8                	mov    %ebx,%eax$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	8b 08                	mov    (%eax),%ecx$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	85 c9                	test   %ecx,%ecx$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	75 11                	jne    f01013a1 <page_alloc_npages_helper+0x49>$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	0f 8e 21 01 00 00    	jle    f01014bd <page_alloc_npages_helper+0x165>$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	e9 07 01 00 00       	jmp    f01014a8 <page_alloc_npages_helper+0x150>$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	89 c2                	mov    %eax,%edx$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	29 fa                	sub    %edi,%edx$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	89 cb                	mov    %ecx,%ebx$/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	29 fb                	sub    %edi,%ebx$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	89 df                	mov    %ebx,%edi$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	c1 ff 03             	sar    $0x3,%edi$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	29 fa                	sub    %edi,%edx$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	81 fa 00 10 00 00    	cmp    $0x1000,%edx$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	0f 45 75 0c          	cmovne 0xc(%ebp),%esi$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	89 cb                	mov    %ecx,%ebx$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	0f 44 5d 10          	cmove  0x10(%ebp),%ebx$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01013cc	obj/kern/kernel.asm	/^f01013cc:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	0f 45 d8             	cmovne %eax,%ebx$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	0f 44 c8             	cmove  %eax,%ecx$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	8b 01                	mov    (%ecx),%eax$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	85 f6                	test   %esi,%esi$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	7e 04                	jle    f01013e5 <page_alloc_npages_helper+0x8d>$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	85 c0                	test   %eax,%eax$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	75 a5                	jne    f010138a <page_alloc_npages_helper+0x32>$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	89 c1                	mov    %eax,%ecx$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	85 f6                	test   %esi,%esi$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	0f 85 bd 00 00 00    	jne    f01014af <page_alloc_npages_helper+0x157>$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	85 f6                	test   %esi,%esi$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	74 04                	je     f01013fd <page_alloc_npages_helper+0xa5>$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	8b 01                	mov    (%ecx),%eax$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	89 06                	mov    %eax,(%esi)$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	74 27                	je     f0101430 <page_alloc_npages_helper+0xd8>$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	85 db                	test   %ebx,%ebx$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	0f 84 a5 00 00 00    	je     f01014b6 <page_alloc_npages_helper+0x15e>$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	89 d8                	mov    %ebx,%eax$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	89 c2                	mov    %eax,%edx$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	73 2e                	jae    f010145a <page_alloc_npages_helper+0x102>$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	89 de                	mov    %ebx,%esi$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	eb 3c                	jmp    f010146c <page_alloc_npages_helper+0x114>$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	85 db                	test   %ebx,%ebx$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	0f 84 88 00 00 00    	je     f01014c5 <page_alloc_npages_helper+0x16d>$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	eb 4b                	jmp    f010148a <page_alloc_npages_helper+0x132>$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	89 f0                	mov    %esi,%eax$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	89 c2                	mov    %eax,%edx$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	72 12                	jb     f010146c <page_alloc_npages_helper+0x114>$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	50                   	push   %eax$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	6a 56                	push   $0x56$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	e8 d4 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	6a 00                	push   $0x0$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	50                   	push   %eax$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	e8 61 52 00 00       	call   f01066e2 <memset>$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	8b 36                	mov    (%esi),%esi$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	85 f6                	test   %esi,%esi$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	75 b5                	jne    f010143f <page_alloc_npages_helper+0xe7>$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	eb 02                	jmp    f0101493 <page_alloc_npages_helper+0x13b>$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	89 c3                	mov    %eax,%ebx$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	89 da                	mov    %ebx,%edx$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	85 c0                	test   %eax,%eax$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	75 f4                	jne    f0101491 <page_alloc_npages_helper+0x139>$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	89 d8                	mov    %ebx,%eax$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	eb 24                	jmp    f01014c5 <page_alloc_npages_helper+0x16d>$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	eb 1d                	jmp    f01014c5 <page_alloc_npages_helper+0x16d>$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	eb 16                	jmp    f01014c5 <page_alloc_npages_helper+0x16d>$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	eb 0f                	jmp    f01014c5 <page_alloc_npages_helper+0x16d>$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	eb 08                	jmp    f01014c5 <page_alloc_npages_helper+0x16d>$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	e9 25 ff ff ff       	jmp    f01013ea <page_alloc_npages_helper+0x92>$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	5b                   	pop    %ebx$/;"	l
f01014c9	obj/kern/kernel.asm	/^f01014c9:	5e                   	pop    %esi$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	5f                   	pop    %edi$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	5d                   	pop    %ebp$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	c3                   	ret    $/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd <page_alloc_npages>:$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	55                   	push   %ebp$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	89 e5                	mov    %esp,%ebp$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	56                   	push   %esi$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	53                   	push   %ebx$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	75 0e                	jne    f01014eb <page_alloc_npages+0x1e>$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	56                   	push   %esi$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	e8 02 fe ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	eb 2a                	jmp    f0101515 <page_alloc_npages+0x48>$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	ff 35 60 02 28 f0    	pushl  0xf0280260$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	53                   	push   %ebx$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	56                   	push   %esi$/;"	l
f01014f6	obj/kern/kernel.asm	/^f01014f6:	e8 5d fe ff ff       	call   f0101358 <page_alloc_npages_helper>$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	85 c0                	test   %eax,%eax$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	75 13                	jne    f0101515 <page_alloc_npages+0x48>$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	ff 35 64 02 28 f0    	pushl  0xf0280264$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	53                   	push   %ebx$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	56                   	push   %esi$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	e8 46 fe ff ff       	call   f0101358 <page_alloc_npages_helper>$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	5b                   	pop    %ebx$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	5e                   	pop    %esi$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	5d                   	pop    %ebp$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	c3                   	ret    $/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c <page_free_npages>:$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	55                   	push   %ebp$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	89 e5                	mov    %esp,%ebp$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	53                   	push   %ebx$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	89 d8                	mov    %ebx,%eax$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	e8 69 f8 ff ff       	call   f0100d96 <check_continuous>$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	85 c0                	test   %eax,%eax$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	74 20                	je     f0101551 <page_free_npages+0x35>$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	a1 60 02 28 f0       	mov    0xf0280260,%eax$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	8b 10                	mov    (%eax),%edx$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	85 d2                	test   %edx,%edx$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	75 0b                	jne    f0101547 <page_free_npages+0x2b>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	89 18                	mov    %ebx,(%eax)$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	eb 11                	jmp    f0101556 <page_free_npages+0x3a>$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	89 c2                	mov    %eax,%edx$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	8b 02                	mov    (%edx),%eax$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	85 c0                	test   %eax,%eax$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	75 f8                	jne    f0101545 <page_free_npages+0x29>$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	89 1a                	mov    %ebx,(%edx)$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	eb 05                	jmp    f0101556 <page_free_npages+0x3a>$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101556	obj/kern/kernel.asm	/^f0101556:	5b                   	pop    %ebx$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	5d                   	pop    %ebp$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	c3                   	ret    $/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559 <page_free>:$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	55                   	push   %ebp$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	89 e5                	mov    %esp,%ebp$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	75 0f                	jne    f0101578 <page_free+0x1f>$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	8b 15 64 02 28 f0    	mov    0xf0280264,%edx$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	89 10                	mov    %edx,(%eax)$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	a3 64 02 28 f0       	mov    %eax,0xf0280264$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	eb 10                	jmp    f0101588 <page_free+0x2f>$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	68 78 86 10 f0       	push   $0xf0108678$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	e8 63 29 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	c9                   	leave  $/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	c3                   	ret    $/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a <page_realloc_npages>:$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	55                   	push   %ebp$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	89 e5                	mov    %esp,%ebp$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	57                   	push   %edi$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	56                   	push   %esi$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	53                   	push   %ebx$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101593	obj/kern/kernel.asm	/^f0101593:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	85 c9                	test   %ecx,%ecx$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	75 16                	jne    f01015b3 <page_realloc_npages+0x29>$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	53                   	push   %ebx$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	e8 76 ff ff ff       	call   f010151c <page_free_npages>$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	e9 b9 01 00 00       	jmp    f010176c <page_realloc_npages+0x1e2>$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	3b 4d 0c             	cmp    0xc(%ebp),%ecx$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	7d 28                	jge    f01015e0 <page_realloc_npages+0x56>$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	8d 34 cd 00 00 00 00 	lea    0x0(,%ecx,8),%esi$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	29 c8                	sub    %ecx,%eax$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	50                   	push   %eax$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	50                   	push   %eax$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	e8 4e ff ff ff       	call   f010151c <page_free_npages>$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	c7 44 33 f8 00 00 00 	movl   $0x0,-0x8(%ebx,%esi,1)$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	00 $/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	89 d8                	mov    %ebx,%eax$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	e9 8c 01 00 00       	jmp    f010176c <page_realloc_npages+0x1e2>$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	3b 4d 0c             	cmp    0xc(%ebp),%ecx$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	0f 8e 81 01 00 00    	jle    f010176a <page_realloc_npages+0x1e0>$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	8d 3c 03             	lea    (%ebx,%eax,1),%edi$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	8b 15 c0 0e 28 f0    	mov    0xf0280ec0,%edx$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	8b 35 b8 0e 28 f0    	mov    0xf0280eb8,%esi$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	8d 34 f2             	lea    (%edx,%esi,8),%esi$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	39 f7                	cmp    %esi,%edi$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	73 2d                	jae    f0101632 <page_realloc_npages+0xa8>$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	75 26                	jne    f0101632 <page_realloc_npages+0xa8>$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	8d 44 03 08          	lea    0x8(%ebx,%eax,1),%eax$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	eb 0e                	jmp    f0101623 <page_realloc_npages+0x99>$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	39 c6                	cmp    %eax,%esi$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	76 19                	jbe    f0101632 <page_realloc_npages+0xa8>$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	83 c0 08             	add    $0x8,%eax$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	66 83 78 fc 00       	cmpw   $0x0,-0x4(%eax)$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	75 0f                	jne    f0101632 <page_realloc_npages+0xa8>$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	7f eb                	jg     f0101615 <page_realloc_npages+0x8b>$/;"	l
f010162a	obj/kern/kernel.asm	/^f010162a:	39 d1                	cmp    %edx,%ecx$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	0f 84 9b 00 00 00    	je     f01016cd <page_realloc_npages+0x143>$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	51                   	push   %ecx$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	6a 01                	push   $0x1$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	e8 90 fe ff ff       	call   f01014cd <page_alloc_npages>$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	8b 35 c0 0e 28 f0    	mov    0xf0280ec0,%esi$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	89 d8                	mov    %ebx,%eax$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	29 f0                	sub    %esi,%eax$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	8b 0d b8 0e 28 f0    	mov    0xf0280eb8,%ecx$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	89 c2                	mov    %eax,%edx$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	72 12                	jb     f010167a <page_realloc_npages+0xf0>$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	50                   	push   %eax$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	6a 56                	push   $0x56$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	e8 c6 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	8d 90 00 00 00 f0    	lea    -0x10000000(%eax),%edx$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	29 f0                	sub    %esi,%eax$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	89 c6                	mov    %eax,%esi$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	39 ce                	cmp    %ecx,%esi$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	72 12                	jb     f01016a6 <page_realloc_npages+0x11c>$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	50                   	push   %eax$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	6a 56                	push   $0x56$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	e8 9a e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	57                   	push   %edi$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	52                   	push   %edx$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	50                   	push   %eax$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	e8 79 50 00 00       	call   f010672f <memmove>$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	53                   	push   %ebx$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	e8 5a fe ff ff       	call   f010151c <page_free_npages>$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	e9 9f 00 00 00       	jmp    f010176c <page_realloc_npages+0x1e2>$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	a1 64 02 28 f0       	mov    0xf0280264,%eax$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	39 c3                	cmp    %eax,%ebx$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	77 11                	ja     f01016e7 <page_realloc_npages+0x15d>$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	8d 0c d3             	lea    (%ebx,%edx,8),%ecx$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	39 c8                	cmp    %ecx,%eax$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	73 0a                	jae    f01016e7 <page_realloc_npages+0x15d>$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	8b 00                	mov    (%eax),%eax$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	39 c3                	cmp    %eax,%ebx$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	77 04                	ja     f01016e7 <page_realloc_npages+0x15d>$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	39 c8                	cmp    %ecx,%eax$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	72 f6                	jb     f01016dd <page_realloc_npages+0x153>$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	a3 64 02 28 f0       	mov    %eax,0xf0280264$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	85 c0                	test   %eax,%eax$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	74 21                	je     f0101711 <page_realloc_npages+0x187>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	8b 08                	mov    (%eax),%ecx$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	85 c9                	test   %ecx,%ecx$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	74 1b                	je     f0101711 <page_realloc_npages+0x187>$/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	8d 34 d3             	lea    (%ebx,%edx,8),%esi$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	77 08                	ja     f0101705 <page_realloc_npages+0x17b>$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	39 ce                	cmp    %ecx,%esi$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	76 04                	jbe    f0101705 <page_realloc_npages+0x17b>$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	8b 09                	mov    (%ecx),%ecx$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	89 08                	mov    %ecx,(%eax)$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	8b 00                	mov    (%eax),%eax$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	85 c0                	test   %eax,%eax$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	74 06                	je     f0101711 <page_realloc_npages+0x187>$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	8b 08                	mov    (%eax),%ecx$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	85 c9                	test   %ecx,%ecx$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	75 e8                	jne    f01016f9 <page_realloc_npages+0x16f>$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101714	obj/kern/kernel.asm	/^f0101714:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	85 c0                	test   %eax,%eax$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	7e 18                	jle    f0101733 <page_realloc_npages+0x1a9>$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	8d 70 ff             	lea    -0x1(%eax),%esi$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	89 d8                	mov    %ebx,%eax$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	8b 00                	mov    (%eax),%eax$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	39 f1                	cmp    %esi,%ecx$/;"	l
f010172f	obj/kern/kernel.asm	/^f010172f:	75 f7                	jne    f0101728 <page_realloc_npages+0x19e>$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	eb 02                	jmp    f0101735 <page_realloc_npages+0x1ab>$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	89 d8                	mov    %ebx,%eax$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	2b 55 0c             	sub    0xc(%ebp),%edx$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	85 d2                	test   %edx,%edx$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	7e 24                	jle    f0101760 <page_realloc_npages+0x1d6>$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	89 f9                	mov    %edi,%ecx$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	89 d6                	mov    %edx,%esi$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	03 75 0c             	add    0xc(%ebp),%esi$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	8d 3c f3             	lea    (%ebx,%esi,8),%edi$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	89 ce                	mov    %ecx,%esi$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	89 08                	mov    %ecx,(%eax)$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	83 c1 08             	add    $0x8,%ecx$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	89 f0                	mov    %esi,%eax$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	39 f9                	cmp    %edi,%ecx$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	75 f3                	jne    f0101746 <page_realloc_npages+0x1bc>$/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	8d 84 02 ff ff ff 1f 	lea    0x1fffffff(%edx,%eax,1),%eax$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	89 d8                	mov    %ebx,%eax$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	eb 02                	jmp    f010176c <page_realloc_npages+0x1e2>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	89 d8                	mov    %ebx,%eax$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	5b                   	pop    %ebx$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	5e                   	pop    %esi$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	5f                   	pop    %edi$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	5d                   	pop    %ebp$/;"	l
f0101773	obj/kern/kernel.asm	/^f0101773:	c3                   	ret    $/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774 <page_decref>:$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	55                   	push   %ebp$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	89 e5                	mov    %esp,%ebp$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	0f b7 42 04          	movzwl 0x4(%edx),%eax$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	66 89 42 04          	mov    %ax,0x4(%edx)$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	66 85 c0             	test   %ax,%ax$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	75 0c                	jne    f0101799 <page_decref+0x25>$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	52                   	push   %edx$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	e8 c3 fd ff ff       	call   f0101559 <page_free>$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	c9                   	leave  $/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	c3                   	ret    $/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b <pgdir_walk>:$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	55                   	push   %ebp$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	89 e5                	mov    %esp,%ebp$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	56                   	push   %esi$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	53                   	push   %ebx$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	85 c0                	test   %eax,%eax$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	75 1a                	jne    f01017c4 <pgdir_walk+0x29>$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	68 a8 8d 10 f0       	push   $0xf0108da8$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	e8 31 27 00 00       	call   f0103ee8 <cprintf>$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	e9 bb 00 00 00       	jmp    f010187f <pgdir_walk+0xe4>$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	89 da                	mov    %ebx,%edx$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	8d 34 90             	lea    (%eax,%edx,4),%esi$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	8b 06                	mov    (%esi),%eax$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	a8 01                	test   $0x1,%al$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	74 39                	je     f010180b <pgdir_walk+0x70>$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	89 c2                	mov    %eax,%edx$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	39 15 b8 0e 28 f0    	cmp    %edx,0xf0280eb8$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	77 15                	ja     f01017f9 <pgdir_walk+0x5e>$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	50                   	push   %eax$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	68 5f 02 00 00       	push   $0x25f$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	e8 47 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	eb 74                	jmp    f010187f <pgdir_walk+0xe4>$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	74 62                	je     f0101873 <pgdir_walk+0xd8>$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	6a 01                	push   $0x1$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	e8 cd fa ff ff       	call   f01012e8 <page_alloc>$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	85 c0                	test   %eax,%eax$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	74 58                	je     f010187a <pgdir_walk+0xdf>$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	89 c2                	mov    %eax,%edx$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	89 16                	mov    %edx,(%esi)$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	89 c2                	mov    %eax,%edx$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101844	obj/kern/kernel.asm	/^f0101844:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	72 15                	jb     f0101861 <pgdir_walk+0xc6>$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	50                   	push   %eax$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	68 67 02 00 00       	push   $0x267$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	e8 df e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	c1 eb 0a             	shr    $0xa,%ebx$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	81 e3 fc 0f 00 00    	and    $0xffc,%ebx$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	8d 84 18 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,1),%eax$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	eb 0c                	jmp    f010187f <pgdir_walk+0xe4>$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	eb 05                	jmp    f010187f <pgdir_walk+0xe4>$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	5b                   	pop    %ebx$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	5e                   	pop    %esi$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	5d                   	pop    %ebp$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	c3                   	ret    $/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886 <boot_map_region>:$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	55                   	push   %ebp$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	89 e5                	mov    %esp,%ebp$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	57                   	push   %edi$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	56                   	push   %esi$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	53                   	push   %ebx$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	85 c9                	test   %ecx,%ecx$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	74 42                	je     f01018e1 <boot_map_region+0x5b>$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	89 c3                	mov    %eax,%ebx$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	29 c1                	sub    %eax,%ecx$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	83 c8 01             	or     $0x1,%eax$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	6a 01                	push   $0x1$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	53                   	push   %ebx$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	e8 d0 fe ff ff       	call   f010179b <pgdir_walk>$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	89 30                	mov    %esi,(%eax)$/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	83 c7 01             	add    $0x1,%edi$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	39 7d e4             	cmp    %edi,-0x1c(%ebp)$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	75 d6                	jne    f01018b7 <boot_map_region+0x31>$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	5b                   	pop    %ebx$/;"	l
f01018e5	obj/kern/kernel.asm	/^f01018e5:	5e                   	pop    %esi$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	5f                   	pop    %edi$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	5d                   	pop    %ebp$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	c3                   	ret    $/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9 <mem_init_mp>:$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	55                   	push   %ebp$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	57                   	push   %edi$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	56                   	push   %esi$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	53                   	push   %ebx$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	6a 02                	push   $0x2$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	68 00 00 00 fe       	push   $0xfe000000$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	68 00 00 00 02       	push   $0x2000000$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	68 00 00 00 fe       	push   $0xfe000000$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	e8 78 ff ff ff       	call   f0101886 <boot_map_region>$/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	b8 00 20 28 f0       	mov    $0xf0282000,%eax$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	77 5a                	ja     f0101977 <mem_init_mp+0x8e>$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	eb 0c                	jmp    f010192b <mem_init_mp+0x42>$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	89 d8                	mov    %ebx,%eax$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	77 1c                	ja     f0101945 <mem_init_mp+0x5c>$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	eb 05                	jmp    f0101930 <mem_init_mp+0x47>$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	b8 00 20 28 f0       	mov    $0xf0282000,%eax$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	50                   	push   %eax$/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	68 1e 01 00 00       	push   $0x11e$/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	e8 fb e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	6a 02                	push   $0x2$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	50                   	push   %eax$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	68 00 80 00 00       	push   $0x8000$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	56                   	push   %esi$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	e8 24 ff ff ff       	call   f0101886 <boot_map_region>$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	39 df                	cmp    %ebx,%edi$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	75 aa                	jne    f010191f <mem_init_mp+0x36>$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	eb 36                	jmp    f01019ad <mem_init_mp+0xc4>$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	6a 02                	push   $0x2$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	68 00 20 28 00       	push   $0x282000$/;"	l
f0101981	obj/kern/kernel.asm	/^f0101981:	68 00 80 00 00       	push   $0x8000$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	68 00 80 bf ef       	push   $0xefbf8000$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	e8 f0 fe ff ff       	call   f0101886 <boot_map_region>$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	bb 00 a0 28 f0       	mov    $0xf028a000,%ebx$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	bf 00 20 2c f0       	mov    $0xf02c2000,%edi$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	83 c4 20             	add    $0x20,%esp$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	be 00 80 be ef       	mov    $0xefbe8000,%esi$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	e9 72 ff ff ff       	jmp    f010191f <mem_init_mp+0x36>$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	5b                   	pop    %ebx$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	5e                   	pop    %esi$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	5f                   	pop    %edi$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	5d                   	pop    %ebp$/;"	l
f01019b4	obj/kern/kernel.asm	/^f01019b4:	c3                   	ret    $/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5 <page_lookup>:$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	55                   	push   %ebp$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	53                   	push   %ebx$/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	6a 00                	push   $0x0$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	e8 cf fd ff ff       	call   f010179b <pgdir_walk>$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	85 c0                	test   %eax,%eax$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	74 37                	je     f0101a0a <page_lookup+0x55>$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01019d6	obj/kern/kernel.asm	/^f01019d6:	74 39                	je     f0101a11 <page_lookup+0x5c>$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	85 db                	test   %ebx,%ebx$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	74 02                	je     f01019de <page_lookup+0x29>$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	89 03                	mov    %eax,(%ebx)$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	8b 00                	mov    (%eax),%eax$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	3b 05 b8 0e 28 f0    	cmp    0xf0280eb8,%eax$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	72 14                	jb     f01019ff <page_lookup+0x4a>$/;"	l
f01019eb	obj/kern/kernel.asm	/^f01019eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	68 9c 86 10 f0       	push   $0xf010869c$/;"	l
f01019f3	obj/kern/kernel.asm	/^f01019f3:	6a 4f                	push   $0x4f$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	e8 41 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	8b 15 c0 0e 28 f0    	mov    0xf0280ec0,%edx$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	eb 0c                	jmp    f0101a16 <page_lookup+0x61>$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	eb 05                	jmp    f0101a16 <page_lookup+0x61>$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	c9                   	leave  $/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	c3                   	ret    $/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b <tlb_invalidate>:$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	55                   	push   %ebp$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	e8 31 53 00 00       	call   f0106d57 <cpunum>$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101a29	obj/kern/kernel.asm	/^f0101a29:	83 b8 28 10 28 f0 00 	cmpl   $0x0,-0xfd7efd8(%eax)$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	74 16                	je     f0101a48 <tlb_invalidate+0x2d>$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	e8 20 53 00 00       	call   f0106d57 <cpunum>$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	39 50 64             	cmp    %edx,0x64(%eax)$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	75 06                	jne    f0101a4e <tlb_invalidate+0x33>$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	0f 01 38             	invlpg (%eax)$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	c9                   	leave  $/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	c3                   	ret    $/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50 <page_remove>:$/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	55                   	push   %ebp$/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	57                   	push   %edi$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	56                   	push   %esi$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	53                   	push   %ebx$/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	50                   	push   %eax$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	57                   	push   %edi$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	56                   	push   %esi$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	e8 4b ff ff ff       	call   f01019b5 <page_lookup>$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	85 c0                	test   %eax,%eax$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	74 20                	je     f0101a91 <page_remove+0x41>$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	89 c3                	mov    %eax,%ebx$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101a76	obj/kern/kernel.asm	/^f0101a76:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	57                   	push   %edi$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	56                   	push   %esi$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	e8 95 ff ff ff       	call   f0101a1b <tlb_invalidate>$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	e8 e6 fc ff ff       	call   f0101774 <page_decref>$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	5b                   	pop    %ebx$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	5e                   	pop    %esi$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	5f                   	pop    %edi$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	5d                   	pop    %ebp$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	c3                   	ret    $/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99 <page_insert>:$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	55                   	push   %ebp$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a9c	obj/kern/kernel.asm	/^f0101a9c:	57                   	push   %edi$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	56                   	push   %esi$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	53                   	push   %ebx$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	6a 01                	push   $0x1$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	57                   	push   %edi$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	e8 e8 fc ff ff       	call   f010179b <pgdir_walk>$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	85 c0                	test   %eax,%eax$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	74 68                	je     f0101b22 <page_insert+0x89>$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	89 c6                	mov    %eax,%esi$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	8b 00                	mov    (%eax),%eax$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	a8 01                	test   $0x1,%al$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	74 3c                	je     f0101afe <page_insert+0x65>$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	89 da                	mov    %ebx,%edx$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	75 16                	jne    f0101aef <page_insert+0x56>$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	57                   	push   %edi$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	e8 36 ff ff ff       	call   f0101a1b <tlb_invalidate>$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	66 83 6b 04 01       	subw   $0x1,0x4(%ebx)$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	eb 0f                	jmp    f0101afe <page_insert+0x65>$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	57                   	push   %edi$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	e8 55 ff ff ff       	call   f0101a50 <page_remove>$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	89 d8                	mov    %ebx,%eax$/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	83 ca 01             	or     $0x1,%edx$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	09 d0                	or     %edx,%eax$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	89 06                	mov    %eax,(%esi)$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	66 83 43 04 01       	addw   $0x1,0x4(%ebx)$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	eb 05                	jmp    f0101b27 <page_insert+0x8e>$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	5b                   	pop    %ebx$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	5e                   	pop    %esi$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	5f                   	pop    %edi$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	5d                   	pop    %ebp$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	c3                   	ret    $/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f <mem_init>:$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	55                   	push   %ebp$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	57                   	push   %edi$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	56                   	push   %esi$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	53                   	push   %ebx$/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0101b38	obj/kern/kernel.asm	/^f0101b38:	6a 15                	push   $0x15$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	e8 11 22 00 00       	call   f0103d50 <mc146818_read>$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	e8 03 22 00 00       	call   f0103d50 <mc146818_read>$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	09 d8                	or     %ebx,%eax$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	85 c0                	test   %eax,%eax$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	a3 68 02 28 f0       	mov    %eax,0xf0280268$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	e8 dc 21 00 00       	call   f0103d50 <mc146818_read>$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	e8 ce 21 00 00       	call   f0103d50 <mc146818_read>$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	09 d8                	or     %ebx,%eax$/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	85 c0                	test   %eax,%eax$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	85 c0                	test   %eax,%eax$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	74 0e                	je     f0101bad <mem_init+0x7e>$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	89 15 b8 0e 28 f0    	mov    %edx,0xf0280eb8$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	eb 0c                	jmp    f0101bb9 <mem_init+0x8a>$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	8b 15 68 02 28 f0    	mov    0xf0280268,%edx$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	89 15 b8 0e 28 f0    	mov    %edx,0xf0280eb8$/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	50                   	push   %eax$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	a1 68 02 28 f0       	mov    0xf0280268,%eax$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101bcb	obj/kern/kernel.asm	/^f0101bcb:	50                   	push   %eax$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	a1 b8 0e 28 f0       	mov    0xf0280eb8,%eax$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	50                   	push   %eax$/;"	l
f0101bd8	obj/kern/kernel.asm	/^f0101bd8:	68 bc 86 10 f0       	push   $0xf01086bc$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	e8 06 23 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0101be2	obj/kern/kernel.asm	/^f0101be2:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	e8 9c f2 ff ff       	call   f0100e88 <boot_alloc>$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	a3 bc 0e 28 f0       	mov    %eax,0xf0280ebc$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	6a 00                	push   $0x0$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	50                   	push   %eax$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	e8 e1 4a 00 00       	call   f01066e2 <memset>$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	77 15                	ja     f0101c25 <mem_init+0xf6>$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	50                   	push   %eax$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	68 96 00 00 00       	push   $0x96$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	e8 1b e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	a1 b8 0e 28 f0       	mov    0xf0280eb8,%eax$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	e8 47 f2 ff ff       	call   f0100e88 <boot_alloc>$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	a3 c0 0e 28 f0       	mov    %eax,0xf0280ec0$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	b8 00 00 02 00       	mov    $0x20000,%eax$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	e8 38 f2 ff ff       	call   f0100e88 <boot_alloc>$/;"	l
f0101c50	obj/kern/kernel.asm	/^f0101c50:	a3 6c 02 28 f0       	mov    %eax,0xf028026c$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	e8 c7 f5 ff ff       	call   f0101221 <page_init>$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	e8 ad f2 ff ff       	call   f0100f11 <check_page_free_list>$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	83 3d c0 0e 28 f0 00 	cmpl   $0x0,0xf0280ec0$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	75 17                	jne    f0101c84 <mem_init+0x155>$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	68 ba 8d 10 f0       	push   $0xf0108dba$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	68 88 03 00 00       	push   $0x388$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	e8 bc e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	a1 64 02 28 f0       	mov    0xf0280264,%eax$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	85 c0                	test   %eax,%eax$/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	74 10                	je     f0101c9d <mem_init+0x16e>$/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	85 c0                	test   %eax,%eax$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	75 f7                	jne    f0101c92 <mem_init+0x163>$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	eb 05                	jmp    f0101ca2 <mem_init+0x173>$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101ca2	obj/kern/kernel.asm	/^f0101ca2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	6a 00                	push   $0x0$/;"	l
f0101ca7	obj/kern/kernel.asm	/^f0101ca7:	e8 3c f6 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	89 c7                	mov    %eax,%edi$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	85 c0                	test   %eax,%eax$/;"	l
f0101cb3	obj/kern/kernel.asm	/^f0101cb3:	75 19                	jne    f0101cce <mem_init+0x19f>$/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	68 d5 8d 10 f0       	push   $0xf0108dd5$/;"	l
f0101cba	obj/kern/kernel.asm	/^f0101cba:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	68 90 03 00 00       	push   $0x390$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	e8 72 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	6a 00                	push   $0x0$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	e8 10 f6 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	89 c6                	mov    %eax,%esi$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	85 c0                	test   %eax,%eax$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	75 19                	jne    f0101cfa <mem_init+0x1cb>$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	68 eb 8d 10 f0       	push   $0xf0108deb$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	68 91 03 00 00       	push   $0x391$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101cf5	obj/kern/kernel.asm	/^f0101cf5:	e8 46 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cfd	obj/kern/kernel.asm	/^f0101cfd:	6a 00                	push   $0x0$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	e8 e4 f5 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	85 c0                	test   %eax,%eax$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	75 19                	jne    f0101d27 <mem_init+0x1f8>$/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	68 01 8e 10 f0       	push   $0xf0108e01$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	68 92 03 00 00       	push   $0x392$/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	e8 19 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	39 f7                	cmp    %esi,%edi$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	75 19                	jne    f0101d44 <mem_init+0x215>$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	68 17 8e 10 f0       	push   $0xf0108e17$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101d35	obj/kern/kernel.asm	/^f0101d35:	68 95 03 00 00       	push   $0x395$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	e8 fc e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	39 c7                	cmp    %eax,%edi$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	74 04                	je     f0101d4f <mem_init+0x220>$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	39 c6                	cmp    %eax,%esi$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	75 19                	jne    f0101d68 <mem_init+0x239>$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	68 f8 86 10 f0       	push   $0xf01086f8$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	68 96 03 00 00       	push   $0x396$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	e8 d8 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	8b 0d c0 0e 28 f0    	mov    0xf0280ec0,%ecx$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	8b 15 b8 0e 28 f0    	mov    0xf0280eb8,%edx$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	89 f8                	mov    %edi,%eax$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	29 c8                	sub    %ecx,%eax$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	72 19                	jb     f0101d9e <mem_init+0x26f>$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	68 29 8e 10 f0       	push   $0xf0108e29$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101d8f	obj/kern/kernel.asm	/^f0101d8f:	68 97 03 00 00       	push   $0x397$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	e8 a2 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	89 f0                	mov    %esi,%eax$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	29 c8                	sub    %ecx,%eax$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	39 c2                	cmp    %eax,%edx$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	77 19                	ja     f0101dc5 <mem_init+0x296>$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	68 46 8e 10 f0       	push   $0xf0108e46$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	68 98 03 00 00       	push   $0x398$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	e8 7b e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	29 c8                	sub    %ecx,%eax$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101dcd	obj/kern/kernel.asm	/^f0101dcd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	39 c2                	cmp    %eax,%edx$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	77 19                	ja     f0101ded <mem_init+0x2be>$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	68 63 8e 10 f0       	push   $0xf0108e63$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	68 99 03 00 00       	push   $0x399$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	e8 53 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	a1 64 02 28 f0       	mov    0xf0280264,%eax$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101df5	obj/kern/kernel.asm	/^f0101df5:	c7 05 64 02 28 f0 00 	movl   $0x0,0xf0280264$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	00 00 00 $/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	6a 00                	push   $0x0$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	e8 df f4 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	85 c0                	test   %eax,%eax$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	74 19                	je     f0101e29 <mem_init+0x2fa>$/;"	l
f0101e10	obj/kern/kernel.asm	/^f0101e10:	68 80 8e 10 f0       	push   $0xf0108e80$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	68 a0 03 00 00       	push   $0x3a0$/;"	l
f0101e1f	obj/kern/kernel.asm	/^f0101e1f:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	e8 17 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	57                   	push   %edi$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	e8 27 f7 ff ff       	call   f0101559 <page_free>$/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	e8 1f f7 ff ff       	call   f0101559 <page_free>$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	e8 14 f7 ff ff       	call   f0101559 <page_free>$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	e8 97 f4 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	89 c6                	mov    %eax,%esi$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	85 c0                	test   %eax,%eax$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	75 19                	jne    f0101e73 <mem_init+0x344>$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	68 d5 8d 10 f0       	push   $0xf0108dd5$/;"	l
f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	68 a7 03 00 00       	push   $0x3a7$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101e6e	obj/kern/kernel.asm	/^f0101e6e:	e8 cd e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e73	obj/kern/kernel.asm	/^f0101e73:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e76	obj/kern/kernel.asm	/^f0101e76:	6a 00                	push   $0x0$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	e8 6b f4 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	89 c7                	mov    %eax,%edi$/;"	l
f0101e7f	obj/kern/kernel.asm	/^f0101e7f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	85 c0                	test   %eax,%eax$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	75 19                	jne    f0101e9f <mem_init+0x370>$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	68 eb 8d 10 f0       	push   $0xf0108deb$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101e90	obj/kern/kernel.asm	/^f0101e90:	68 a8 03 00 00       	push   $0x3a8$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	e8 a1 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	6a 00                	push   $0x0$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	e8 3f f4 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	85 c0                	test   %eax,%eax$/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	75 19                	jne    f0101ecc <mem_init+0x39d>$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	68 01 8e 10 f0       	push   $0xf0108e01$/;"	l
f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101ebd	obj/kern/kernel.asm	/^f0101ebd:	68 a9 03 00 00       	push   $0x3a9$/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	e8 74 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ecc	obj/kern/kernel.asm	/^f0101ecc:	39 fe                	cmp    %edi,%esi$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	75 19                	jne    f0101ee9 <mem_init+0x3ba>$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	68 17 8e 10 f0       	push   $0xf0108e17$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101eda	obj/kern/kernel.asm	/^f0101eda:	68 ab 03 00 00       	push   $0x3ab$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	e8 57 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	39 c6                	cmp    %eax,%esi$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	74 04                	je     f0101ef4 <mem_init+0x3c5>$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	39 c7                	cmp    %eax,%edi$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	75 19                	jne    f0101f0d <mem_init+0x3de>$/;"	l
f0101ef4	obj/kern/kernel.asm	/^f0101ef4:	68 f8 86 10 f0       	push   $0xf01086f8$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	68 ac 03 00 00       	push   $0x3ac$/;"	l
f0101f03	obj/kern/kernel.asm	/^f0101f03:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	e8 33 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	6a 00                	push   $0x0$/;"	l
f0101f12	obj/kern/kernel.asm	/^f0101f12:	e8 d1 f3 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	85 c0                	test   %eax,%eax$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	74 19                	je     f0101f37 <mem_init+0x408>$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	68 80 8e 10 f0       	push   $0xf0108e80$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	68 ad 03 00 00       	push   $0x3ad$/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	e8 09 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	89 f0                	mov    %esi,%eax$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f42	obj/kern/kernel.asm	/^f0101f42:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	89 c2                	mov    %eax,%edx$/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	72 12                	jb     f0101f64 <mem_init+0x435>$/;"	l
f0101f52	obj/kern/kernel.asm	/^f0101f52:	50                   	push   %eax$/;"	l
f0101f53	obj/kern/kernel.asm	/^f0101f53:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	6a 56                	push   $0x56$/;"	l
f0101f5a	obj/kern/kernel.asm	/^f0101f5a:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	e8 dc e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	6a 01                	push   $0x1$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	50                   	push   %eax$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	e8 69 47 00 00       	call   f01066e2 <memset>$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	e8 d8 f5 ff ff       	call   f0101559 <page_free>$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	e8 5b f3 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	85 c0                	test   %eax,%eax$/;"	l
f0101f92	obj/kern/kernel.asm	/^f0101f92:	75 19                	jne    f0101fad <mem_init+0x47e>$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	68 8f 8e 10 f0       	push   $0xf0108e8f$/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	68 b2 03 00 00       	push   $0x3b2$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	e8 93 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fad	obj/kern/kernel.asm	/^f0101fad:	39 c6                	cmp    %eax,%esi$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	74 19                	je     f0101fca <mem_init+0x49b>$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	68 ad 8e 10 f0       	push   $0xf0108ead$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	68 b3 03 00 00       	push   $0x3b3$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	e8 76 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	89 f2                	mov    %esi,%edx$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f0101fd2	obj/kern/kernel.asm	/^f0101fd2:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	89 d0                	mov    %edx,%eax$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	3b 05 b8 0e 28 f0    	cmp    0xf0280eb8,%eax$/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	72 12                	jb     f0101ff7 <mem_init+0x4c8>$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	52                   	push   %edx$/;"	l
f0101fe6	obj/kern/kernel.asm	/^f0101fe6:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	6a 56                	push   $0x56$/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	e8 49 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	75 11                	jne    f0102011 <mem_init+0x4e2>$/;"	l
f0102000	obj/kern/kernel.asm	/^f0102000:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	74 19                	je     f010202a <mem_init+0x4fb>$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	68 bd 8e 10 f0       	push   $0xf0108ebd$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	68 b6 03 00 00       	push   $0x3b6$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	e8 16 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010202a	obj/kern/kernel.asm	/^f010202a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	39 d0                	cmp    %edx,%eax$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	75 db                	jne    f010200c <mem_init+0x4dd>$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	a3 64 02 28 f0       	mov    %eax,0xf0280264$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	56                   	push   %esi$/;"	l
f010203d	obj/kern/kernel.asm	/^f010203d:	e8 17 f5 ff ff       	call   f0101559 <page_free>$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	e8 0f f5 ff ff       	call   f0101559 <page_free>$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	e8 04 f5 ff ff       	call   f0101559 <page_free>$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	a1 64 02 28 f0       	mov    0xf0280264,%eax$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	85 c0                	test   %eax,%eax$/;"	l
f010205f	obj/kern/kernel.asm	/^f010205f:	74 09                	je     f010206a <mem_init+0x53b>$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	8b 00                	mov    (%eax),%eax$/;"	l
f0102066	obj/kern/kernel.asm	/^f0102066:	85 c0                	test   %eax,%eax$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	75 f7                	jne    f0102061 <mem_init+0x532>$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	85 db                	test   %ebx,%ebx$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	74 19                	je     f0102087 <mem_init+0x558>$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	68 c7 8e 10 f0       	push   $0xf0108ec7$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	68 c3 03 00 00       	push   $0x3c3$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	e8 b9 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	68 18 87 10 f0       	push   $0xf0108718$/;"	l
f010208f	obj/kern/kernel.asm	/^f010208f:	e8 54 1e 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0102094	obj/kern/kernel.asm	/^f0102094:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	e8 48 f2 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01020a0	obj/kern/kernel.asm	/^f01020a0:	89 c3                	mov    %eax,%ebx$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	85 c0                	test   %eax,%eax$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	75 19                	jne    f01020c2 <mem_init+0x593>$/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	68 d5 8d 10 f0       	push   $0xf0108dd5$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	68 36 04 00 00       	push   $0x436$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	e8 7e df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	6a 00                	push   $0x0$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	e8 1c f2 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01020cf	obj/kern/kernel.asm	/^f01020cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	85 c0                	test   %eax,%eax$/;"	l
f01020d4	obj/kern/kernel.asm	/^f01020d4:	75 19                	jne    f01020ef <mem_init+0x5c0>$/;"	l
f01020d6	obj/kern/kernel.asm	/^f01020d6:	68 eb 8d 10 f0       	push   $0xf0108deb$/;"	l
f01020db	obj/kern/kernel.asm	/^f01020db:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	68 37 04 00 00       	push   $0x437$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	e8 51 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020f2	obj/kern/kernel.asm	/^f01020f2:	6a 00                	push   $0x0$/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	e8 ef f1 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	89 c6                	mov    %eax,%esi$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	85 c0                	test   %eax,%eax$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	75 19                	jne    f010211b <mem_init+0x5ec>$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	68 01 8e 10 f0       	push   $0xf0108e01$/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010210c	obj/kern/kernel.asm	/^f010210c:	68 38 04 00 00       	push   $0x438$/;"	l
f0102111	obj/kern/kernel.asm	/^f0102111:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102116	obj/kern/kernel.asm	/^f0102116:	e8 25 df ff ff       	call   f0100040 <_panic>$/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	75 19                	jne    f0102139 <mem_init+0x60a>$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	68 17 8e 10 f0       	push   $0xf0108e17$/;"	l
f0102125	obj/kern/kernel.asm	/^f0102125:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	68 3b 04 00 00       	push   $0x43b$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	e8 07 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f010213c	obj/kern/kernel.asm	/^f010213c:	74 04                	je     f0102142 <mem_init+0x613>$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	75 19                	jne    f010215b <mem_init+0x62c>$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	68 f8 86 10 f0       	push   $0xf01086f8$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	68 3c 04 00 00       	push   $0x43c$/;"	l
f0102151	obj/kern/kernel.asm	/^f0102151:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	e8 e5 de ff ff       	call   f0100040 <_panic>$/;"	l
f010215b	obj/kern/kernel.asm	/^f010215b:	a1 64 02 28 f0       	mov    0xf0280264,%eax$/;"	l
f0102160	obj/kern/kernel.asm	/^f0102160:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	c7 05 64 02 28 f0 00 	movl   $0x0,0xf0280264$/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	00 00 00 $/;"	l
f010216d	obj/kern/kernel.asm	/^f010216d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	6a 00                	push   $0x0$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	e8 71 f1 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	83 c4 10             	add    $0x10,%esp$/;"	l
f010217a	obj/kern/kernel.asm	/^f010217a:	85 c0                	test   %eax,%eax$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	74 19                	je     f0102197 <mem_init+0x668>$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	68 80 8e 10 f0       	push   $0xf0108e80$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	68 43 04 00 00       	push   $0x443$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	e8 a9 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	50                   	push   %eax$/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	6a 00                	push   $0x0$/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	e8 0a f8 ff ff       	call   f01019b5 <page_lookup>$/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	85 c0                	test   %eax,%eax$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	74 19                	je     f01021cb <mem_init+0x69c>$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	68 38 87 10 f0       	push   $0xf0108738$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	68 46 04 00 00       	push   $0x446$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	e8 75 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	6a 02                	push   $0x2$/;"	l
f01021cd	obj/kern/kernel.asm	/^f01021cd:	6a 00                	push   $0x0$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f01021d8	obj/kern/kernel.asm	/^f01021d8:	e8 bc f8 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01021dd	obj/kern/kernel.asm	/^f01021dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	85 c0                	test   %eax,%eax$/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	78 19                	js     f01021fd <mem_init+0x6ce>$/;"	l
f01021e4	obj/kern/kernel.asm	/^f01021e4:	68 70 87 10 f0       	push   $0xf0108770$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	68 49 04 00 00       	push   $0x449$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	e8 43 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	53                   	push   %ebx$/;"	l
f0102201	obj/kern/kernel.asm	/^f0102201:	e8 53 f3 ff ff       	call   f0101559 <page_free>$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	6a 02                	push   $0x2$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	6a 00                	push   $0x0$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	e8 81 f8 ff ff       	call   f0101a99 <page_insert>$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	83 c4 20             	add    $0x20,%esp$/;"	l
f010221b	obj/kern/kernel.asm	/^f010221b:	85 c0                	test   %eax,%eax$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	74 19                	je     f0102238 <mem_init+0x709>$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	68 a0 87 10 f0       	push   $0xf01087a0$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	68 4d 04 00 00       	push   $0x44d$/;"	l
f010222e	obj/kern/kernel.asm	/^f010222e:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102233	obj/kern/kernel.asm	/^f0102233:	e8 08 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102238	obj/kern/kernel.asm	/^f0102238:	8b 3d bc 0e 28 f0    	mov    0xf0280ebc,%edi$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	a1 c0 0e 28 f0       	mov    0xf0280ec0,%eax$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	89 c1                	mov    %eax,%ecx$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	8b 17                	mov    (%edi),%edx$/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	89 d8                	mov    %ebx,%eax$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	29 c8                	sub    %ecx,%eax$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010225a	obj/kern/kernel.asm	/^f010225a:	39 c2                	cmp    %eax,%edx$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	74 19                	je     f0102277 <mem_init+0x748>$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	68 d0 87 10 f0       	push   $0xf01087d0$/;"	l
f0102263	obj/kern/kernel.asm	/^f0102263:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102268	obj/kern/kernel.asm	/^f0102268:	68 4e 04 00 00       	push   $0x44e$/;"	l
f010226d	obj/kern/kernel.asm	/^f010226d:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	e8 c9 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	89 f8                	mov    %edi,%eax$/;"	l
f010227e	obj/kern/kernel.asm	/^f010227e:	e8 a1 eb ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102286	obj/kern/kernel.asm	/^f0102286:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	74 19                	je     f01022ac <mem_init+0x77d>$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	68 f8 87 10 f0       	push   $0xf01087f8$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	68 4f 04 00 00       	push   $0x44f$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	e8 94 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	74 19                	je     f01022cf <mem_init+0x7a0>$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	68 d2 8e 10 f0       	push   $0xf0108ed2$/;"	l
f01022bb	obj/kern/kernel.asm	/^f01022bb:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	68 50 04 00 00       	push   $0x450$/;"	l
f01022c5	obj/kern/kernel.asm	/^f01022c5:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01022ca	obj/kern/kernel.asm	/^f01022ca:	e8 71 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	74 19                	je     f01022ef <mem_init+0x7c0>$/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	68 e3 8e 10 f0       	push   $0xf0108ee3$/;"	l
f01022db	obj/kern/kernel.asm	/^f01022db:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	68 51 04 00 00       	push   $0x451$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	e8 51 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	6a 02                	push   $0x2$/;"	l
f01022f1	obj/kern/kernel.asm	/^f01022f1:	68 00 10 00 00       	push   $0x1000$/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	56                   	push   %esi$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	57                   	push   %edi$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	e8 9c f7 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	85 c0                	test   %eax,%eax$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	74 19                	je     f010231d <mem_init+0x7ee>$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	68 28 88 10 f0       	push   $0xf0108828$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	68 54 04 00 00       	push   $0x454$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	e8 23 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	e8 f8 ea ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	89 f2                	mov    %esi,%edx$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f0102334	obj/kern/kernel.asm	/^f0102334:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	39 d0                	cmp    %edx,%eax$/;"	l
f010233c	obj/kern/kernel.asm	/^f010233c:	74 19                	je     f0102357 <mem_init+0x828>$/;"	l
f010233e	obj/kern/kernel.asm	/^f010233e:	68 64 88 10 f0       	push   $0xf0108864$/;"	l
f0102343	obj/kern/kernel.asm	/^f0102343:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	68 55 04 00 00       	push   $0x455$/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	e8 e9 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	74 19                	je     f0102377 <mem_init+0x848>$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	68 f4 8e 10 f0       	push   $0xf0108ef4$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	68 56 04 00 00       	push   $0x456$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	e8 c9 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	6a 00                	push   $0x0$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	e8 67 ef ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384:	85 c0                	test   %eax,%eax$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	74 19                	je     f01023a1 <mem_init+0x872>$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	68 80 8e 10 f0       	push   $0xf0108e80$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	68 59 04 00 00       	push   $0x459$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	e8 9f dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	6a 02                	push   $0x2$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	68 00 10 00 00       	push   $0x1000$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	56                   	push   %esi$/;"	l
f01023a9	obj/kern/kernel.asm	/^f01023a9:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	e8 e5 f6 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01023b7	obj/kern/kernel.asm	/^f01023b7:	85 c0                	test   %eax,%eax$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	74 19                	je     f01023d4 <mem_init+0x8a5>$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	68 28 88 10 f0       	push   $0xf0108828$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	68 5c 04 00 00       	push   $0x45c$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01023cf	obj/kern/kernel.asm	/^f01023cf:	e8 6c dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	e8 41 ea ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	89 f2                	mov    %esi,%edx$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	39 d0                	cmp    %edx,%eax$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	74 19                	je     f010240e <mem_init+0x8df>$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	68 64 88 10 f0       	push   $0xf0108864$/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	68 5d 04 00 00       	push   $0x45d$/;"	l
f0102404	obj/kern/kernel.asm	/^f0102404:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	e8 32 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010240e	obj/kern/kernel.asm	/^f010240e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102413	obj/kern/kernel.asm	/^f0102413:	74 19                	je     f010242e <mem_init+0x8ff>$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	68 f4 8e 10 f0       	push   $0xf0108ef4$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	68 5e 04 00 00       	push   $0x45e$/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	e8 12 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	6a 00                	push   $0x0$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	e8 b0 ee ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	83 c4 10             	add    $0x10,%esp$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	85 c0                	test   %eax,%eax$/;"	l
f010243d	obj/kern/kernel.asm	/^f010243d:	74 19                	je     f0102458 <mem_init+0x929>$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	68 80 8e 10 f0       	push   $0xf0108e80$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102449	obj/kern/kernel.asm	/^f0102449:	68 62 04 00 00       	push   $0x462$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	e8 e8 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	8b 15 bc 0e 28 f0    	mov    0xf0280ebc,%edx$/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	8b 02                	mov    (%edx),%eax$/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	89 c1                	mov    %eax,%ecx$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	3b 0d b8 0e 28 f0    	cmp    0xf0280eb8,%ecx$/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	72 15                	jb     f0102487 <mem_init+0x958>$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	50                   	push   %eax$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	68 65 04 00 00       	push   $0x465$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	e8 b9 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010248c	obj/kern/kernel.asm	/^f010248c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	6a 00                	push   $0x0$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	52                   	push   %edx$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	e8 fc f2 ff ff       	call   f010179b <pgdir_walk>$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	8d 57 04             	lea    0x4(%edi),%edx$/;"	l
f01024a5	obj/kern/kernel.asm	/^f01024a5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	39 d0                	cmp    %edx,%eax$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	74 19                	je     f01024c5 <mem_init+0x996>$/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	68 94 88 10 f0       	push   $0xf0108894$/;"	l
f01024b1	obj/kern/kernel.asm	/^f01024b1:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01024b6	obj/kern/kernel.asm	/^f01024b6:	68 66 04 00 00       	push   $0x466$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	e8 7b db ff ff       	call   f0100040 <_panic>$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	6a 06                	push   $0x6$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	68 00 10 00 00       	push   $0x1000$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	56                   	push   %esi$/;"	l
f01024cd	obj/kern/kernel.asm	/^f01024cd:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	e8 c1 f5 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	85 c0                	test   %eax,%eax$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	74 19                	je     f01024f8 <mem_init+0x9c9>$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	68 d4 88 10 f0       	push   $0xf01088d4$/;"	l
f01024e4	obj/kern/kernel.asm	/^f01024e4:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01024e9	obj/kern/kernel.asm	/^f01024e9:	68 69 04 00 00       	push   $0x469$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	e8 48 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	8b 3d bc 0e 28 f0    	mov    0xf0280ebc,%edi$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	89 f8                	mov    %edi,%eax$/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	e8 1a e9 ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f010250a	obj/kern/kernel.asm	/^f010250a:	89 f2                	mov    %esi,%edx$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	39 d0                	cmp    %edx,%eax$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	74 19                	je     f0102535 <mem_init+0xa06>$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	68 64 88 10 f0       	push   $0xf0108864$/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102526	obj/kern/kernel.asm	/^f0102526:	68 6a 04 00 00       	push   $0x46a$/;"	l
f010252b	obj/kern/kernel.asm	/^f010252b:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	e8 0b db ff ff       	call   f0100040 <_panic>$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	74 19                	je     f0102555 <mem_init+0xa26>$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	68 f4 8e 10 f0       	push   $0xf0108ef4$/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	68 6b 04 00 00       	push   $0x46b$/;"	l
f010254b	obj/kern/kernel.asm	/^f010254b:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	e8 eb da ff ff       	call   f0100040 <_panic>$/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	6a 00                	push   $0x0$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010255f	obj/kern/kernel.asm	/^f010255f:	57                   	push   %edi$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	e8 36 f2 ff ff       	call   f010179b <pgdir_walk>$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102568	obj/kern/kernel.asm	/^f0102568:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	75 19                	jne    f0102586 <mem_init+0xa57>$/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	68 14 89 10 f0       	push   $0xf0108914$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	68 6c 04 00 00       	push   $0x46c$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	e8 ba da ff ff       	call   f0100040 <_panic>$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	75 19                	jne    f01025a9 <mem_init+0xa7a>$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	68 05 8f 10 f0       	push   $0xf0108f05$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010259a	obj/kern/kernel.asm	/^f010259a:	68 6d 04 00 00       	push   $0x46d$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	e8 97 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	6a 02                	push   $0x2$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	68 00 00 40 00       	push   $0x400000$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	53                   	push   %ebx$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	50                   	push   %eax$/;"	l
f01025b2	obj/kern/kernel.asm	/^f01025b2:	e8 e2 f4 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	85 c0                	test   %eax,%eax$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	78 19                	js     f01025d7 <mem_init+0xaa8>$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	68 48 89 10 f0       	push   $0xf0108948$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	68 70 04 00 00       	push   $0x470$/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	e8 69 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	6a 02                	push   $0x2$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	68 00 10 00 00       	push   $0x1000$/;"	l
f01025de	obj/kern/kernel.asm	/^f01025de:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	e8 ad f4 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01025ec	obj/kern/kernel.asm	/^f01025ec:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	85 c0                	test   %eax,%eax$/;"	l
f01025f1	obj/kern/kernel.asm	/^f01025f1:	74 19                	je     f010260c <mem_init+0xadd>$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	68 80 89 10 f0       	push   $0xf0108980$/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	68 73 04 00 00       	push   $0x473$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102607	obj/kern/kernel.asm	/^f0102607:	e8 34 da ff ff       	call   f0100040 <_panic>$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	6a 00                	push   $0x0$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102616	obj/kern/kernel.asm	/^f0102616:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	e8 7a f1 ff ff       	call   f010179b <pgdir_walk>$/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	74 19                	je     f0102642 <mem_init+0xb13>$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	68 bc 89 10 f0       	push   $0xf01089bc$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	68 74 04 00 00       	push   $0x474$/;"	l
f0102638	obj/kern/kernel.asm	/^f0102638:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	e8 fe d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	8b 3d bc 0e 28 f0    	mov    0xf0280ebc,%edi$/;"	l
f0102648	obj/kern/kernel.asm	/^f0102648:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	89 f8                	mov    %edi,%eax$/;"	l
f010264f	obj/kern/kernel.asm	/^f010264f:	e8 d0 e7 ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102654	obj/kern/kernel.asm	/^f0102654:	89 c1                	mov    %eax,%ecx$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102659	obj/kern/kernel.asm	/^f0102659:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102665	obj/kern/kernel.asm	/^f0102665:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102668	obj/kern/kernel.asm	/^f0102668:	39 c1                	cmp    %eax,%ecx$/;"	l
f010266a	obj/kern/kernel.asm	/^f010266a:	74 19                	je     f0102685 <mem_init+0xb56>$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	68 f4 89 10 f0       	push   $0xf01089f4$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102676	obj/kern/kernel.asm	/^f0102676:	68 77 04 00 00       	push   $0x477$/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	e8 bb d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	89 f8                	mov    %edi,%eax$/;"	l
f010268c	obj/kern/kernel.asm	/^f010268c:	e8 93 e7 ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102691	obj/kern/kernel.asm	/^f0102691:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	74 19                	je     f01026af <mem_init+0xb80>$/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	68 20 8a 10 f0       	push   $0xf0108a20$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	68 78 04 00 00       	push   $0x478$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	e8 91 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01026b2	obj/kern/kernel.asm	/^f01026b2:	66 83 78 04 02       	cmpw   $0x2,0x4(%eax)$/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	74 19                	je     f01026d2 <mem_init+0xba3>$/;"	l
f01026b9	obj/kern/kernel.asm	/^f01026b9:	68 1b 8f 10 f0       	push   $0xf0108f1b$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	68 7a 04 00 00       	push   $0x47a$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	e8 6e d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	74 19                	je     f01026f2 <mem_init+0xbc3>$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	68 2c 8f 10 f0       	push   $0xf0108f2c$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	68 7b 04 00 00       	push   $0x47b$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	e8 4e d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	6a 00                	push   $0x0$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	e8 ec eb ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026ff	obj/kern/kernel.asm	/^f01026ff:	39 c6                	cmp    %eax,%esi$/;"	l
f0102701	obj/kern/kernel.asm	/^f0102701:	75 04                	jne    f0102707 <mem_init+0xbd8>$/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	85 c0                	test   %eax,%eax$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	75 19                	jne    f0102720 <mem_init+0xbf1>$/;"	l
f0102707	obj/kern/kernel.asm	/^f0102707:	68 50 8a 10 f0       	push   $0xf0108a50$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	68 7e 04 00 00       	push   $0x47e$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	e8 20 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	6a 00                	push   $0x0$/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	e8 20 f3 ff ff       	call   f0101a50 <page_remove>$/;"	l
f0102730	obj/kern/kernel.asm	/^f0102730:	8b 3d bc 0e 28 f0    	mov    0xf0280ebc,%edi$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	89 f8                	mov    %edi,%eax$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	e8 e2 e6 ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	74 19                	je     f0102763 <mem_init+0xc34>$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	68 74 8a 10 f0       	push   $0xf0108a74$/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	68 82 04 00 00       	push   $0x482$/;"	l
f0102759	obj/kern/kernel.asm	/^f0102759:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	e8 dd d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	89 f8                	mov    %edi,%eax$/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	e8 b5 e6 ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	39 d0                	cmp    %edx,%eax$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	74 19                	je     f010279b <mem_init+0xc6c>$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	68 20 8a 10 f0       	push   $0xf0108a20$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	68 83 04 00 00       	push   $0x483$/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102796	obj/kern/kernel.asm	/^f0102796:	e8 a5 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	74 19                	je     f01027be <mem_init+0xc8f>$/;"	l
f01027a5	obj/kern/kernel.asm	/^f01027a5:	68 d2 8e 10 f0       	push   $0xf0108ed2$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	68 84 04 00 00       	push   $0x484$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	e8 82 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027be	obj/kern/kernel.asm	/^f01027be:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	74 19                	je     f01027de <mem_init+0xcaf>$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	68 2c 8f 10 f0       	push   $0xf0108f2c$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01027cf	obj/kern/kernel.asm	/^f01027cf:	68 85 04 00 00       	push   $0x485$/;"	l
f01027d4	obj/kern/kernel.asm	/^f01027d4:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01027d9	obj/kern/kernel.asm	/^f01027d9:	e8 62 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	68 00 10 00 00       	push   $0x1000$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	57                   	push   %edi$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	e8 64 f2 ff ff       	call   f0101a50 <page_remove>$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	8b 3d bc 0e 28 f0    	mov    0xf0280ebc,%edi$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027f7	obj/kern/kernel.asm	/^f01027f7:	89 f8                	mov    %edi,%eax$/;"	l
f01027f9	obj/kern/kernel.asm	/^f01027f9:	e8 26 e6 ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f01027fe	obj/kern/kernel.asm	/^f01027fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102804	obj/kern/kernel.asm	/^f0102804:	74 19                	je     f010281f <mem_init+0xcf0>$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	68 74 8a 10 f0       	push   $0xf0108a74$/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	68 89 04 00 00       	push   $0x489$/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	e8 21 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	89 f8                	mov    %edi,%eax$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	e8 f9 e5 ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010282e	obj/kern/kernel.asm	/^f010282e:	74 19                	je     f0102849 <mem_init+0xd1a>$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	68 98 8a 10 f0       	push   $0xf0108a98$/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	68 8a 04 00 00       	push   $0x48a$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	e8 f7 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	74 19                	je     f010286c <mem_init+0xd3d>$/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	68 3d 8f 10 f0       	push   $0xf0108f3d$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	68 8b 04 00 00       	push   $0x48b$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	e8 d4 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	74 19                	je     f010288c <mem_init+0xd5d>$/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	68 2c 8f 10 f0       	push   $0xf0108f2c$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	68 8c 04 00 00       	push   $0x48c$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	e8 b4 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	6a 00                	push   $0x0$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	e8 52 ea ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	75 04                	jne    f01028a2 <mem_init+0xd73>$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	85 c0                	test   %eax,%eax$/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	75 19                	jne    f01028bb <mem_init+0xd8c>$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	68 c0 8a 10 f0       	push   $0xf0108ac0$/;"	l
f01028a7	obj/kern/kernel.asm	/^f01028a7:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	68 8f 04 00 00       	push   $0x48f$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	e8 85 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01028be	obj/kern/kernel.asm	/^f01028be:	6a 00                	push   $0x0$/;"	l
f01028c0	obj/kern/kernel.asm	/^f01028c0:	e8 23 ea ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01028c8	obj/kern/kernel.asm	/^f01028c8:	85 c0                	test   %eax,%eax$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	74 19                	je     f01028e5 <mem_init+0xdb6>$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	68 80 8e 10 f0       	push   $0xf0108e80$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01028d6	obj/kern/kernel.asm	/^f01028d6:	68 92 04 00 00       	push   $0x492$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	e8 5b d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	8b 0d bc 0e 28 f0    	mov    0xf0280ebc,%ecx$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	8b 11                	mov    (%ecx),%edx$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	89 d8                	mov    %ebx,%eax$/;"	l
f01028f5	obj/kern/kernel.asm	/^f01028f5:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	39 c2                	cmp    %eax,%edx$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	74 19                	je     f010291e <mem_init+0xdef>$/;"	l
f0102905	obj/kern/kernel.asm	/^f0102905:	68 d0 87 10 f0       	push   $0xf01087d0$/;"	l
f010290a	obj/kern/kernel.asm	/^f010290a:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010290f	obj/kern/kernel.asm	/^f010290f:	68 95 04 00 00       	push   $0x495$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	e8 22 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	74 19                	je     f0102944 <mem_init+0xe15>$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	68 e3 8e 10 f0       	push   $0xf0108ee3$/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	68 97 04 00 00       	push   $0x497$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	e8 fc d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	53                   	push   %ebx$/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	e8 06 ec ff ff       	call   f0101559 <page_free>$/;"	l
f0102953	obj/kern/kernel.asm	/^f0102953:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102956	obj/kern/kernel.asm	/^f0102956:	6a 01                	push   $0x1$/;"	l
f0102958	obj/kern/kernel.asm	/^f0102958:	68 00 10 40 00       	push   $0x401000$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	e8 33 ee ff ff       	call   f010179b <pgdir_walk>$/;"	l
f0102968	obj/kern/kernel.asm	/^f0102968:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	8b 0d bc 0e 28 f0    	mov    0xf0280ebc,%ecx$/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f0102977	obj/kern/kernel.asm	/^f0102977:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	8b 3d b8 0e 28 f0    	mov    0xf0280eb8,%edi$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	89 d0                	mov    %edx,%eax$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	83 c4 10             	add    $0x10,%esp$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	39 f8                	cmp    %edi,%eax$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	72 15                	jb     f01029a4 <mem_init+0xe75>$/;"	l
f010298f	obj/kern/kernel.asm	/^f010298f:	52                   	push   %edx$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	68 9e 04 00 00       	push   $0x49e$/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	e8 9c d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	39 55 cc             	cmp    %edx,-0x34(%ebp)$/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	74 19                	je     f01029c8 <mem_init+0xe99>$/;"	l
f01029af	obj/kern/kernel.asm	/^f01029af:	68 4e 8f 10 f0       	push   $0xf0108f4e$/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	68 9f 04 00 00       	push   $0x49f$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	e8 78 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01029d5	obj/kern/kernel.asm	/^f01029d5:	89 d8                	mov    %ebx,%eax$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01029e0	obj/kern/kernel.asm	/^f01029e0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	89 c2                	mov    %eax,%edx$/;"	l
f01029e5	obj/kern/kernel.asm	/^f01029e5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	39 d7                	cmp    %edx,%edi$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	77 12                	ja     f01029fe <mem_init+0xecf>$/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	50                   	push   %eax$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f01029f2	obj/kern/kernel.asm	/^f01029f2:	6a 56                	push   $0x56$/;"	l
f01029f4	obj/kern/kernel.asm	/^f01029f4:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	e8 42 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029fe	obj/kern/kernel.asm	/^f01029fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102a06	obj/kern/kernel.asm	/^f0102a06:	68 ff 00 00 00       	push   $0xff$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	50                   	push   %eax$/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	e8 cc 3c 00 00       	call   f01066e2 <memset>$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	e8 3b eb ff ff       	call   f0101559 <page_free>$/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	6a 01                	push   $0x1$/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	6a 00                	push   $0x0$/;"	l
f0102a25	obj/kern/kernel.asm	/^f0102a25:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	e8 6b ed ff ff       	call   f010179b <pgdir_walk>$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	89 da                	mov    %ebx,%edx$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	89 d0                	mov    %edx,%eax$/;"	l
f0102a40	obj/kern/kernel.asm	/^f0102a40:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	3b 05 b8 0e 28 f0    	cmp    0xf0280eb8,%eax$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	72 12                	jb     f0102a60 <mem_init+0xf31>$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	52                   	push   %edx$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	6a 56                	push   $0x56$/;"	l
f0102a56	obj/kern/kernel.asm	/^f0102a56:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0102a5b	obj/kern/kernel.asm	/^f0102a5b:	e8 e0 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	f6 82 00 00 00 f0 01 	testb  $0x1,-0x10000000(%edx)$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	75 13                	jne    f0102a85 <mem_init+0xf56>$/;"	l
f0102a72	obj/kern/kernel.asm	/^f0102a72:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	83 e1 01             	and    $0x1,%ecx$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	74 19                	je     f0102a9e <mem_init+0xf6f>$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	68 66 8f 10 f0       	push   $0xf0108f66$/;"	l
f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	68 a9 04 00 00       	push   $0x4a9$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	e8 a2 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	39 c2                	cmp    %eax,%edx$/;"	l
f0102aa3	obj/kern/kernel.asm	/^f0102aa3:	75 d9                	jne    f0102a7e <mem_init+0xf4f>$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	a3 64 02 28 f0       	mov    %eax,0xf0280264$/;"	l
f0102ac1	obj/kern/kernel.asm	/^f0102ac1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	53                   	push   %ebx$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	e8 8f ea ff ff       	call   f0101559 <page_free>$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	83 c4 04             	add    $0x4,%esp$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0102ad0	obj/kern/kernel.asm	/^f0102ad0:	e8 84 ea ff ff       	call   f0101559 <page_free>$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	e8 7c ea ff ff       	call   f0101559 <page_free>$/;"	l
f0102add	obj/kern/kernel.asm	/^f0102add:	c7 04 24 7d 8f 10 f0 	movl   $0xf0108f7d,(%esp)$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	e8 ff 13 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	e8 f3 e7 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	89 c3                	mov    %eax,%ebx$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	e8 e5 e7 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0102b03	obj/kern/kernel.asm	/^f0102b03:	89 c6                	mov    %eax,%esi$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b08	obj/kern/kernel.asm	/^f0102b08:	85 db                	test   %ebx,%ebx$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	75 19                	jne    f0102b25 <mem_init+0xff6>$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	68 96 8f 10 f0       	push   $0xf0108f96$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	68 d6 04 00 00       	push   $0x4d6$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	e8 1b d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	85 c0                	test   %eax,%eax$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	75 19                	jne    f0102b42 <mem_init+0x1013>$/;"	l
f0102b29	obj/kern/kernel.asm	/^f0102b29:	68 9e 8f 10 f0       	push   $0xf0108f9e$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102b33	obj/kern/kernel.asm	/^f0102b33:	68 d7 04 00 00       	push   $0x4d7$/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	e8 fe d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b42	obj/kern/kernel.asm	/^f0102b42:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	75 19                	jne    f0102b5f <mem_init+0x1030>$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	68 a7 8f 10 f0       	push   $0xf0108fa7$/;"	l
f0102b4b	obj/kern/kernel.asm	/^f0102b4b:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	68 d8 04 00 00       	push   $0x4d8$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	e8 e1 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102b62	obj/kern/kernel.asm	/^f0102b62:	53                   	push   %ebx$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	e8 f1 e9 ff ff       	call   f0101559 <page_free>$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	6a 04                	push   $0x4$/;"	l
f0102b6d	obj/kern/kernel.asm	/^f0102b6d:	6a 00                	push   $0x0$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	e8 59 e9 ff ff       	call   f01014cd <page_alloc_npages>$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	89 c3                	mov    %eax,%ebx$/;"	l
f0102b76	obj/kern/kernel.asm	/^f0102b76:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	e8 16 e2 ff ff       	call   f0100d96 <check_continuous>$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	85 c0                	test   %eax,%eax$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	75 19                	jne    f0102ba0 <mem_init+0x1071>$/;"	l
f0102b87	obj/kern/kernel.asm	/^f0102b87:	68 b1 8f 10 f0       	push   $0xf0108fb1$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	68 de 04 00 00       	push   $0x4de$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	e8 a0 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	6a 04                	push   $0x4$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	53                   	push   %ebx$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	e8 71 e9 ff ff       	call   f010151c <page_free_npages>$/;"	l
f0102bab	obj/kern/kernel.asm	/^f0102bab:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102bae	obj/kern/kernel.asm	/^f0102bae:	85 c0                	test   %eax,%eax$/;"	l
f0102bb0	obj/kern/kernel.asm	/^f0102bb0:	74 19                	je     f0102bcb <mem_init+0x109c>$/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	68 c9 8f 10 f0       	push   $0xf0108fc9$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	68 e1 04 00 00       	push   $0x4e1$/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	e8 75 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce:	6a 08                	push   $0x8$/;"	l
f0102bd0	obj/kern/kernel.asm	/^f0102bd0:	6a 00                	push   $0x0$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	e8 f6 e8 ff ff       	call   f01014cd <page_alloc_npages>$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	89 c3                	mov    %eax,%ebx$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0102bde	obj/kern/kernel.asm	/^f0102bde:	e8 b3 e1 ff ff       	call   f0100d96 <check_continuous>$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102be6	obj/kern/kernel.asm	/^f0102be6:	85 c0                	test   %eax,%eax$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	75 19                	jne    f0102c03 <mem_init+0x10d4>$/;"	l
f0102bea	obj/kern/kernel.asm	/^f0102bea:	68 e2 8f 10 f0       	push   $0xf0108fe2$/;"	l
f0102bef	obj/kern/kernel.asm	/^f0102bef:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	68 e5 04 00 00       	push   $0x4e5$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102bfe	obj/kern/kernel.asm	/^f0102bfe:	e8 3d d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c03	obj/kern/kernel.asm	/^f0102c03:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	6a 08                	push   $0x8$/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	53                   	push   %ebx$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	e8 0e e9 ff ff       	call   f010151c <page_free_npages>$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	85 c0                	test   %eax,%eax$/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	74 19                	je     f0102c2e <mem_init+0x10ff>$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	68 fa 8f 10 f0       	push   $0xf0108ffa$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	68 e8 04 00 00       	push   $0x4e8$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102c29	obj/kern/kernel.asm	/^f0102c29:	e8 12 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c31	obj/kern/kernel.asm	/^f0102c31:	56                   	push   %esi$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	e8 22 e9 ff ff       	call   f0101559 <page_free>$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	83 c4 08             	add    $0x8,%esp$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	6a 04                	push   $0x4$/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	6a 01                	push   $0x1$/;"	l
f0102c3e	obj/kern/kernel.asm	/^f0102c3e:	e8 8a e8 ff ff       	call   f01014cd <page_alloc_npages>$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	89 c1                	mov    %eax,%ecx$/;"	l
f0102c45	obj/kern/kernel.asm	/^f0102c45:	2b 0d c0 0e 28 f0    	sub    0xf0280ec0,%ecx$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0102c4e	obj/kern/kernel.asm	/^f0102c4e:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102c51	obj/kern/kernel.asm	/^f0102c51:	89 ca                	mov    %ecx,%edx$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c59	obj/kern/kernel.asm	/^f0102c59:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	72 12                	jb     f0102c73 <mem_init+0x1144>$/;"	l
f0102c61	obj/kern/kernel.asm	/^f0102c61:	51                   	push   %ecx$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	6a 56                	push   $0x56$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	e8 cd d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	80 b9 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%ecx)$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	75 11                	jne    f0102c8d <mem_init+0x115e>$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	8d 91 01 00 00 f0    	lea    -0xfffffff(%ecx),%edx$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	81 e9 00 c0 ff 0f    	sub    $0xfffc000,%ecx$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	74 19                	je     f0102ca6 <mem_init+0x1177>$/;"	l
f0102c8d	obj/kern/kernel.asm	/^f0102c8d:	68 13 90 10 f0       	push   $0xf0109013$/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	68 f2 04 00 00       	push   $0x4f2$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	e8 9a d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	39 ca                	cmp    %ecx,%edx$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	75 db                	jne    f0102c88 <mem_init+0x1159>$/;"	l
f0102cad	obj/kern/kernel.asm	/^f0102cad:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	6a 04                	push   $0x4$/;"	l
f0102cb2	obj/kern/kernel.asm	/^f0102cb2:	50                   	push   %eax$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	e8 64 e8 ff ff       	call   f010151c <page_free_npages>$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102cbb	obj/kern/kernel.asm	/^f0102cbb:	85 c0                	test   %eax,%eax$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	74 19                	je     f0102cd8 <mem_init+0x11a9>$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	68 20 90 10 f0       	push   $0xf0109020$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	68 f6 04 00 00       	push   $0x4f6$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	e8 68 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102cdb	obj/kern/kernel.asm	/^f0102cdb:	68 3a 90 10 f0       	push   $0xf010903a$/;"	l
f0102ce0	obj/kern/kernel.asm	/^f0102ce0:	e8 03 12 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	a1 c0 0e 28 f0       	mov    0xf0280ec0,%eax$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	77 15                	ja     f0102d09 <mem_init+0x11da>$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	50                   	push   %eax$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	68 bd 00 00 00       	push   $0xbd$/;"	l
f0102cff	obj/kern/kernel.asm	/^f0102cff:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102d04	obj/kern/kernel.asm	/^f0102d04:	e8 37 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	8b 15 b8 0e 28 f0    	mov    0xf0280eb8,%edx$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	8d 14 d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%edx$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d19	obj/kern/kernel.asm	/^f0102d19:	6a 04                	push   $0x4$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	50                   	push   %eax$/;"	l
f0102d21	obj/kern/kernel.asm	/^f0102d21:	89 d0                	mov    %edx,%eax$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	50                   	push   %eax$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	68 00 00 00 ef       	push   $0xef000000$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	e8 4d eb ff ff       	call   f0101886 <boot_map_region>$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	a1 6c 02 28 f0       	mov    0xf028026c,%eax$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	77 15                	ja     f0102d5d <mem_init+0x122e>$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	50                   	push   %eax$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	68 c6 00 00 00       	push   $0xc6$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	e8 e3 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	6a 04                	push   $0x4$/;"	l
f0102d62	obj/kern/kernel.asm	/^f0102d62:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	50                   	push   %eax$/;"	l
f0102d68	obj/kern/kernel.asm	/^f0102d68:	68 00 00 02 00       	push   $0x20000$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	68 00 00 c0 ee       	push   $0xeec00000$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0102d78	obj/kern/kernel.asm	/^f0102d78:	e8 09 eb ff ff       	call   f0101886 <boot_map_region>$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	b8 00 c0 11 f0       	mov    $0xf011c000,%eax$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	77 15                	ja     f0102da1 <mem_init+0x1272>$/;"	l
f0102d8c	obj/kern/kernel.asm	/^f0102d8c:	50                   	push   %eax$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0102d92	obj/kern/kernel.asm	/^f0102d92:	68 d3 00 00 00       	push   $0xd3$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	e8 9f d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	6a 02                	push   $0x2$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	68 00 c0 11 00       	push   $0x11c000$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	68 00 80 00 00       	push   $0x8000$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	68 00 80 bf ef       	push   $0xefbf8000$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0102dbb	obj/kern/kernel.asm	/^f0102dbb:	e8 c6 ea ff ff       	call   f0101886 <boot_map_region>$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	83 c4 14             	add    $0x14,%esp$/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	6a 02                	push   $0x2$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	6a 00                	push   $0x0$/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	68 00 00 00 10       	push   $0x10000000$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	68 00 00 00 f0       	push   $0xf0000000$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	e8 aa ea ff ff       	call   f0101886 <boot_map_region>$/;"	l
f0102ddc	obj/kern/kernel.asm	/^f0102ddc:	83 c4 20             	add    $0x20,%esp$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	e8 05 eb ff ff       	call   f01018e9 <mem_init_mp>$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	e8 00 eb ff ff       	call   f01018e9 <mem_init_mp>$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	8b 3d bc 0e 28 f0    	mov    0xf0280ebc,%edi$/;"	l
f0102def	obj/kern/kernel.asm	/^f0102def:	a1 b8 0e 28 f0       	mov    0xf0280eb8,%eax$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102dfe	obj/kern/kernel.asm	/^f0102dfe:	8b 35 c0 0e 28 f0    	mov    0xf0280ec0,%esi$/;"	l
f0102e04	obj/kern/kernel.asm	/^f0102e04:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	75 10                	jne    f0102e26 <mem_init+0x12f7>$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	8b 35 6c 02 28 f0    	mov    0xf028026c,%esi$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	eb 5c                	jmp    f0102e82 <mem_init+0x1353>$/;"	l
f0102e26	obj/kern/kernel.asm	/^f0102e26:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0102e2c	obj/kern/kernel.asm	/^f0102e2c:	89 f8                	mov    %edi,%eax$/;"	l
f0102e2e	obj/kern/kernel.asm	/^f0102e2e:	e8 f1 df ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	81 7d d0 ff ff ff ef 	cmpl   $0xefffffff,-0x30(%ebp)$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	77 15                	ja     f0102e51 <mem_init+0x1322>$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	56                   	push   %esi$/;"	l
f0102e3d	obj/kern/kernel.asm	/^f0102e3d:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	68 db 03 00 00       	push   $0x3db$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	e8 ef d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e51	obj/kern/kernel.asm	/^f0102e51:	8d 94 1e 00 00 00 10 	lea    0x10000000(%esi,%ebx,1),%edx$/;"	l
f0102e58	obj/kern/kernel.asm	/^f0102e58:	39 d0                	cmp    %edx,%eax$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	74 19                	je     f0102e75 <mem_init+0x1346>$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	68 e4 8a 10 f0       	push   $0xf0108ae4$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	68 db 03 00 00       	push   $0x3db$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	e8 cb d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	77 a6                	ja     f0102e26 <mem_init+0x12f7>$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	eb 94                	jmp    f0102e16 <mem_init+0x12e7>$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	89 da                	mov    %ebx,%edx$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	89 f8                	mov    %edi,%eax$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	e8 99 df ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)$/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	77 15                	ja     f0102ea9 <mem_init+0x137a>$/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	56                   	push   %esi$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	68 e0 03 00 00       	push   $0x3e0$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102ea4	obj/kern/kernel.asm	/^f0102ea4:	e8 97 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	8d 94 1e 00 00 40 21 	lea    0x21400000(%esi,%ebx,1),%edx$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	39 d0                	cmp    %edx,%eax$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	74 19                	je     f0102ecd <mem_init+0x139e>$/;"	l
f0102eb4	obj/kern/kernel.asm	/^f0102eb4:	68 18 8b 10 f0       	push   $0xf0108b18$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	68 e0 03 00 00       	push   $0x3e0$/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	e8 73 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102ed3	obj/kern/kernel.asm	/^f0102ed3:	81 fb 00 00 c2 ee    	cmp    $0xeec20000,%ebx$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	75 a7                	jne    f0102e82 <mem_init+0x1353>$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	85 f6                	test   %esi,%esi$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	74 40                	je     f0102f25 <mem_init+0x13f6>$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102eea	obj/kern/kernel.asm	/^f0102eea:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	89 f8                	mov    %edi,%eax$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	e8 2d df ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	74 19                	je     f0102f14 <mem_init+0x13e5>$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	68 4c 8b 10 f0       	push   $0xf0108b4c$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	68 e4 03 00 00       	push   $0x3e4$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	e8 2c d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	39 de                	cmp    %ebx,%esi$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	77 cc                	ja     f0102eea <mem_init+0x13bb>$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	eb 05                	jmp    f0102f2a <mem_init+0x13fb>$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	89 da                	mov    %ebx,%edx$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	89 f8                	mov    %edi,%eax$/;"	l
f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	e8 f1 de ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102f33	obj/kern/kernel.asm	/^f0102f33:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	74 19                	je     f0102f50 <mem_init+0x1421>$/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	68 56 90 10 f0       	push   $0xf0109056$/;"	l
f0102f3c	obj/kern/kernel.asm	/^f0102f3c:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	e8 f0 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	75 cc                	jne    f0102f2a <mem_init+0x13fb>$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	89 da                	mov    %ebx,%edx$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	89 f8                	mov    %edi,%eax$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	e8 b8 de ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	74 19                	je     f0102f89 <mem_init+0x145a>$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	68 56 90 10 f0       	push   $0xf0109056$/;"	l
f0102f75	obj/kern/kernel.asm	/^f0102f75:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	68 ee 03 00 00       	push   $0x3ee$/;"	l
f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	e8 b7 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f8f	obj/kern/kernel.asm	/^f0102f8f:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	75 cc                	jne    f0102f63 <mem_init+0x1434>$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	bb 00 00 00 fe       	mov    $0xfe000000,%ebx$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	89 da                	mov    %ebx,%edx$/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	89 f8                	mov    %edi,%eax$/;"	l
f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	e8 7f de ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	39 d8                	cmp    %ebx,%eax$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	74 19                	je     f0102fc2 <mem_init+0x1493>$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	68 56 90 10 f0       	push   $0xf0109056$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0102fb3	obj/kern/kernel.asm	/^f0102fb3:	68 f2 03 00 00       	push   $0x3f2$/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	e8 7e d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fc8	obj/kern/kernel.asm	/^f0102fc8:	81 fb 00 f0 ff ff    	cmp    $0xfffff000,%ebx$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	75 cc                	jne    f0102f9c <mem_init+0x146d>$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	be 00 20 28 f0       	mov    $0xf0282000,%esi$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	c7 45 cc 00 80 bf ef 	movl   $0xefbf8000,-0x34(%ebp)$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	8d 88 00 80 00 00    	lea    0x8000(%eax),%ecx$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	89 c3                	mov    %eax,%ebx$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	05 00 80 40 20       	add    $0x20408000,%eax$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	89 da                	mov    %ebx,%edx$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	89 f8                	mov    %edi,%eax$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	e8 26 de ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	81 fe ff ff ff ef    	cmp    $0xefffffff,%esi$/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	77 15                	ja     f010301b <mem_init+0x14ec>$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	56                   	push   %esi$/;"	l
f0103007	obj/kern/kernel.asm	/^f0103007:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f0103011	obj/kern/kernel.asm	/^f0103011:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0103016	obj/kern/kernel.asm	/^f0103016:	e8 25 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010301e	obj/kern/kernel.asm	/^f010301e:	8d 94 0b 00 20 28 f0 	lea    -0xfd7e000(%ebx,%ecx,1),%edx$/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	39 c2                	cmp    %eax,%edx$/;"	l
f0103027	obj/kern/kernel.asm	/^f0103027:	74 19                	je     f0103042 <mem_init+0x1513>$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	68 74 8b 10 f0       	push   $0xf0108b74$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	e8 fe cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103048	obj/kern/kernel.asm	/^f0103048:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	75 a8                	jne    f0102ff5 <mem_init+0x14c6>$/;"	l
f010304d	obj/kern/kernel.asm	/^f010304d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0103050	obj/kern/kernel.asm	/^f0103050:	8d 98 00 80 ff ff    	lea    -0x8000(%eax),%ebx$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	89 c6                	mov    %eax,%esi$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	89 da                	mov    %ebx,%edx$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	89 f8                	mov    %edi,%eax$/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	e8 c0 dd ff ff       	call   f0100e24 <check_va2pa>$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	74 19                	je     f0103082 <mem_init+0x1553>$/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f0103078	obj/kern/kernel.asm	/^f0103078:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	e8 be cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	39 f3                	cmp    %esi,%ebx$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	75 cf                	jne    f010305b <mem_init+0x152c>$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	81 6d cc 00 00 01 00 	subl   $0x10000,-0x34(%ebp)$/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	81 45 c8 00 80 01 00 	addl   $0x18000,-0x38(%ebp)$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	81 c6 00 80 00 00    	add    $0x8000,%esi$/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	81 fe 00 20 2c f0    	cmp    $0xf02c2000,%esi$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	0f 85 2d ff ff ff    	jne    f0102fdc <mem_init+0x14ad>$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	83 fa 03             	cmp    $0x3,%edx$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	77 1f                	ja     f01030de <mem_init+0x15af>$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	75 7e                	jne    f0103143 <mem_init+0x1614>$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	68 71 90 10 f0       	push   $0xf0109071$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	68 06 04 00 00       	push   $0x406$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	e8 62 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	76 3f                	jbe    f0103124 <mem_init+0x15f5>$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	75 19                	jne    f0103106 <mem_init+0x15d7>$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	68 71 90 10 f0       	push   $0xf0109071$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	68 0a 04 00 00       	push   $0x40a$/;"	l
f01030fc	obj/kern/kernel.asm	/^f01030fc:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	e8 3a cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103106	obj/kern/kernel.asm	/^f0103106:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	75 38                	jne    f0103143 <mem_init+0x1614>$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	68 82 90 10 f0       	push   $0xf0109082$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	68 0b 04 00 00       	push   $0x40b$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	e8 1c cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0103128	obj/kern/kernel.asm	/^f0103128:	74 19                	je     f0103143 <mem_init+0x1614>$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a:	68 93 90 10 f0       	push   $0xf0109093$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	68 0d 04 00 00       	push   $0x40d$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	e8 fd ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103143	obj/kern/kernel.asm	/^f0103143:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	0f 85 63 ff ff ff    	jne    f01030b4 <mem_init+0x1585>$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	68 e0 8b 10 f0       	push   $0xf0108be0$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	e8 8a 0d 00 00       	call   f0103ee8 <cprintf>$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	77 15                	ja     f0103182 <mem_init+0x1653>$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	50                   	push   %eax$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	68 ef 00 00 00       	push   $0xef$/;"	l
f0103178	obj/kern/kernel.asm	/^f0103178:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	e8 be ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103182	obj/kern/kernel.asm	/^f0103182:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	e8 7d dd ff ff       	call   f0100f11 <check_page_free_list>$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f010319a	obj/kern/kernel.asm	/^f010319a:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031a5	obj/kern/kernel.asm	/^f01031a5:	6a 00                	push   $0x0$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	e8 3c e1 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01031ac	obj/kern/kernel.asm	/^f01031ac:	89 c3                	mov    %eax,%ebx$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	85 c0                	test   %eax,%eax$/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3:	75 19                	jne    f01031ce <mem_init+0x169f>$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	68 d5 8d 10 f0       	push   $0xf0108dd5$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01031bf	obj/kern/kernel.asm	/^f01031bf:	68 32 05 00 00       	push   $0x532$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	e8 72 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	6a 00                	push   $0x0$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	e8 10 e1 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	89 c7                	mov    %eax,%edi$/;"	l
f01031da	obj/kern/kernel.asm	/^f01031da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	85 c0                	test   %eax,%eax$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	75 19                	jne    f01031fa <mem_init+0x16cb>$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	68 eb 8d 10 f0       	push   $0xf0108deb$/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	68 33 05 00 00       	push   $0x533$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	e8 46 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	6a 00                	push   $0x0$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	e8 e4 e0 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	89 c6                	mov    %eax,%esi$/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	85 c0                	test   %eax,%eax$/;"	l
f010320b	obj/kern/kernel.asm	/^f010320b:	75 19                	jne    f0103226 <mem_init+0x16f7>$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	68 01 8e 10 f0       	push   $0xf0108e01$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	68 34 05 00 00       	push   $0x534$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	e8 1a ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103226	obj/kern/kernel.asm	/^f0103226:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	53                   	push   %ebx$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	e8 2a e3 ff ff       	call   f0101559 <page_free>$/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	89 f8                	mov    %edi,%eax$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	89 c2                	mov    %eax,%edx$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	72 12                	jb     f010325f <mem_init+0x1730>$/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	50                   	push   %eax$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0103253	obj/kern/kernel.asm	/^f0103253:	6a 56                	push   $0x56$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	e8 e1 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	6a 01                	push   $0x1$/;"	l
f0103269	obj/kern/kernel.asm	/^f0103269:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	50                   	push   %eax$/;"	l
f010326f	obj/kern/kernel.asm	/^f010326f:	e8 6e 34 00 00       	call   f01066e2 <memset>$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	89 f0                	mov    %esi,%eax$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	89 c2                	mov    %eax,%edx$/;"	l
f0103284	obj/kern/kernel.asm	/^f0103284:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	83 c4 10             	add    $0x10,%esp$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	72 12                	jb     f01032a4 <mem_init+0x1775>$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	50                   	push   %eax$/;"	l
f0103293	obj/kern/kernel.asm	/^f0103293:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	6a 56                	push   $0x56$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	e8 9c cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	68 00 10 00 00       	push   $0x1000$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	6a 02                	push   $0x2$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	50                   	push   %eax$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	e8 29 34 00 00       	call   f01066e2 <memset>$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	6a 02                	push   $0x2$/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	68 00 10 00 00       	push   $0x1000$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	57                   	push   %edi$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	e8 cd e7 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	83 c4 20             	add    $0x20,%esp$/;"	l
f01032cf	obj/kern/kernel.asm	/^f01032cf:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	74 19                	je     f01032ef <mem_init+0x17c0>$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	68 d2 8e 10 f0       	push   $0xf0108ed2$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	68 39 05 00 00       	push   $0x539$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	e8 51 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	01 01 01 $/;"	l
f01032f9	obj/kern/kernel.asm	/^f01032f9:	74 19                	je     f0103314 <mem_init+0x17e5>$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	68 00 8c 10 f0       	push   $0xf0108c00$/;"	l
f0103300	obj/kern/kernel.asm	/^f0103300:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	68 3a 05 00 00       	push   $0x53a$/;"	l
f010330a	obj/kern/kernel.asm	/^f010330a:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010330f	obj/kern/kernel.asm	/^f010330f:	e8 2c cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	6a 02                	push   $0x2$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	68 00 10 00 00       	push   $0x1000$/;"	l
f010331b	obj/kern/kernel.asm	/^f010331b:	56                   	push   %esi$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f0103322	obj/kern/kernel.asm	/^f0103322:	e8 72 e7 ff ff       	call   f0101a99 <page_insert>$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	83 c4 10             	add    $0x10,%esp$/;"	l
f010332a	obj/kern/kernel.asm	/^f010332a:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103331	obj/kern/kernel.asm	/^f0103331:	02 02 02 $/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	74 19                	je     f010334f <mem_init+0x1820>$/;"	l
f0103336	obj/kern/kernel.asm	/^f0103336:	68 24 8c 10 f0       	push   $0xf0108c24$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	68 3c 05 00 00       	push   $0x53c$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	e8 f1 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103354	obj/kern/kernel.asm	/^f0103354:	74 19                	je     f010336f <mem_init+0x1840>$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	68 f4 8e 10 f0       	push   $0xf0108ef4$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103360	obj/kern/kernel.asm	/^f0103360:	68 3d 05 00 00       	push   $0x53d$/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	e8 d1 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	74 19                	je     f010338f <mem_init+0x1860>$/;"	l
f0103376	obj/kern/kernel.asm	/^f0103376:	68 3d 8f 10 f0       	push   $0xf0108f3d$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103380	obj/kern/kernel.asm	/^f0103380:	68 3e 05 00 00       	push   $0x53e$/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010338a	obj/kern/kernel.asm	/^f010338a:	e8 b1 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010338f	obj/kern/kernel.asm	/^f010338f:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	03 03 03 $/;"	l
f0103399	obj/kern/kernel.asm	/^f0103399:	89 f0                	mov    %esi,%eax$/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f01033a1	obj/kern/kernel.asm	/^f01033a1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	89 c2                	mov    %eax,%edx$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	3b 15 b8 0e 28 f0    	cmp    0xf0280eb8,%edx$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	72 12                	jb     f01033c6 <mem_init+0x1897>$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	50                   	push   %eax$/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	6a 56                	push   $0x56$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	e8 7a cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f01033cd	obj/kern/kernel.asm	/^f01033cd:	03 03 03 $/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	74 19                	je     f01033eb <mem_init+0x18bc>$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	68 48 8c 10 f0       	push   $0xf0108c48$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	68 40 05 00 00       	push   $0x540$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f01033e6	obj/kern/kernel.asm	/^f01033e6:	e8 55 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033eb	obj/kern/kernel.asm	/^f01033eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	68 00 10 00 00       	push   $0x1000$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	e8 52 e6 ff ff       	call   f0101a50 <page_remove>$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	74 19                	je     f0103421 <mem_init+0x18f2>$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	68 2c 8f 10 f0       	push   $0xf0108f2c$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	68 42 05 00 00       	push   $0x542$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	e8 1f cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	8b 0d bc 0e 28 f0    	mov    0xf0280ebc,%ecx$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	8b 11                	mov    (%ecx),%edx$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010342f	obj/kern/kernel.asm	/^f010342f:	89 d8                	mov    %ebx,%eax$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	2b 05 c0 0e 28 f0    	sub    0xf0280ec0,%eax$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010343d	obj/kern/kernel.asm	/^f010343d:	39 c2                	cmp    %eax,%edx$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	74 19                	je     f010345a <mem_init+0x192b>$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	68 d0 87 10 f0       	push   $0xf01087d0$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	68 45 05 00 00       	push   $0x545$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	e8 e6 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	74 19                	je     f0103480 <mem_init+0x1951>$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	68 e3 8e 10 f0       	push   $0xf0108ee3$/;"	l
f010346c	obj/kern/kernel.asm	/^f010346c:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0103471	obj/kern/kernel.asm	/^f0103471:	68 47 05 00 00       	push   $0x547$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	68 d5 8c 10 f0       	push   $0xf0108cd5$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	e8 c0 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103480	obj/kern/kernel.asm	/^f0103480:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	53                   	push   %ebx$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	e8 ca e0 ff ff       	call   f0101559 <page_free>$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	c7 04 24 74 8c 10 f0 	movl   $0xf0108c74,(%esp)$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	e8 4d 0a 00 00       	call   f0103ee8 <cprintf>$/;"	l
f010349b	obj/kern/kernel.asm	/^f010349b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010349e	obj/kern/kernel.asm	/^f010349e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	5b                   	pop    %ebx$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	5e                   	pop    %esi$/;"	l
f01034a3	obj/kern/kernel.asm	/^f01034a3:	5f                   	pop    %edi$/;"	l
f01034a4	obj/kern/kernel.asm	/^f01034a4:	5d                   	pop    %ebp$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	c3                   	ret    $/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6 <user_mem_check>:$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	55                   	push   %ebp$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	57                   	push   %edi$/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	56                   	push   %esi$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	53                   	push   %ebx$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01034ba	obj/kern/kernel.asm	/^f01034ba:	89 c1                	mov    %eax,%ecx$/;"	l
f01034bc	obj/kern/kernel.asm	/^f01034bc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f01034c5	obj/kern/kernel.asm	/^f01034c5:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	89 c2                	mov    %eax,%edx$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f01034d7	obj/kern/kernel.asm	/^f01034d7:	83 ce 01             	or     $0x1,%esi$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	89 c8                	mov    %ecx,%eax$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	39 d0                	cmp    %edx,%eax$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	73 6f                	jae    f010354f <user_mem_check+0xa9>$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	77 15                	ja     f01034fc <user_mem_check+0x56>$/;"	l
f01034e7	obj/kern/kernel.asm	/^f01034e7:	89 c3                	mov    %eax,%ebx$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	eb 21                	jmp    f010350c <user_mem_check+0x66>$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	76 19                	jbe    f010350c <user_mem_check+0x66>$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	39 5d e0             	cmp    %ebx,-0x20(%ebp)$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	0f 44 5d 0c          	cmove  0xc(%ebp),%ebx$/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	eb 03                	jmp    f01034ff <user_mem_check+0x59>$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01034ff	obj/kern/kernel.asm	/^f01034ff:	89 1d 5c 02 28 f0    	mov    %ebx,0xf028025c$/;"	l
f0103505	obj/kern/kernel.asm	/^f0103505:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	eb 48                	jmp    f0103554 <user_mem_check+0xae>$/;"	l
f010350c	obj/kern/kernel.asm	/^f010350c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	6a 00                	push   $0x0$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	53                   	push   %ebx$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	ff 77 64             	pushl  0x64(%edi)$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	e8 81 e2 ff ff       	call   f010179b <pgdir_walk>$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	85 c0                	test   %eax,%eax$/;"	l
f010351f	obj/kern/kernel.asm	/^f010351f:	74 08                	je     f0103529 <user_mem_check+0x83>$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	89 f2                	mov    %esi,%edx$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	23 10                	and    (%eax),%edx$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	39 d6                	cmp    %edx,%esi$/;"	l
f0103527	obj/kern/kernel.asm	/^f0103527:	74 14                	je     f010353d <user_mem_check+0x97>$/;"	l
f0103529	obj/kern/kernel.asm	/^f0103529:	39 5d e0             	cmp    %ebx,-0x20(%ebp)$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	0f 44 5d 0c          	cmove  0xc(%ebp),%ebx$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	89 1d 5c 02 28 f0    	mov    %ebx,0xf028025c$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	eb 17                	jmp    f0103554 <user_mem_check+0xae>$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	77 a3                	ja     f01034eb <user_mem_check+0x45>$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	eb 05                	jmp    f0103554 <user_mem_check+0xae>$/;"	l
f010354f	obj/kern/kernel.asm	/^f010354f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103554	obj/kern/kernel.asm	/^f0103554:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	5b                   	pop    %ebx$/;"	l
f0103558	obj/kern/kernel.asm	/^f0103558:	5e                   	pop    %esi$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	5f                   	pop    %edi$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	5d                   	pop    %ebp$/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	c3                   	ret    $/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c <user_mem_assert>:$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	55                   	push   %ebp$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	89 e5                	mov    %esp,%ebp$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	53                   	push   %ebx$/;"	l
f0103560	obj/kern/kernel.asm	/^f0103560:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	83 c8 04             	or     $0x4,%eax$/;"	l
f010356c	obj/kern/kernel.asm	/^f010356c:	50                   	push   %eax$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	53                   	push   %ebx$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	e8 2d ff ff ff       	call   f01034a6 <user_mem_check>$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	83 c4 10             	add    $0x10,%esp$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	85 c0                	test   %eax,%eax$/;"	l
f010357e	obj/kern/kernel.asm	/^f010357e:	79 21                	jns    f01035a1 <user_mem_assert+0x45>$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	ff 35 5c 02 28 f0    	pushl  0xf028025c$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	ff 73 48             	pushl  0x48(%ebx)$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	68 a0 8c 10 f0       	push   $0xf0108ca0$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	e8 52 09 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0103596	obj/kern/kernel.asm	/^f0103596:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	e8 2c 06 00 00       	call   f0103bca <env_destroy>$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	c9                   	leave  $/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	c3                   	ret    $/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6 <region_alloc>:$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	55                   	push   %ebp$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	57                   	push   %edi$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	56                   	push   %esi$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	53                   	push   %ebx$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	89 c7                	mov    %eax,%edi$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	89 d0                	mov    %edx,%eax$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	39 f0                	cmp    %esi,%eax$/;"	l
f01035ca	obj/kern/kernel.asm	/^f01035ca:	73 5e                	jae    f010362a <region_alloc+0x84>$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	89 c3                	mov    %eax,%ebx$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	6a 00                	push   $0x0$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	e8 10 dd ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035db	obj/kern/kernel.asm	/^f01035db:	85 c0                	test   %eax,%eax$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	75 17                	jne    f01035f6 <region_alloc+0x50>$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01035e2	obj/kern/kernel.asm	/^f01035e2:	68 a4 90 10 f0       	push   $0xf01090a4$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	68 35 01 00 00       	push   $0x135$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	e8 4a ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	6a 06                	push   $0x6$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	53                   	push   %ebx$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	50                   	push   %eax$/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	ff 77 64             	pushl  0x64(%edi)$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	e8 97 e4 ff ff       	call   f0101a99 <page_insert>$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	85 c0                	test   %eax,%eax$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	74 17                	je     f0103620 <region_alloc+0x7a>$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	68 d8 90 10 f0       	push   $0xf01090d8$/;"	l
f0103611	obj/kern/kernel.asm	/^f0103611:	68 38 01 00 00       	push   $0x138$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	e8 20 ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	39 de                	cmp    %ebx,%esi$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	77 a4                	ja     f01035ce <region_alloc+0x28>$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	89 47 60             	mov    %eax,0x60(%edi)$/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	5b                   	pop    %ebx$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	5e                   	pop    %esi$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	5f                   	pop    %edi$/;"	l
f0103636	obj/kern/kernel.asm	/^f0103636:	5d                   	pop    %ebp$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	c3                   	ret    $/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638 <envid2env>:$/;"	l
f0103638	obj/kern/kernel.asm	/^f0103638:	55                   	push   %ebp$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	89 e5                	mov    %esp,%ebp$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	56                   	push   %esi$/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	53                   	push   %ebx$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103640	obj/kern/kernel.asm	/^f0103640:	85 c0                	test   %eax,%eax$/;"	l
f0103642	obj/kern/kernel.asm	/^f0103642:	75 1a                	jne    f010365e <envid2env+0x26>$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	e8 0e 37 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	89 02                	mov    %eax,(%edx)$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	eb 72                	jmp    f01036d0 <envid2env+0x98>$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	89 c3                	mov    %eax,%ebx$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	03 1d 6c 02 28 f0    	add    0xf028026c,%ebx$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	74 05                	je     f010367a <envid2env+0x42>$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	3b 43 48             	cmp    0x48(%ebx),%eax$/;"	l
f0103678	obj/kern/kernel.asm	/^f0103678:	74 10                	je     f010368a <envid2env+0x52>$/;"	l
f010367a	obj/kern/kernel.asm	/^f010367a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	eb 46                	jmp    f01036d0 <envid2env+0x98>$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	74 36                	je     f01036c6 <envid2env+0x8e>$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	e8 c2 36 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103695	obj/kern/kernel.asm	/^f0103695:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	3b 98 28 10 28 f0    	cmp    -0xfd7efd8(%eax),%ebx$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	74 26                	je     f01036c6 <envid2env+0x8e>$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	e8 af 36 00 00       	call   f0106d57 <cpunum>$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01036ab	obj/kern/kernel.asm	/^f01036ab:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f01036b1	obj/kern/kernel.asm	/^f01036b1:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f01036b4	obj/kern/kernel.asm	/^f01036b4:	74 10                	je     f01036c6 <envid2env+0x8e>$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	eb 0a                	jmp    f01036d0 <envid2env+0x98>$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	89 18                	mov    %ebx,(%eax)$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	5b                   	pop    %ebx$/;"	l
f01036d1	obj/kern/kernel.asm	/^f01036d1:	5e                   	pop    %esi$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	5d                   	pop    %ebp$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	c3                   	ret    $/;"	l
f01036d4	obj/kern/kernel.asm	/^f01036d4 <env_init_percpu>:$/;"	l
f01036d4	obj/kern/kernel.asm	/^f01036d4:	55                   	push   %ebp$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	b8 00 63 12 f0       	mov    $0xf0126300,%eax$/;"	l
f01036dc	obj/kern/kernel.asm	/^f01036dc:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4:	8e e8                	mov    %eax,%gs$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	8e e0                	mov    %eax,%fs$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	8e c0                	mov    %eax,%es$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	8e d8                	mov    %eax,%ds$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	8e d0                	mov    %eax,%ss$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	ea fa 36 10 f0 08 00 	ljmp   $0x8,$0xf01036fa$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	0f 00 d0             	lldt   %ax$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	5d                   	pop    %ebp$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	c3                   	ret    $/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704 <env_init>:$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	8b 0d 6c 02 28 f0    	mov    0xf028026c,%ecx$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	8d 81 80 00 00 00    	lea    0x80(%ecx),%eax$/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	8d 91 00 00 02 00    	lea    0x20000(%ecx),%edx$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	89 40 c4             	mov    %eax,-0x3c(%eax)$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	c7 40 c8 00 00 00 00 	movl   $0x0,-0x38(%eax)$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	c7 40 d4 00 00 00 00 	movl   $0x0,-0x2c(%eax)$/;"	l
f0103727	obj/kern/kernel.asm	/^f0103727:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	39 d0                	cmp    %edx,%eax$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	75 e8                	jne    f0103716 <env_init+0x12>$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	55                   	push   %ebp$/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	c7 81 c4 ff 01 00 00 	movl   $0x0,0x1ffc4(%ecx)$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	00 00 00 $/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	c7 81 c8 ff 01 00 00 	movl   $0x0,0x1ffc8(%ecx)$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	00 00 00 $/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	c7 81 d4 ff 01 00 00 	movl   $0x0,0x1ffd4(%ecx)$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	00 00 00 $/;"	l
f010374f	obj/kern/kernel.asm	/^f010374f:	89 0d 70 02 28 f0    	mov    %ecx,0xf0280270$/;"	l
f0103755	obj/kern/kernel.asm	/^f0103755:	e8 7a ff ff ff       	call   f01036d4 <env_init_percpu>$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	5d                   	pop    %ebp$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	c3                   	ret    $/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c <env_alloc>:$/;"	l
f010375c	obj/kern/kernel.asm	/^f010375c:	55                   	push   %ebp$/;"	l
f010375d	obj/kern/kernel.asm	/^f010375d:	89 e5                	mov    %esp,%ebp$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	53                   	push   %ebx$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	8b 1d 70 02 28 f0    	mov    0xf0280270,%ebx$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	85 db                	test   %ebx,%ebx$/;"	l
f010376b	obj/kern/kernel.asm	/^f010376b:	0f 84 3b 01 00 00    	je     f01038ac <env_alloc+0x150>$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	6a 01                	push   $0x1$/;"	l
f0103776	obj/kern/kernel.asm	/^f0103776:	e8 6d db ff ff       	call   f01012e8 <page_alloc>$/;"	l
f010377b	obj/kern/kernel.asm	/^f010377b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010377e	obj/kern/kernel.asm	/^f010377e:	85 c0                	test   %eax,%eax$/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	0f 84 2d 01 00 00    	je     f01038b3 <env_alloc+0x157>$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	89 c2                	mov    %eax,%edx$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	2b 15 c0 0e 28 f0    	sub    0xf0280ec0,%edx$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103791	obj/kern/kernel.asm	/^f0103791:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	89 d1                	mov    %edx,%ecx$/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103799	obj/kern/kernel.asm	/^f0103799:	3b 0d b8 0e 28 f0    	cmp    0xf0280eb8,%ecx$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	72 12                	jb     f01037b3 <env_alloc+0x57>$/;"	l
f01037a1	obj/kern/kernel.asm	/^f01037a1:	52                   	push   %edx$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	6a 56                	push   $0x56$/;"	l
f01037a9	obj/kern/kernel.asm	/^f01037a9:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	e8 8d c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037b3	obj/kern/kernel.asm	/^f01037b3:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	89 53 64             	mov    %edx,0x64(%ebx)$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	b8 ec 0e 00 00       	mov    $0xeec,%eax$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	8b 15 bc 0e 28 f0    	mov    0xf0280ebc,%edx$/;"	l
f01037cc	obj/kern/kernel.asm	/^f01037cc:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f01037cf	obj/kern/kernel.asm	/^f01037cf:	8b 53 64             	mov    0x64(%ebx),%edx$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	83 c0 04             	add    $0x4,%eax$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	75 e7                	jne    f01037c6 <env_alloc+0x6a>$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	8b 43 64             	mov    0x64(%ebx),%eax$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01037e7	obj/kern/kernel.asm	/^f01037e7:	77 15                	ja     f01037fe <env_alloc+0xa2>$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	50                   	push   %eax$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	68 cc 00 00 00       	push   $0xcc$/;"	l
f01037f4	obj/kern/kernel.asm	/^f01037f4:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	e8 42 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037fe	obj/kern/kernel.asm	/^f01037fe:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103815	obj/kern/kernel.asm	/^f0103815:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	89 da                	mov    %ebx,%edx$/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	2b 15 6c 02 28 f0    	sub    0xf028026c,%edx$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	09 d0                	or     %edx,%eax$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f010383f	obj/kern/kernel.asm	/^f010383f:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	c7 43 60 00 00 00 00 	movl   $0x0,0x60(%ebx)$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	6a 44                	push   $0x44$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	6a 00                	push   $0x0$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	53                   	push   %ebx$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	e8 81 2e 00 00       	call   f01066e2 <memset>$/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103867	obj/kern/kernel.asm	/^f0103867:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010386d	obj/kern/kernel.asm	/^f010386d:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	c7 43 6c 00 00 00 00 	movl   $0x0,0x6c(%ebx)$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	a3 70 02 28 f0       	mov    %eax,0xf0280270$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	89 18                	mov    %ebx,(%eax)$/;"	l
f01038a2	obj/kern/kernel.asm	/^f01038a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01038aa	obj/kern/kernel.asm	/^f01038aa:	eb 0c                	jmp    f01038b8 <env_alloc+0x15c>$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	eb 05                	jmp    f01038b8 <env_alloc+0x15c>$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	c9                   	leave  $/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	c3                   	ret    $/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd <env_create>:$/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	55                   	push   %ebp$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	89 e5                	mov    %esp,%ebp$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	57                   	push   %edi$/;"	l
f01038c1	obj/kern/kernel.asm	/^f01038c1:	56                   	push   %esi$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	53                   	push   %ebx$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	83 ec 24             	sub    $0x24,%esp$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	6a 00                	push   $0x0$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	50                   	push   %eax$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	e8 8b fe ff ff       	call   f010375c <env_alloc>$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	85 c0                	test   %eax,%eax$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	74 3c                	je     f0103914 <env_create+0x57>$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	75 17                	jne    f01038f4 <env_create+0x37>$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	68 14 91 10 f0       	push   $0xf0109114$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	68 a3 01 00 00       	push   $0x1a3$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	e8 4c c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	83 f8 fb             	cmp    $0xfffffffb,%eax$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	0f 85 1f 01 00 00    	jne    f0103a1c <env_create+0x15f>$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	68 3c 91 10 f0       	push   $0xf010913c$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	68 a5 01 00 00       	push   $0x1a5$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f010390f	obj/kern/kernel.asm	/^f010390f:	e8 2c c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010391a	obj/kern/kernel.asm	/^f010391a:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	74 17                	je     f0103939 <env_create+0x7c>$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	68 74 91 10 f0       	push   $0xf0109174$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	68 79 01 00 00       	push   $0x179$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	e8 07 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	8b 47 64             	mov    0x64(%edi),%eax$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941:	77 15                	ja     f0103958 <env_create+0x9b>$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	50                   	push   %eax$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	68 7c 01 00 00       	push   $0x17c$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	e8 e8 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	89 c3                	mov    %eax,%ebx$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	03 58 1c             	add    0x1c(%eax),%ebx$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	0f b7 70 2c          	movzwl 0x2c(%eax),%esi$/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	01 de                	add    %ebx,%esi$/;"	l
f0103971	obj/kern/kernel.asm	/^f0103971:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	73 48                	jae    f01039bd <env_create+0x100>$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	75 3c                	jne    f01039b6 <env_create+0xf9>$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103980	obj/kern/kernel.asm	/^f0103980:	89 f8                	mov    %edi,%eax$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	e8 1f fc ff ff       	call   f01035a6 <region_alloc>$/;"	l
f0103987	obj/kern/kernel.asm	/^f0103987:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103990	obj/kern/kernel.asm	/^f0103990:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103993	obj/kern/kernel.asm	/^f0103993:	50                   	push   %eax$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	e8 93 2d 00 00       	call   f010672f <memmove>$/;"	l
f010399c	obj/kern/kernel.asm	/^f010399c:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	29 c2                	sub    %eax,%edx$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	52                   	push   %edx$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	6a 00                	push   $0x0$/;"	l
f01039aa	obj/kern/kernel.asm	/^f01039aa:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	50                   	push   %eax$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	e8 2f 2d 00 00       	call   f01066e2 <memset>$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	39 de                	cmp    %ebx,%esi$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	77 b8                	ja     f0103975 <env_create+0xb8>$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	77 15                	ja     f01039de <env_create+0x121>$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	50                   	push   %eax$/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	68 89 01 00 00       	push   $0x189$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f01039d9	obj/kern/kernel.asm	/^f01039d9:	e8 62 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01039f4	obj/kern/kernel.asm	/^f01039f4:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	89 f8                	mov    %edi,%eax$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	e8 a6 fb ff ff       	call   f01035a6 <region_alloc>$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	c7 40 4c 00 00 00 00 	movl   $0x0,0x4c(%eax)$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	75 07                	jne    f0103a1c <env_create+0x15f>$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	5b                   	pop    %ebx$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	5e                   	pop    %esi$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	5f                   	pop    %edi$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	5d                   	pop    %ebp$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	c3                   	ret    $/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24 <env_free>:$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	55                   	push   %ebp$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	57                   	push   %edi$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	56                   	push   %esi$/;"	l
f0103a29	obj/kern/kernel.asm	/^f0103a29:	53                   	push   %ebx$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	e8 22 33 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	39 b8 28 10 28 f0    	cmp    %edi,-0xfd7efd8(%eax)$/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	75 30                	jne    f0103a77 <env_free+0x53>$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	a1 bc 0e 28 f0       	mov    0xf0280ebc,%eax$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	77 15                	ja     f0103a68 <env_free+0x44>$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	50                   	push   %eax$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	68 c3 01 00 00       	push   $0x1c3$/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	e8 d8 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103a77	obj/kern/kernel.asm	/^f0103a77:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	89 d0                	mov    %edx,%eax$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	8b 47 64             	mov    0x64(%edi),%eax$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	0f 84 a8 00 00 00    	je     f0103b3c <env_free+0x118>$/;"	l
f0103a94	obj/kern/kernel.asm	/^f0103a94:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	89 f0                	mov    %esi,%eax$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	39 05 b8 0e 28 f0    	cmp    %eax,0xf0280eb8$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	77 15                	ja     f0103abf <env_free+0x9b>$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	56                   	push   %esi$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	68 d2 01 00 00       	push   $0x1d2$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f0103aba	obj/kern/kernel.asm	/^f0103aba:	e8 81 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103ac2	obj/kern/kernel.asm	/^f0103ac2:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	01 $/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	74 17                	je     f0103aee <env_free+0xca>$/;"	l
f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	89 d8                	mov    %ebx,%eax$/;"	l
f0103adc	obj/kern/kernel.asm	/^f0103adc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103adf	obj/kern/kernel.asm	/^f0103adf:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	50                   	push   %eax$/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	ff 77 64             	pushl  0x64(%edi)$/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	e8 65 df ff ff       	call   f0101a50 <page_remove>$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	75 d4                	jne    f0103acd <env_free+0xa9>$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	8b 47 64             	mov    0x64(%edi),%eax$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103b06	obj/kern/kernel.asm	/^f0103b06:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	3b 05 b8 0e 28 f0    	cmp    0xf0280eb8,%eax$/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	72 14                	jb     f0103b25 <env_free+0x101>$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	68 9c 86 10 f0       	push   $0xf010869c$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	6a 4f                	push   $0x4f$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	e8 1b c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	a1 c0 0e 28 f0       	mov    0xf0280ec0,%eax$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103b33	obj/kern/kernel.asm	/^f0103b33:	50                   	push   %eax$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	e8 3b dc ff ff       	call   f0101774 <page_decref>$/;"	l
f0103b39	obj/kern/kernel.asm	/^f0103b39:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	0f 85 29 ff ff ff    	jne    f0103a77 <env_free+0x53>$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	8b 47 64             	mov    0x64(%edi),%eax$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	77 15                	ja     f0103b6d <env_free+0x149>$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	50                   	push   %eax$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	68 e0 01 00 00       	push   $0x1e0$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	e8 d3 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b6d	obj/kern/kernel.asm	/^f0103b6d:	c7 47 64 00 00 00 00 	movl   $0x0,0x64(%edi)$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	3b 05 b8 0e 28 f0    	cmp    0xf0280eb8,%eax$/;"	l
f0103b82	obj/kern/kernel.asm	/^f0103b82:	72 14                	jb     f0103b98 <env_free+0x174>$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	68 9c 86 10 f0       	push   $0xf010869c$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	6a 4f                	push   $0x4f$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0103b93	obj/kern/kernel.asm	/^f0103b93:	e8 a8 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	8b 15 c0 0e 28 f0    	mov    0xf0280ec0,%edx$/;"	l
f0103ba1	obj/kern/kernel.asm	/^f0103ba1:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	50                   	push   %eax$/;"	l
f0103ba5	obj/kern/kernel.asm	/^f0103ba5:	e8 ca db ff ff       	call   f0101774 <page_decref>$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	a1 70 02 28 f0       	mov    0xf0280270,%eax$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	89 3d 70 02 28 f0    	mov    %edi,0xf0280270$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	5b                   	pop    %ebx$/;"	l
f0103bc6	obj/kern/kernel.asm	/^f0103bc6:	5e                   	pop    %esi$/;"	l
f0103bc7	obj/kern/kernel.asm	/^f0103bc7:	5f                   	pop    %edi$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	5d                   	pop    %ebp$/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	c3                   	ret    $/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca <env_destroy>:$/;"	l
f0103bca	obj/kern/kernel.asm	/^f0103bca:	55                   	push   %ebp$/;"	l
f0103bcb	obj/kern/kernel.asm	/^f0103bcb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	53                   	push   %ebx$/;"	l
f0103bce	obj/kern/kernel.asm	/^f0103bce:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	75 19                	jne    f0103bf3 <env_destroy+0x29>$/;"	l
f0103bda	obj/kern/kernel.asm	/^f0103bda:	e8 78 31 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103bdf	obj/kern/kernel.asm	/^f0103bdf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	3b 98 28 10 28 f0    	cmp    -0xfd7efd8(%eax),%ebx$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	74 09                	je     f0103bf3 <env_destroy+0x29>$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	eb 33                	jmp    f0103c26 <env_destroy+0x5c>$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bf6	obj/kern/kernel.asm	/^f0103bf6:	53                   	push   %ebx$/;"	l
f0103bf7	obj/kern/kernel.asm	/^f0103bf7:	e8 28 fe ff ff       	call   f0103a24 <env_free>$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	e8 56 31 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c04	obj/kern/kernel.asm	/^f0103c04:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	3b 98 28 10 28 f0    	cmp    -0xfd7efd8(%eax),%ebx$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	75 17                	jne    f0103c26 <env_destroy+0x5c>$/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	e8 43 31 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103c14	obj/kern/kernel.asm	/^f0103c14:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c17	obj/kern/kernel.asm	/^f0103c17:	c7 80 28 10 28 f0 00 	movl   $0x0,-0xfd7efd8(%eax)$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	00 00 00 $/;"	l
f0103c21	obj/kern/kernel.asm	/^f0103c21:	e8 9c 10 00 00       	call   f0104cc2 <sched_yield>$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	c9                   	leave  $/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	c3                   	ret    $/;"	l
f0103c2b	obj/kern/kernel.asm	/^f0103c2b <env_pop_tf>:$/;"	l
f0103c2b	obj/kern/kernel.asm	/^f0103c2b:	55                   	push   %ebp$/;"	l
f0103c2c	obj/kern/kernel.asm	/^f0103c2c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c2e	obj/kern/kernel.asm	/^f0103c2e:	53                   	push   %ebx$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	e8 20 31 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	8b 98 28 10 28 f0    	mov    -0xfd7efd8(%eax),%ebx$/;"	l
f0103c40	obj/kern/kernel.asm	/^f0103c40:	e8 12 31 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	61                   	popa   $/;"	l
f0103c4c	obj/kern/kernel.asm	/^f0103c4c:	07                   	pop    %es$/;"	l
f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	1f                   	pop    %ds$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	cf                   	iret   $/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	68 82 91 10 f0       	push   $0xf0109182$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	68 16 02 00 00       	push   $0x216$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f0103c64	obj/kern/kernel.asm	/^f0103c64:	e8 d7 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69 <env_run>:$/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	55                   	push   %ebp$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	53                   	push   %ebx$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103c70	obj/kern/kernel.asm	/^f0103c70:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	e8 df 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	39 98 28 10 28 f0    	cmp    %ebx,-0xfd7efd8(%eax)$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	0f 84 a4 00 00 00    	je     f0103d2b <env_run+0xc2>$/;"	l
f0103c87	obj/kern/kernel.asm	/^f0103c87:	e8 cb 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103c8c	obj/kern/kernel.asm	/^f0103c8c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	83 b8 28 10 28 f0 00 	cmpl   $0x0,-0xfd7efd8(%eax)$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	74 29                	je     f0103cc1 <env_run+0x58>$/;"	l
f0103c98	obj/kern/kernel.asm	/^f0103c98:	e8 ba 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103c9d	obj/kern/kernel.asm	/^f0103c9d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ca0	obj/kern/kernel.asm	/^f0103ca0:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0103ca6	obj/kern/kernel.asm	/^f0103ca6:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	75 15                	jne    f0103cc1 <env_run+0x58>$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	e8 a6 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	e8 91 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	89 98 28 10 28 f0    	mov    %ebx,-0xfd7efd8(%eax)$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	e8 83 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0103cdd	obj/kern/kernel.asm	/^f0103cdd:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	e8 6e 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	e8 5c 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103cfb	obj/kern/kernel.asm	/^f0103cfb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	77 15                	ja     f0103d23 <env_run+0xba>$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	50                   	push   %eax$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	68 3c 02 00 00       	push   $0x23c$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	68 69 91 10 f0       	push   $0xf0109169$/;"	l
f0103d1e	obj/kern/kernel.asm	/^f0103d1e:	e8 1d c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d23	obj/kern/kernel.asm	/^f0103d23:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	68 a0 63 12 f0       	push   $0xf01263a0$/;"	l
f0103d33	obj/kern/kernel.asm	/^f0103d33:	e8 62 33 00 00       	call   f010709a <spin_unlock>$/;"	l
f0103d38	obj/kern/kernel.asm	/^f0103d38:	f3 90                	pause  $/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	e8 18 30 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	e8 db fe ff ff       	call   f0103c2b <env_pop_tf>$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50 <mc146818_read>:$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	55                   	push   %ebp$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	ee                   	out    %al,(%dx)$/;"	l
f0103d5c	obj/kern/kernel.asm	/^f0103d5c:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	ec                   	in     (%dx),%al$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	5d                   	pop    %ebp$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	c3                   	ret    $/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67 <mc146818_write>:$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	55                   	push   %ebp$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d6a	obj/kern/kernel.asm	/^f0103d6a:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	ee                   	out    %al,(%dx)$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	ee                   	out    %al,(%dx)$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	5d                   	pop    %ebp$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	c3                   	ret    $/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e <irq_setmask_8259A>:$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	55                   	push   %ebp$/;"	l
f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d81	obj/kern/kernel.asm	/^f0103d81:	56                   	push   %esi$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	53                   	push   %ebx$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	66 a3 88 63 12 f0    	mov    %ax,0xf0126388$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	83 3d 74 02 28 f0 00 	cmpl   $0x0,0xf0280274$/;"	l
f0103d93	obj/kern/kernel.asm	/^f0103d93:	74 5a                	je     f0103def <irq_setmask_8259A+0x71>$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	89 c6                	mov    %eax,%esi$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	ee                   	out    %al,(%dx)$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	ee                   	out    %al,(%dx)$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103daa	obj/kern/kernel.asm	/^f0103daa:	68 8e 91 10 f0       	push   $0xf010918e$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	e8 34 01 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103dbf	obj/kern/kernel.asm	/^f0103dbf:	f7 d6                	not    %esi$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	73 11                	jae    f0103dd7 <irq_setmask_8259A+0x59>$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	53                   	push   %ebx$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	68 9b 96 10 f0       	push   $0xf010969b$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	e8 14 01 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103dd7	obj/kern/kernel.asm	/^f0103dd7:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	75 e2                	jne    f0103dc1 <irq_setmask_8259A+0x43>$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	68 96 82 10 f0       	push   $0xf0108296$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	e8 fc 00 00 00       	call   f0103ee8 <cprintf>$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	5b                   	pop    %ebx$/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3:	5e                   	pop    %esi$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	5d                   	pop    %ebp$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	c3                   	ret    $/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6 <pic_init>:$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	c7 05 74 02 28 f0 01 	movl   $0x1,0xf0280274$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	00 00 00 $/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	ee                   	out    %al,(%dx)$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	ee                   	out    %al,(%dx)$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	ee                   	out    %al,(%dx)$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103e21	obj/kern/kernel.asm	/^f0103e21:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	ee                   	out    %al,(%dx)$/;"	l
f0103e27	obj/kern/kernel.asm	/^f0103e27:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103e2c	obj/kern/kernel.asm	/^f0103e2c:	ee                   	out    %al,(%dx)$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	ee                   	out    %al,(%dx)$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	ee                   	out    %al,(%dx)$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	ba a1 00 00 00       	mov    $0xa1,%edx$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103e48	obj/kern/kernel.asm	/^f0103e48:	ee                   	out    %al,(%dx)$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	ee                   	out    %al,(%dx)$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	ee                   	out    %al,(%dx)$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	ee                   	out    %al,(%dx)$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	ee                   	out    %al,(%dx)$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	ee                   	out    %al,(%dx)$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	ee                   	out    %al,(%dx)$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	0f b7 05 88 63 12 f0 	movzwl 0xf0126388,%eax$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	74 13                	je     f0103e97 <pic_init+0xa1>$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	55                   	push   %ebp$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	50                   	push   %eax$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	e8 eb fe ff ff       	call   f0103d7e <irq_setmask_8259A>$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	c9                   	leave  $/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	f3 c3                	repz ret $/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99 <irq_eoi>:$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	55                   	push   %ebp$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	ee                   	out    %al,(%dx)$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	ee                   	out    %al,(%dx)$/;"	l
f0103ead	obj/kern/kernel.asm	/^f0103ead:	5d                   	pop    %ebp$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	c3                   	ret    $/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf <putch>:$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	55                   	push   %ebp$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	89 e5                	mov    %esp,%ebp$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	e8 1e ca ff ff       	call   f01008db <cputchar>$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	c9                   	leave  $/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	c3                   	ret    $/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2 <vcprintf>:$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	55                   	push   %ebp$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103ed5	obj/kern/kernel.asm	/^f0103ed5:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	50                   	push   %eax$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	68 af 3e 10 f0       	push   $0xf0103eaf$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	e8 f1 1f 00 00       	call   f0105ed4 <vprintfmt>$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	c9                   	leave  $/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	c3                   	ret    $/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8 <cprintf>:$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	55                   	push   %ebp$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	50                   	push   %eax$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	e8 c8 ff ff ff       	call   f0103ec2 <vcprintf>$/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	c9                   	leave  $/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	c3                   	ret    $/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc <trap_init_percpu>:$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	55                   	push   %ebp$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	89 e5                	mov    %esp,%ebp$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	57                   	push   %edi$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	56                   	push   %esi$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	53                   	push   %ebx$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103f05	obj/kern/kernel.asm	/^f0103f05:	e8 4d 2e 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	0f b6 b0 20 10 28 f0 	movzbl -0xfd7efe0(%eax),%esi$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	89 f0                	mov    %esi,%eax$/;"	l
f0103f16	obj/kern/kernel.asm	/^f0103f16:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	e8 39 2e 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	ba 00 00 c0 ef       	mov    $0xefc00000,%edx$/;"	l
f0103f2b	obj/kern/kernel.asm	/^f0103f2b:	29 ca                	sub    %ecx,%edx$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	89 90 30 10 28 f0    	mov    %edx,-0xfd7efd0(%eax)$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	e8 1f 2e 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103f38	obj/kern/kernel.asm	/^f0103f38:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	66 c7 80 34 10 28 f0 	movw   $0x10,-0xfd7efcc(%eax)$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	10 00 $/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103f49	obj/kern/kernel.asm	/^f0103f49:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	0f 30                	wrmsr  $/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	e8 fd 2d 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	8b 80 30 10 28 f0    	mov    -0xfd7efd0(%eax),%eax$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	b9 75 01 00 00       	mov    $0x175,%ecx$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	0f 30                	wrmsr  $/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	b8 74 4c 10 f0       	mov    $0xf0104c74,%eax$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	b9 76 01 00 00       	mov    $0x176,%ecx$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	0f 30                	wrmsr  $/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	83 c3 05             	add    $0x5,%ebx$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	e8 d4 2d 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	89 c7                	mov    %eax,%edi$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	e8 cd 2d 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	e8 c5 2d 00 00       	call   f0106d57 <cpunum>$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	66 c7 04 dd 20 63 12 	movw   $0x68,-0xfed9ce0(,%ebx,8)$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	f0 68 00 $/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	81 c7 2c 10 28 f0    	add    $0xf028102c,%edi$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	66 89 3c dd 22 63 12 	mov    %di,-0xfed9cde(,%ebx,8)$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	f0 $/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	6b 55 e4 74          	imul   $0x74,-0x1c(%ebp),%edx$/;"	l
f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	81 c2 2c 10 28 f0    	add    $0xf028102c,%edx$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	88 14 dd 24 63 12 f0 	mov    %dl,-0xfed9cdc(,%ebx,8)$/;"	l
f0103fc1	obj/kern/kernel.asm	/^f0103fc1:	c6 04 dd 26 63 12 f0 	movb   $0x40,-0xfed9cda(,%ebx,8)$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	40 $/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fcc	obj/kern/kernel.asm	/^f0103fcc:	05 2c 10 28 f0       	add    $0xf028102c,%eax$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	88 04 dd 27 63 12 f0 	mov    %al,-0xfed9cd9(,%ebx,8)$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	c6 04 dd 25 63 12 f0 	movb   $0x89,-0xfed9cdb(,%ebx,8)$/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	89 $/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	89 f0                	mov    %esi,%eax$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	8d 34 f5 28 00 00 00 	lea    0x28(,%esi,8),%esi$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	0f 00 de             	ltr    %si$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	b8 8c 63 12 f0       	mov    $0xf012638c,%eax$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103ffa	obj/kern/kernel.asm	/^f0103ffa:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103ffd	obj/kern/kernel.asm	/^f0103ffd:	5b                   	pop    %ebx$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	5e                   	pop    %esi$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	5f                   	pop    %edi$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	5d                   	pop    %ebp$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	c3                   	ret    $/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002 <trap_init>:$/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002:	55                   	push   %ebp$/;"	l
f0104003	obj/kern/kernel.asm	/^f0104003:	89 e5                	mov    %esp,%ebp$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	b8 62 4b 10 f0       	mov    $0xf0104b62,%eax$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	66 a3 80 02 28 f0    	mov    %ax,0xf0280280$/;"	l
f0104013	obj/kern/kernel.asm	/^f0104013:	66 c7 05 82 02 28 f0 	movw   $0x8,0xf0280282$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	08 00 $/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c:	c6 05 84 02 28 f0 00 	movb   $0x0,0xf0280284$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	c6 05 85 02 28 f0 8e 	movb   $0x8e,0xf0280285$/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	66 a3 86 02 28 f0    	mov    %ax,0xf0280286$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	b8 6c 4b 10 f0       	mov    $0xf0104b6c,%eax$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	66 a3 88 02 28 f0    	mov    %ax,0xf0280288$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	66 c7 05 8a 02 28 f0 	movw   $0x8,0xf028028a$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	08 00 $/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	c6 05 8c 02 28 f0 00 	movb   $0x0,0xf028028c$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	c6 05 8d 02 28 f0 8e 	movb   $0x8e,0xf028028d$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	66 a3 8e 02 28 f0    	mov    %ax,0xf028028e$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	b8 76 4b 10 f0       	mov    $0xf0104b76,%eax$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	66 a3 90 02 28 f0    	mov    %ax,0xf0280290$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	66 c7 05 92 02 28 f0 	movw   $0x8,0xf0280292$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	08 00 $/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	c6 05 94 02 28 f0 00 	movb   $0x0,0xf0280294$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	c6 05 95 02 28 f0 8e 	movb   $0x8e,0xf0280295$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104083	obj/kern/kernel.asm	/^f0104083:	66 a3 96 02 28 f0    	mov    %ax,0xf0280296$/;"	l
f0104089	obj/kern/kernel.asm	/^f0104089:	b8 80 4b 10 f0       	mov    $0xf0104b80,%eax$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	66 a3 98 02 28 f0    	mov    %ax,0xf0280298$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	66 c7 05 9a 02 28 f0 	movw   $0x8,0xf028029a$/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	08 00 $/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	c6 05 9c 02 28 f0 00 	movb   $0x0,0xf028029c$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	c6 05 9d 02 28 f0 ee 	movb   $0xee,0xf028029d$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	66 a3 9e 02 28 f0    	mov    %ax,0xf028029e$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	b8 8a 4b 10 f0       	mov    $0xf0104b8a,%eax$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	66 a3 a0 02 28 f0    	mov    %ax,0xf02802a0$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	66 c7 05 a2 02 28 f0 	movw   $0x8,0xf02802a2$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	08 00 $/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	c6 05 a4 02 28 f0 00 	movb   $0x0,0xf02802a4$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	c6 05 a5 02 28 f0 8e 	movb   $0x8e,0xf02802a5$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040d9	obj/kern/kernel.asm	/^f01040d9:	66 a3 a6 02 28 f0    	mov    %ax,0xf02802a6$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	b8 94 4b 10 f0       	mov    $0xf0104b94,%eax$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	66 a3 a8 02 28 f0    	mov    %ax,0xf02802a8$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	66 c7 05 aa 02 28 f0 	movw   $0x8,0xf02802aa$/;"	l
f01040f1	obj/kern/kernel.asm	/^f01040f1:	08 00 $/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	c6 05 ac 02 28 f0 00 	movb   $0x0,0xf02802ac$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	c6 05 ad 02 28 f0 8e 	movb   $0x8e,0xf02802ad$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	66 a3 ae 02 28 f0    	mov    %ax,0xf02802ae$/;"	l
f010410a	obj/kern/kernel.asm	/^f010410a:	b8 9e 4b 10 f0       	mov    $0xf0104b9e,%eax$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	66 a3 b0 02 28 f0    	mov    %ax,0xf02802b0$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	66 c7 05 b2 02 28 f0 	movw   $0x8,0xf02802b2$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	08 00 $/;"	l
f010411e	obj/kern/kernel.asm	/^f010411e:	c6 05 b4 02 28 f0 00 	movb   $0x0,0xf02802b4$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	c6 05 b5 02 28 f0 8e 	movb   $0x8e,0xf02802b5$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	66 a3 b6 02 28 f0    	mov    %ax,0xf02802b6$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	b8 a8 4b 10 f0       	mov    $0xf0104ba8,%eax$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	66 a3 b8 02 28 f0    	mov    %ax,0xf02802b8$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	66 c7 05 ba 02 28 f0 	movw   $0x8,0xf02802ba$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	08 00 $/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149:	c6 05 bc 02 28 f0 00 	movb   $0x0,0xf02802bc$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	c6 05 bd 02 28 f0 8e 	movb   $0x8e,0xf02802bd$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	66 a3 be 02 28 f0    	mov    %ax,0xf02802be$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	b8 b2 4b 10 f0       	mov    $0xf0104bb2,%eax$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	66 a3 c0 02 28 f0    	mov    %ax,0xf02802c0$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	66 c7 05 c2 02 28 f0 	movw   $0x8,0xf02802c2$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	08 00 $/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	c6 05 c4 02 28 f0 00 	movb   $0x0,0xf02802c4$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	c6 05 c5 02 28 f0 8e 	movb   $0x8e,0xf02802c5$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	66 a3 c6 02 28 f0    	mov    %ax,0xf02802c6$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	b8 ba 4b 10 f0       	mov    $0xf0104bba,%eax$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	66 a3 d0 02 28 f0    	mov    %ax,0xf02802d0$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	66 c7 05 d2 02 28 f0 	movw   $0x8,0xf02802d2$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	08 00 $/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	c6 05 d4 02 28 f0 00 	movb   $0x0,0xf02802d4$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	c6 05 d5 02 28 f0 8e 	movb   $0x8e,0xf02802d5$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	66 a3 d6 02 28 f0    	mov    %ax,0xf02802d6$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	b8 c2 4b 10 f0       	mov    $0xf0104bc2,%eax$/;"	l
f01041bb	obj/kern/kernel.asm	/^f01041bb:	66 a3 d8 02 28 f0    	mov    %ax,0xf02802d8$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	66 c7 05 da 02 28 f0 	movw   $0x8,0xf02802da$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	08 00 $/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	c6 05 dc 02 28 f0 00 	movb   $0x0,0xf02802dc$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	c6 05 dd 02 28 f0 8e 	movb   $0x8e,0xf02802dd$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	66 a3 de 02 28 f0    	mov    %ax,0xf02802de$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	b8 ca 4b 10 f0       	mov    $0xf0104bca,%eax$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	66 a3 e0 02 28 f0    	mov    %ax,0xf02802e0$/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	66 c7 05 e2 02 28 f0 	movw   $0x8,0xf02802e2$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	08 00 $/;"	l
f01041f5	obj/kern/kernel.asm	/^f01041f5:	c6 05 e4 02 28 f0 00 	movb   $0x0,0xf02802e4$/;"	l
f01041fc	obj/kern/kernel.asm	/^f01041fc:	c6 05 e5 02 28 f0 8e 	movb   $0x8e,0xf02802e5$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104206	obj/kern/kernel.asm	/^f0104206:	66 a3 e6 02 28 f0    	mov    %ax,0xf02802e6$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	b8 d2 4b 10 f0       	mov    $0xf0104bd2,%eax$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	66 a3 e8 02 28 f0    	mov    %ax,0xf02802e8$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	66 c7 05 ea 02 28 f0 	movw   $0x8,0xf02802ea$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	08 00 $/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	c6 05 ec 02 28 f0 00 	movb   $0x0,0xf02802ec$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	c6 05 ed 02 28 f0 8e 	movb   $0x8e,0xf02802ed$/;"	l
f010422e	obj/kern/kernel.asm	/^f010422e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	66 a3 ee 02 28 f0    	mov    %ax,0xf02802ee$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	b8 da 4b 10 f0       	mov    $0xf0104bda,%eax$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	66 a3 f0 02 28 f0    	mov    %ax,0xf02802f0$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	66 c7 05 f2 02 28 f0 	movw   $0x8,0xf02802f2$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	08 00 $/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	c6 05 f4 02 28 f0 00 	movb   $0x0,0xf02802f4$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	c6 05 f5 02 28 f0 8e 	movb   $0x8e,0xf02802f5$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	66 a3 f6 02 28 f0    	mov    %ax,0xf02802f6$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	b8 e2 4b 10 f0       	mov    $0xf0104be2,%eax$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	66 a3 00 03 28 f0    	mov    %ax,0xf0280300$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	66 c7 05 02 03 28 f0 	movw   $0x8,0xf0280302$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	08 00 $/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	c6 05 04 03 28 f0 00 	movb   $0x0,0xf0280304$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	c6 05 05 03 28 f0 8e 	movb   $0x8e,0xf0280305$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104287	obj/kern/kernel.asm	/^f0104287:	66 a3 06 03 28 f0    	mov    %ax,0xf0280306$/;"	l
f010428d	obj/kern/kernel.asm	/^f010428d:	b8 ec 4b 10 f0       	mov    $0xf0104bec,%eax$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	66 a3 08 03 28 f0    	mov    %ax,0xf0280308$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298:	66 c7 05 0a 03 28 f0 	movw   $0x8,0xf028030a$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	08 00 $/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	c6 05 0c 03 28 f0 00 	movb   $0x0,0xf028030c$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	c6 05 0d 03 28 f0 8e 	movb   $0x8e,0xf028030d$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	66 a3 0e 03 28 f0    	mov    %ax,0xf028030e$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	b8 f4 4b 10 f0       	mov    $0xf0104bf4,%eax$/;"	l
f01042bd	obj/kern/kernel.asm	/^f01042bd:	66 a3 10 03 28 f0    	mov    %ax,0xf0280310$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	66 c7 05 12 03 28 f0 	movw   $0x8,0xf0280312$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	08 00 $/;"	l
f01042cc	obj/kern/kernel.asm	/^f01042cc:	c6 05 14 03 28 f0 00 	movb   $0x0,0xf0280314$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	c6 05 15 03 28 f0 8e 	movb   $0x8e,0xf0280315$/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	66 a3 16 03 28 f0    	mov    %ax,0xf0280316$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	b8 fe 4b 10 f0       	mov    $0xf0104bfe,%eax$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	66 a3 18 03 28 f0    	mov    %ax,0xf0280318$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	66 c7 05 1a 03 28 f0 	movw   $0x8,0xf028031a$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	08 00 $/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	c6 05 1c 03 28 f0 00 	movb   $0x0,0xf028031c$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	c6 05 1d 03 28 f0 8e 	movb   $0x8e,0xf028031d$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104308	obj/kern/kernel.asm	/^f0104308:	66 a3 1e 03 28 f0    	mov    %ax,0xf028031e$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	b8 03 4e 10 f0       	mov    $0xf0104e03,%eax$/;"	l
f0104313	obj/kern/kernel.asm	/^f0104313:	66 a3 00 04 28 f0    	mov    %ax,0xf0280400$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	66 c7 05 02 04 28 f0 	movw   $0x8,0xf0280402$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	08 00 $/;"	l
f0104322	obj/kern/kernel.asm	/^f0104322:	c6 05 04 04 28 f0 00 	movb   $0x0,0xf0280404$/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	c6 05 05 04 28 f0 ee 	movb   $0xee,0xf0280405$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	66 a3 06 04 28 f0    	mov    %ax,0xf0280406$/;"	l
f0104339	obj/kern/kernel.asm	/^f0104339:	b8 08 4c 10 f0       	mov    $0xf0104c08,%eax$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	66 a3 80 03 28 f0    	mov    %ax,0xf0280380$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	66 c7 05 82 03 28 f0 	movw   $0x8,0xf0280382$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	08 00 $/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	c6 05 84 03 28 f0 00 	movb   $0x0,0xf0280384$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	c6 05 85 03 28 f0 8e 	movb   $0x8e,0xf0280385$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	66 a3 86 03 28 f0    	mov    %ax,0xf0280386$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	b8 12 4c 10 f0       	mov    $0xf0104c12,%eax$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	66 a3 88 03 28 f0    	mov    %ax,0xf0280388$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	66 c7 05 8a 03 28 f0 	movw   $0x8,0xf028038a$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	08 00 $/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	c6 05 8c 03 28 f0 00 	movb   $0x0,0xf028038c$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	c6 05 8d 03 28 f0 8e 	movb   $0x8e,0xf028038d$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	66 a3 8e 03 28 f0    	mov    %ax,0xf028038e$/;"	l
f010438f	obj/kern/kernel.asm	/^f010438f:	b8 1c 4c 10 f0       	mov    $0xf0104c1c,%eax$/;"	l
f0104394	obj/kern/kernel.asm	/^f0104394:	66 a3 90 03 28 f0    	mov    %ax,0xf0280390$/;"	l
f010439a	obj/kern/kernel.asm	/^f010439a:	66 c7 05 92 03 28 f0 	movw   $0x8,0xf0280392$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	08 00 $/;"	l
f01043a3	obj/kern/kernel.asm	/^f01043a3:	c6 05 94 03 28 f0 00 	movb   $0x0,0xf0280394$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	c6 05 95 03 28 f0 8e 	movb   $0x8e,0xf0280395$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043b4	obj/kern/kernel.asm	/^f01043b4:	66 a3 96 03 28 f0    	mov    %ax,0xf0280396$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	b8 26 4c 10 f0       	mov    $0xf0104c26,%eax$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	66 a3 98 03 28 f0    	mov    %ax,0xf0280398$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	66 c7 05 9a 03 28 f0 	movw   $0x8,0xf028039a$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	08 00 $/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	c6 05 9c 03 28 f0 00 	movb   $0x0,0xf028039c$/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	c6 05 9d 03 28 f0 8e 	movb   $0x8e,0xf028039d$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	66 a3 9e 03 28 f0    	mov    %ax,0xf028039e$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	b8 2c 4c 10 f0       	mov    $0xf0104c2c,%eax$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	66 a3 a0 03 28 f0    	mov    %ax,0xf02803a0$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	66 c7 05 a2 03 28 f0 	movw   $0x8,0xf02803a2$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	08 00 $/;"	l
f01043f9	obj/kern/kernel.asm	/^f01043f9:	c6 05 a4 03 28 f0 00 	movb   $0x0,0xf02803a4$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	c6 05 a5 03 28 f0 8e 	movb   $0x8e,0xf02803a5$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	66 a3 a6 03 28 f0    	mov    %ax,0xf02803a6$/;"	l
f0104410	obj/kern/kernel.asm	/^f0104410:	b8 32 4c 10 f0       	mov    $0xf0104c32,%eax$/;"	l
f0104415	obj/kern/kernel.asm	/^f0104415:	66 a3 a8 03 28 f0    	mov    %ax,0xf02803a8$/;"	l
f010441b	obj/kern/kernel.asm	/^f010441b:	66 c7 05 aa 03 28 f0 	movw   $0x8,0xf02803aa$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	08 00 $/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	c6 05 ac 03 28 f0 00 	movb   $0x0,0xf02803ac$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	c6 05 ad 03 28 f0 8e 	movb   $0x8e,0xf02803ad$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	66 a3 ae 03 28 f0    	mov    %ax,0xf02803ae$/;"	l
f010443b	obj/kern/kernel.asm	/^f010443b:	b8 38 4c 10 f0       	mov    $0xf0104c38,%eax$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	66 a3 b0 03 28 f0    	mov    %ax,0xf02803b0$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	66 c7 05 b2 03 28 f0 	movw   $0x8,0xf02803b2$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	08 00 $/;"	l
f010444f	obj/kern/kernel.asm	/^f010444f:	c6 05 b4 03 28 f0 00 	movb   $0x0,0xf02803b4$/;"	l
f0104456	obj/kern/kernel.asm	/^f0104456:	c6 05 b5 03 28 f0 8e 	movb   $0x8e,0xf02803b5$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	66 a3 b6 03 28 f0    	mov    %ax,0xf02803b6$/;"	l
f0104466	obj/kern/kernel.asm	/^f0104466:	b8 3e 4c 10 f0       	mov    $0xf0104c3e,%eax$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	66 a3 b8 03 28 f0    	mov    %ax,0xf02803b8$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	66 c7 05 ba 03 28 f0 	movw   $0x8,0xf02803ba$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	08 00 $/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	c6 05 bc 03 28 f0 00 	movb   $0x0,0xf02803bc$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	c6 05 bd 03 28 f0 8e 	movb   $0x8e,0xf02803bd$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	66 a3 be 03 28 f0    	mov    %ax,0xf02803be$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	b8 44 4c 10 f0       	mov    $0xf0104c44,%eax$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	66 a3 c0 03 28 f0    	mov    %ax,0xf02803c0$/;"	l
f010449c	obj/kern/kernel.asm	/^f010449c:	66 c7 05 c2 03 28 f0 	movw   $0x8,0xf02803c2$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	08 00 $/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	c6 05 c4 03 28 f0 00 	movb   $0x0,0xf02803c4$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	c6 05 c5 03 28 f0 8e 	movb   $0x8e,0xf02803c5$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	66 a3 c6 03 28 f0    	mov    %ax,0xf02803c6$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	b8 4a 4c 10 f0       	mov    $0xf0104c4a,%eax$/;"	l
f01044c1	obj/kern/kernel.asm	/^f01044c1:	66 a3 c8 03 28 f0    	mov    %ax,0xf02803c8$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	66 c7 05 ca 03 28 f0 	movw   $0x8,0xf02803ca$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	08 00 $/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	c6 05 cc 03 28 f0 00 	movb   $0x0,0xf02803cc$/;"	l
f01044d7	obj/kern/kernel.asm	/^f01044d7:	c6 05 cd 03 28 f0 8e 	movb   $0x8e,0xf02803cd$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	66 a3 ce 03 28 f0    	mov    %ax,0xf02803ce$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	b8 50 4c 10 f0       	mov    $0xf0104c50,%eax$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	66 a3 d0 03 28 f0    	mov    %ax,0xf02803d0$/;"	l
f01044f2	obj/kern/kernel.asm	/^f01044f2:	66 c7 05 d2 03 28 f0 	movw   $0x8,0xf02803d2$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	08 00 $/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	c6 05 d4 03 28 f0 00 	movb   $0x0,0xf02803d4$/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	c6 05 d5 03 28 f0 8e 	movb   $0x8e,0xf02803d5$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	66 a3 d6 03 28 f0    	mov    %ax,0xf02803d6$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	b8 56 4c 10 f0       	mov    $0xf0104c56,%eax$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	66 a3 d8 03 28 f0    	mov    %ax,0xf02803d8$/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	66 c7 05 da 03 28 f0 	movw   $0x8,0xf02803da$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	08 00 $/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	c6 05 dc 03 28 f0 00 	movb   $0x0,0xf02803dc$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	c6 05 dd 03 28 f0 8e 	movb   $0x8e,0xf02803dd$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104537	obj/kern/kernel.asm	/^f0104537:	66 a3 de 03 28 f0    	mov    %ax,0xf02803de$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	b8 5c 4c 10 f0       	mov    $0xf0104c5c,%eax$/;"	l
f0104542	obj/kern/kernel.asm	/^f0104542:	66 a3 e0 03 28 f0    	mov    %ax,0xf02803e0$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	66 c7 05 e2 03 28 f0 	movw   $0x8,0xf02803e2$/;"	l
f010454f	obj/kern/kernel.asm	/^f010454f:	08 00 $/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	c6 05 e4 03 28 f0 00 	movb   $0x0,0xf02803e4$/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	c6 05 e5 03 28 f0 8e 	movb   $0x8e,0xf02803e5$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	66 a3 e6 03 28 f0    	mov    %ax,0xf02803e6$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	b8 62 4c 10 f0       	mov    $0xf0104c62,%eax$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	66 a3 e8 03 28 f0    	mov    %ax,0xf02803e8$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	66 c7 05 ea 03 28 f0 	movw   $0x8,0xf02803ea$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	08 00 $/;"	l
f010457c	obj/kern/kernel.asm	/^f010457c:	c6 05 ec 03 28 f0 00 	movb   $0x0,0xf02803ec$/;"	l
f0104583	obj/kern/kernel.asm	/^f0104583:	c6 05 ed 03 28 f0 8e 	movb   $0x8e,0xf02803ed$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	66 a3 ee 03 28 f0    	mov    %ax,0xf02803ee$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	b8 68 4c 10 f0       	mov    $0xf0104c68,%eax$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	66 a3 f0 03 28 f0    	mov    %ax,0xf02803f0$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	66 c7 05 f2 03 28 f0 	movw   $0x8,0xf02803f2$/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	08 00 $/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	c6 05 f4 03 28 f0 00 	movb   $0x0,0xf02803f4$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	c6 05 f5 03 28 f0 8e 	movb   $0x8e,0xf02803f5$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045b8	obj/kern/kernel.asm	/^f01045b8:	66 a3 f6 03 28 f0    	mov    %ax,0xf02803f6$/;"	l
f01045be	obj/kern/kernel.asm	/^f01045be:	b8 6e 4c 10 f0       	mov    $0xf0104c6e,%eax$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	66 a3 f8 03 28 f0    	mov    %ax,0xf02803f8$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	66 c7 05 fa 03 28 f0 	movw   $0x8,0xf02803fa$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	08 00 $/;"	l
f01045d2	obj/kern/kernel.asm	/^f01045d2:	c6 05 fc 03 28 f0 00 	movb   $0x0,0xf02803fc$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	c6 05 fd 03 28 f0 8e 	movb   $0x8e,0xf02803fd$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	66 a3 fe 03 28 f0    	mov    %ax,0xf02803fe$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01045f3	obj/kern/kernel.asm	/^f01045f3:	b9 74 01 00 00       	mov    $0x174,%ecx$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	0f 30                	wrmsr  $/;"	l
f01045fa	obj/kern/kernel.asm	/^f01045fa:	b8 00 00 c0 ef       	mov    $0xefc00000,%eax$/;"	l
f01045ff	obj/kern/kernel.asm	/^f01045ff:	b9 75 01 00 00       	mov    $0x175,%ecx$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	0f 30                	wrmsr  $/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	b8 74 4c 10 f0       	mov    $0xf0104c74,%eax$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	b9 76 01 00 00       	mov    $0x176,%ecx$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	0f 30                	wrmsr  $/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	e8 e5 f8 ff ff       	call   f0103efc <trap_init_percpu>$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	c9                   	leave  $/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618:	c3                   	ret    $/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619 <print_regs>:$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	55                   	push   %ebp$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	89 e5                	mov    %esp,%ebp$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	53                   	push   %ebx$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104623	obj/kern/kernel.asm	/^f0104623:	ff 33                	pushl  (%ebx)$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	68 a2 91 10 f0       	push   $0xf01091a2$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	e8 b9 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	68 b1 91 10 f0       	push   $0xf01091b1$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	e8 a9 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	68 c0 91 10 f0       	push   $0xf01091c0$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	e8 99 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	ff 73 0c             	pushl  0xc(%ebx)$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	68 cf 91 10 f0       	push   $0xf01091cf$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	e8 89 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104662	obj/kern/kernel.asm	/^f0104662:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	68 de 91 10 f0       	push   $0xf01091de$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	e8 79 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	68 ed 91 10 f0       	push   $0xf01091ed$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	e8 69 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	68 fc 91 10 f0       	push   $0xf01091fc$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	e8 59 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	68 0b 92 10 f0       	push   $0xf010920b$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	e8 49 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	c9                   	leave  $/;"	l
f01046a6	obj/kern/kernel.asm	/^f01046a6:	c3                   	ret    $/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7 <print_trapframe>:$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	55                   	push   %ebp$/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	56                   	push   %esi$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	53                   	push   %ebx$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	e8 a3 26 00 00       	call   f0106d57 <cpunum>$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01046b7	obj/kern/kernel.asm	/^f01046b7:	50                   	push   %eax$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	53                   	push   %ebx$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	68 6f 92 10 f0       	push   $0xf010926f$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	e8 25 f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	e8 4e ff ff ff       	call   f0104619 <print_regs>$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	83 c4 08             	add    $0x8,%esp$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	50                   	push   %eax$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	68 8d 92 10 f0       	push   $0xf010928d$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	e8 0b f8 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	83 c4 08             	add    $0x8,%esp$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	50                   	push   %eax$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	68 a0 92 10 f0       	push   $0xf01092a0$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	e8 f9 f7 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01046f2	obj/kern/kernel.asm	/^f01046f2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	77 09                	ja     f0104703 <print_trapframe+0x5c>$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	8b 14 85 40 95 10 f0 	mov    -0xfef6ac0(,%eax,4),%edx$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	eb 1f                	jmp    f0104722 <print_trapframe+0x7b>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	74 15                	je     f010471d <print_trapframe+0x76>$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f010470e	obj/kern/kernel.asm	/^f010470e:	b9 39 92 10 f0       	mov    $0xf0109239,%ecx$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	ba 26 92 10 f0       	mov    $0xf0109226,%edx$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	0f 43 d1             	cmovae %ecx,%edx$/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b:	eb 05                	jmp    f0104722 <print_trapframe+0x7b>$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	ba 1a 92 10 f0       	mov    $0xf010921a,%edx$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	52                   	push   %edx$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	50                   	push   %eax$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	68 b3 92 10 f0       	push   $0xf01092b3$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	e8 b7 f7 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	3b 1d 80 0a 28 f0    	cmp    0xf0280a80,%ebx$/;"	l
f010473a	obj/kern/kernel.asm	/^f010473a:	75 1a                	jne    f0104756 <print_trapframe+0xaf>$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	75 14                	jne    f0104756 <print_trapframe+0xaf>$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	50                   	push   %eax$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	68 c5 92 10 f0       	push   $0xf01092c5$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	e8 95 f7 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	68 d4 92 10 f0       	push   $0xf01092d4$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	e8 82 f7 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	75 49                	jne    f01047b8 <print_trapframe+0x111>$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	89 c2                	mov    %eax,%edx$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	83 e2 01             	and    $0x1,%edx$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	ba 53 92 10 f0       	mov    $0xf0109253,%edx$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	b9 48 92 10 f0       	mov    $0xf0109248,%ecx$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	0f 44 ca             	cmove  %edx,%ecx$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	89 c2                	mov    %eax,%edx$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	ba 65 92 10 f0       	mov    $0xf0109265,%edx$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	be 5f 92 10 f0       	mov    $0xf010925f,%esi$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	0f 45 d6             	cmovne %esi,%edx$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	be b8 93 10 f0       	mov    $0xf01093b8,%esi$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	b8 6a 92 10 f0       	mov    $0xf010926a,%eax$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	51                   	push   %ecx$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	52                   	push   %edx$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	50                   	push   %eax$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	68 e2 92 10 f0       	push   $0xf01092e2$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	e8 35 f7 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	eb 10                	jmp    f01047c8 <print_trapframe+0x121>$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	68 96 82 10 f0       	push   $0xf0108296$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	e8 23 f7 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	ff 73 30             	pushl  0x30(%ebx)$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	68 f1 92 10 f0       	push   $0xf01092f1$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	e8 10 f7 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	83 c4 08             	add    $0x8,%esp$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	50                   	push   %eax$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	68 00 93 10 f0       	push   $0xf0109300$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	e8 fe f6 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	83 c4 08             	add    $0x8,%esp$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	ff 73 38             	pushl  0x38(%ebx)$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	68 13 93 10 f0       	push   $0xf0109313$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	e8 ee f6 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	74 25                	je     f0104828 <print_trapframe+0x181>$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	ff 73 3c             	pushl  0x3c(%ebx)$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	68 22 93 10 f0       	push   $0xf0109322$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	e8 d5 f6 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f010481a	obj/kern/kernel.asm	/^f010481a:	50                   	push   %eax$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	68 31 93 10 f0       	push   $0xf0109331$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	e8 c3 f6 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	5b                   	pop    %ebx$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	5e                   	pop    %esi$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	5d                   	pop    %ebp$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	c3                   	ret    $/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f <page_fault_handler>:$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	55                   	push   %ebp$/;"	l
f0104830	obj/kern/kernel.asm	/^f0104830:	89 e5                	mov    %esp,%ebp$/;"	l
f0104832	obj/kern/kernel.asm	/^f0104832:	57                   	push   %edi$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	56                   	push   %esi$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	53                   	push   %ebx$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	75 17                	jne    f010485b <page_fault_handler+0x2c>$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	68 44 93 10 f0       	push   $0xf0109344$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	68 7d 01 00 00       	push   $0x17d$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	68 5d 93 10 f0       	push   $0xf010935d$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	e8 e5 b7 ff ff       	call   f0100040 <_panic>$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	e8 f7 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	83 78 68 00          	cmpl   $0x0,0x68(%eax)$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	0f 84 d4 00 00 00    	je     f0104947 <page_fault_handler+0x118>$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	e8 df 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	bf cc ff bf ee       	mov    $0xeebfffcc,%edi$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	81 78 3c ff ef bf ee 	cmpl   $0xeebfefff,0x3c(%eax)$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	76 2d                	jbe    f01048bc <page_fault_handler+0x8d>$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	e8 c3 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	81 78 3c ff ff bf ee 	cmpl   $0xeebfffff,0x3c(%eax)$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	77 16                	ja     f01048bc <page_fault_handler+0x8d>$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	e8 ac 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	83 e8 38             	sub    $0x38,%eax$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	89 c7                	mov    %eax,%edi$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	e8 96 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	6a 02                	push   $0x2$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	6a 34                	push   $0x34$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	57                   	push   %edi$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	e8 88 ec ff ff       	call   f010355c <user_mem_assert>$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	89 37                	mov    %esi,(%edi)$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	89 fa                	mov    %edi,%edx$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	8d 7f 08             	lea    0x8(%edi),%edi$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	89 de                	mov    %ebx,%esi$/;"	l
f01048e8	obj/kern/kernel.asm	/^f01048e8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01048f3	obj/kern/kernel.asm	/^f01048f3:	89 d7                	mov    %edx,%edi$/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01048fb	obj/kern/kernel.asm	/^f01048fb:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	e8 54 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	89 78 3c             	mov    %edi,0x3c(%eax)$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	e8 43 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	8b 98 28 10 28 f0    	mov    -0xfd7efd8(%eax),%ebx$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	e8 35 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f010492b	obj/kern/kernel.asm	/^f010492b:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	e8 21 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0104942	obj/kern/kernel.asm	/^f0104942:	e8 22 f3 ff ff       	call   f0103c69 <env_run>$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	e8 08 24 00 00       	call   f0106d57 <cpunum>$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	57                   	push   %edi$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	56                   	push   %esi$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	68 04 95 10 f0       	push   $0xf0109504$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	e8 81 f5 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	e8 38 fd ff ff       	call   f01046a7 <print_trapframe>$/;"	l
f010496f	obj/kern/kernel.asm	/^f010496f:	e8 e3 23 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	e8 45 f2 ff ff       	call   f0103bca <env_destroy>$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	5b                   	pop    %ebx$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	5e                   	pop    %esi$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	5f                   	pop    %edi$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	5d                   	pop    %ebp$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	c3                   	ret    $/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990 <trap>:$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	55                   	push   %ebp$/;"	l
f0104991	obj/kern/kernel.asm	/^f0104991:	89 e5                	mov    %esp,%ebp$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	57                   	push   %edi$/;"	l
f0104994	obj/kern/kernel.asm	/^f0104994:	56                   	push   %esi$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	fc                   	cld    $/;"	l
f0104999	obj/kern/kernel.asm	/^f0104999:	83 3d b0 0e 28 f0 00 	cmpl   $0x0,0xf0280eb0$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	74 01                	je     f01049a3 <trap+0x13>$/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2:	f4                   	hlt    $/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	9c                   	pushf  $/;"	l
f01049a4	obj/kern/kernel.asm	/^f01049a4:	58                   	pop    %eax$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	f6 c4 02             	test   $0x2,%ah$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	74 19                	je     f01049c3 <trap+0x33>$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	68 69 93 10 f0       	push   $0xf0109369$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	68 47 01 00 00       	push   $0x147$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	68 5d 93 10 f0       	push   $0xf010935d$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	e8 7d b6 ff ff       	call   f0100040 <_panic>$/;"	l
f01049c3	obj/kern/kernel.asm	/^f01049c3:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	83 e0 03             	and    $0x3,%eax$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	0f 85 a0 00 00 00    	jne    f0104a74 <trap+0xe4>$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	e8 7e 23 00 00       	call   f0106d57 <cpunum>$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	83 b8 28 10 28 f0 00 	cmpl   $0x0,-0xfd7efd8(%eax)$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	75 19                	jne    f01049fe <trap+0x6e>$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	68 82 93 10 f0       	push   $0xf0109382$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	68 4e 01 00 00       	push   $0x14e$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	68 5d 93 10 f0       	push   $0xf010935d$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	e8 42 b6 ff ff       	call   f0100040 <_panic>$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	68 a0 63 12 f0       	push   $0xf01263a0$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	e8 ba 25 00 00       	call   f0106fc5 <spin_lock>$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	e8 47 23 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	75 2d                	jne    f0104a4f <trap+0xbf>$/;"	l
f0104a22	obj/kern/kernel.asm	/^f0104a22:	e8 30 23 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104a27	obj/kern/kernel.asm	/^f0104a27:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	e8 ec ef ff ff       	call   f0103a24 <env_free>$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	e8 1a 23 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	c7 80 28 10 28 f0 00 	movl   $0x0,-0xfd7efd8(%eax)$/;"	l
f0104a47	obj/kern/kernel.asm	/^f0104a47:	00 00 00 $/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	e8 73 02 00 00       	call   f0104cc2 <sched_yield>$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	e8 03 23 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	89 c7                	mov    %eax,%edi$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	e8 ec 22 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a6e	obj/kern/kernel.asm	/^f0104a6e:	8b b0 28 10 28 f0    	mov    -0xfd7efd8(%eax),%esi$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	89 35 80 0a 28 f0    	mov    %esi,0xf0280a80$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	74 1a                	je     f0104a9c <trap+0x10c>$/;"	l
f0104a82	obj/kern/kernel.asm	/^f0104a82:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	74 07                	je     f0104a8e <trap+0xfe>$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	75 1c                	jne    f0104aa8 <trap+0x118>$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	eb 0e                	jmp    f0104a9c <trap+0x10c>$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	56                   	push   %esi$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	e8 98 fd ff ff       	call   f010482f <page_fault_handler>$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	eb 0c                	jmp    f0104aa8 <trap+0x118>$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	56                   	push   %esi$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	e8 9a c1 ff ff       	call   f0100c3f <monitor>$/;"	l
f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	75 1a                	jne    f0104aca <trap+0x13a>$/;"	l
f0104ab0	obj/kern/kernel.asm	/^f0104ab0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104ab3	obj/kern/kernel.asm	/^f0104ab3:	68 89 93 10 f0       	push   $0xf0109389$/;"	l
f0104ab8	obj/kern/kernel.asm	/^f0104ab8:	e8 2b f4 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	e8 e2 fb ff ff       	call   f01046a7 <print_trapframe>$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	eb 57                	jmp    f0104b21 <trap+0x191>$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	75 0f                	jne    f0104ade <trap+0x14e>$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	e8 fd 30 00 00       	call   f0107bd1 <time_tick>$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	e8 b3 23 00 00       	call   f0106e8c <lapic_eoi>$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	e8 e4 01 00 00       	call   f0104cc2 <sched_yield>$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	56                   	push   %esi$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	e8 c0 fb ff ff       	call   f01046a7 <print_trapframe>$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	75 17                	jne    f0104b08 <trap+0x178>$/;"	l
f0104af1	obj/kern/kernel.asm	/^f0104af1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	68 a6 93 10 f0       	push   $0xf01093a6$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	68 31 01 00 00       	push   $0x131$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	68 5d 93 10 f0       	push   $0xf010935d$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	e8 38 b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b08	obj/kern/kernel.asm	/^f0104b08:	e8 4a 22 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104b0d	obj/kern/kernel.asm	/^f0104b0d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	e8 ac f0 ff ff       	call   f0103bca <env_destroy>$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b21	obj/kern/kernel.asm	/^f0104b21:	e8 31 22 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	83 b8 28 10 28 f0 00 	cmpl   $0x0,-0xfd7efd8(%eax)$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	74 2a                	je     f0104b5c <trap+0x1cc>$/;"	l
f0104b32	obj/kern/kernel.asm	/^f0104b32:	e8 20 22 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	75 16                	jne    f0104b5c <trap+0x1cc>$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	e8 0c 22 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b51	obj/kern/kernel.asm	/^f0104b51:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	e8 0d f1 ff ff       	call   f0103c69 <env_run>$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	e8 61 01 00 00       	call   f0104cc2 <sched_yield>$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	90                   	nop$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62 <_divide_error>:$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	6a 00                	push   $0x0$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	6a 00                	push   $0x0$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	e9 3d 01 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	90                   	nop$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c <_debug>:$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	6a 00                	push   $0x0$/;"	l
f0104b6e	obj/kern/kernel.asm	/^f0104b6e:	6a 01                	push   $0x1$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	e9 33 01 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104b75	obj/kern/kernel.asm	/^f0104b75:	90                   	nop$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76 <_non_maskable_interrupt>:$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	6a 00                	push   $0x0$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	6a 02                	push   $0x2$/;"	l
f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	e9 29 01 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	90                   	nop$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80 <_breakpoint>:$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	6a 00                	push   $0x0$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	6a 03                	push   $0x3$/;"	l
f0104b84	obj/kern/kernel.asm	/^f0104b84:	e9 1f 01 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	90                   	nop$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a <_overflow>:$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	6a 00                	push   $0x0$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	6a 04                	push   $0x4$/;"	l
f0104b8e	obj/kern/kernel.asm	/^f0104b8e:	e9 15 01 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	90                   	nop$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94 <_bound_range_exceeded>:$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	6a 00                	push   $0x0$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	6a 05                	push   $0x5$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	e9 0b 01 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	90                   	nop$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e <_invalid_opcode>:$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	6a 00                	push   $0x0$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	6a 06                	push   $0x6$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	e9 01 01 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	90                   	nop$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8 <_device_not_available>:$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	6a 00                	push   $0x0$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	6a 07                	push   $0x7$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	e9 f7 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	90                   	nop$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2 <_double_fault>:$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	6a 08                	push   $0x8$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	e9 ef 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	90                   	nop$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba <_invalid_tss>:$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	6a 0a                	push   $0xa$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	e9 e7 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	90                   	nop$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2 <_segment_not_present>:$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	6a 0b                	push   $0xb$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	e9 df 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	90                   	nop$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca <_stack_fault>:$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	6a 0c                	push   $0xc$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	e9 d7 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	90                   	nop$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2 <_general_protection>:$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	6a 0d                	push   $0xd$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	e9 cf 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	90                   	nop$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda <_page_fault>:$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	6a 0e                	push   $0xe$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	e9 c7 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	90                   	nop$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2 <_x87_fpu_error>:$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	6a 00                	push   $0x0$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	6a 10                	push   $0x10$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	e9 bd 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	90                   	nop$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec <_alignment_check>:$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	6a 11                	push   $0x11$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	e9 b5 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	90                   	nop$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4 <_machine_check>:$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	6a 00                	push   $0x0$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	6a 12                	push   $0x12$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	e9 ab 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	90                   	nop$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe <_simd_fp_exception>:$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	6a 00                	push   $0x0$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	6a 13                	push   $0x13$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	e9 a1 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	90                   	nop$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08 <_irq0>:$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	6a 00                	push   $0x0$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	6a 20                	push   $0x20$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	e9 97 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c11	obj/kern/kernel.asm	/^f0104c11:	90                   	nop$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12 <_irq1>:$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	6a 00                	push   $0x0$/;"	l
f0104c14	obj/kern/kernel.asm	/^f0104c14:	6a 21                	push   $0x21$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	e9 8d 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c1b	obj/kern/kernel.asm	/^f0104c1b:	90                   	nop$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c <_irq2>:$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	6a 00                	push   $0x0$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	6a 22                	push   $0x22$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	e9 83 00 00 00       	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	90                   	nop$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26 <_irq3>:$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	6a 00                	push   $0x0$/;"	l
f0104c28	obj/kern/kernel.asm	/^f0104c28:	6a 23                	push   $0x23$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	eb 7c                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c <_irq4>:$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	6a 00                	push   $0x0$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	6a 24                	push   $0x24$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	eb 76                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32 <_irq5>:$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	6a 00                	push   $0x0$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	6a 25                	push   $0x25$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	eb 70                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38 <_irq6>:$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	6a 00                	push   $0x0$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	6a 26                	push   $0x26$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	eb 6a                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e <_irq7>:$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	6a 00                	push   $0x0$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	6a 27                	push   $0x27$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	eb 64                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44 <_irq8>:$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	6a 00                	push   $0x0$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	6a 28                	push   $0x28$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	eb 5e                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a <_irq9>:$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	6a 00                	push   $0x0$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	6a 29                	push   $0x29$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	eb 58                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50 <_irq10>:$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	6a 00                	push   $0x0$/;"	l
f0104c52	obj/kern/kernel.asm	/^f0104c52:	6a 2a                	push   $0x2a$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	eb 52                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56 <_irq11>:$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	6a 00                	push   $0x0$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	6a 2b                	push   $0x2b$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	eb 4c                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c <_irq12>:$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	6a 00                	push   $0x0$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	6a 2c                	push   $0x2c$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	eb 46                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62 <_irq13>:$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	6a 00                	push   $0x0$/;"	l
f0104c64	obj/kern/kernel.asm	/^f0104c64:	6a 2d                	push   $0x2d$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	eb 40                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68 <_irq14>:$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	6a 00                	push   $0x0$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	6a 2e                	push   $0x2e$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	eb 3a                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e <_irq15>:$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	6a 00                	push   $0x0$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	6a 2f                	push   $0x2f$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	eb 34                	jmp    f0104ca8 <_alltraps>$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74 <sysenter_handler>:$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	6a 23                	push   $0x23$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	55                   	push   %ebp$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	9c                   	pushf  $/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	6a 1b                	push   $0x1b$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	56                   	push   %esi$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	6a 00                	push   $0x0$/;"	l
f0104c7d	obj/kern/kernel.asm	/^f0104c7d:	6a 00                	push   $0x0$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	66 6a 00             	pushw  $0x0$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	66 1e                	pushw  %ds$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	66 6a 00             	pushw  $0x0$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	66 06                	pushw  %es$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	60                   	pusha  $/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	8e d8                	mov    %eax,%ds$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	8e c0                	mov    %eax,%es$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	54                   	push   %esp$/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	e8 f8 0a 00 00       	call   f0105790 <syscall_helper>$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	5c                   	pop    %esp$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	61                   	popa   $/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	66 59                	pop    %cx$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	66 07                	popw   %es$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	66 59                	pop    %cx$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	66 1f                	popw   %ds$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	89 e9                	mov    %ebp,%ecx$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	89 f2                	mov    %esi,%edx$/;"	l
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	0f 35                	sysexit $/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8 <_alltraps>:$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	66 6a 00             	pushw  $0x0$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	66 1e                	pushw  %ds$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	66 6a 00             	pushw  $0x0$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	66 06                	pushw  %es$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	60                   	pusha  $/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	8e d8                	mov    %eax,%ds$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	8e c0                	mov    %eax,%es$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	54                   	push   %esp$/;"	l
f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	e8 ce fc ff ff       	call   f0104990 <trap>$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2 <sched_yield>:$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	55                   	push   %ebp$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	89 e5                	mov    %esp,%ebp$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	56                   	push   %esi$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	53                   	push   %ebx$/;"	l
f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	e8 8b 20 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	83 b8 28 10 28 f0 00 	cmpl   $0x0,-0xfd7efd8(%eax)$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	0f 84 80 00 00 00    	je     f0104d5c <sched_yield+0x9a>$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	e8 76 20 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	89 c6                	mov    %eax,%esi$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	39 c2                	cmp    %eax,%edx$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	0f 84 e1 00 00 00    	je     f0104de6 <sched_yield+0x124>$/;"	l
f0104d05	obj/kern/kernel.asm	/^f0104d05:	8b 0d 6c 02 28 f0    	mov    0xf028026c,%ecx$/;"	l
f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	89 f3                	mov    %esi,%ebx$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	01 cb                	add    %ecx,%ebx$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	83 7b 54 02          	cmpl   $0x2,0x54(%ebx)$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	75 0f                	jne    f0104d27 <sched_yield+0x65>$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	83 7b 50 01          	cmpl   $0x1,0x50(%ebx)$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	74 09                	je     f0104d27 <sched_yield+0x65>$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	53                   	push   %ebx$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	e8 42 ef ff ff       	call   f0103c69 <env_run>$/;"	l
f0104d27	obj/kern/kernel.asm	/^f0104d27:	8d 46 01             	lea    0x1(%esi),%eax$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	89 c3                	mov    %eax,%ebx$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	c1 fb 1f             	sar    $0x1f,%ebx$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	01 d8                	add    %ebx,%eax$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	29 d8                	sub    %ebx,%eax$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	89 c6                	mov    %eax,%esi$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	39 c2                	cmp    %eax,%edx$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	75 ca                	jne    f0104d0b <sched_yield+0x49>$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	e9 a0 00 00 00       	jmp    f0104de6 <sched_yield+0x124>$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	e8 0c 20 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	e8 0d ef ff ff       	call   f0103c69 <env_run>$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	8b 1d 6c 02 28 f0    	mov    0xf028026c,%ebx$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	8d 43 50             	lea    0x50(%ebx),%eax$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	83 38 01             	cmpl   $0x1,(%eax)$/;"	l
f0104d6d	obj/kern/kernel.asm	/^f0104d6d:	74 0b                	je     f0104d7a <sched_yield+0xb8>$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	8d 4e fe             	lea    -0x2(%esi),%ecx$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	76 10                	jbe    f0104d8a <sched_yield+0xc8>$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104d86	obj/kern/kernel.asm	/^f0104d86:	75 e2                	jne    f0104d6a <sched_yield+0xa8>$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	eb 08                	jmp    f0104d92 <sched_yield+0xd0>$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	75 1f                	jne    f0104db1 <sched_yield+0xef>$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	68 90 95 10 f0       	push   $0xf0109590$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	e8 49 f1 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	6a 00                	push   $0x0$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	e8 93 be ff ff       	call   f0100c3f <monitor>$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104daf	obj/kern/kernel.asm	/^f0104daf:	eb f1                	jmp    f0104da2 <sched_yield+0xe0>$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	e8 a1 1f 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	c1 e0 07             	shl    $0x7,%eax$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	01 c3                	add    %eax,%ebx$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	8b 43 54             	mov    0x54(%ebx),%eax$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104dc4	obj/kern/kernel.asm	/^f0104dc4:	76 17                	jbe    f0104ddd <sched_yield+0x11b>$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	e8 8c 1f 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	50                   	push   %eax$/;"	l
f0104dcc	obj/kern/kernel.asm	/^f0104dcc:	68 b0 95 10 f0       	push   $0xf01095b0$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	6a 44                	push   $0x44$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	68 cd 95 10 f0       	push   $0xf01095cd$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	e8 63 b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	53                   	push   %ebx$/;"	l
f0104de1	obj/kern/kernel.asm	/^f0104de1:	e8 83 ee ff ff       	call   f0103c69 <env_run>$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	e8 6c 1f 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	0f 85 5e ff ff ff    	jne    f0104d5c <sched_yield+0x9a>$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	e9 43 ff ff ff       	jmp    f0104d46 <sched_yield+0x84>$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03 <syscall>:$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	55                   	push   %ebp$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	57                   	push   %edi$/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	56                   	push   %esi$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	53                   	push   %ebx$/;"	l
f0104e09	obj/kern/kernel.asm	/^f0104e09:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104e0f	obj/kern/kernel.asm	/^f0104e0f:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	0f 87 4c 09 00 00    	ja     f0105764 <syscall+0x961>$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	ff 24 85 24 96 10 f0 	jmp    *-0xfef69dc(,%eax,4)$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	e8 33 1f 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	6a 00                	push   $0x0$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e2f	obj/kern/kernel.asm	/^f0104e2f:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0104e35	obj/kern/kernel.asm	/^f0104e35:	e8 22 e7 ff ff       	call   f010355c <user_mem_assert>$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	68 da 95 10 f0       	push   $0xf01095da$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	e8 9b f0 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104e4d	obj/kern/kernel.asm	/^f0104e4d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	e9 2c 09 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	e8 09 b9 ff ff       	call   f0100768 <cons_getc>$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	89 c3                	mov    %eax,%ebx$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	e9 20 09 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	e8 ec 1e 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104e77	obj/kern/kernel.asm	/^f0104e77:	e9 0a 09 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	6a 01                	push   $0x1$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	50                   	push   %eax$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	e8 ab e7 ff ff       	call   f0103638 <envid2env>$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	89 c3                	mov    %eax,%ebx$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	85 c0                	test   %eax,%eax$/;"	l
f0104e94	obj/kern/kernel.asm	/^f0104e94:	0f 88 ec 08 00 00    	js     f0105786 <syscall+0x983>$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	e8 b8 1e 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ea5	obj/kern/kernel.asm	/^f0104ea5:	39 90 28 10 28 f0    	cmp    %edx,-0xfd7efd8(%eax)$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	75 23                	jne    f0104ed0 <syscall+0xcd>$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	e8 a5 1e 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104ec1	obj/kern/kernel.asm	/^f0104ec1:	68 df 95 10 f0       	push   $0xf01095df$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	e8 1d f0 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104ecb	obj/kern/kernel.asm	/^f0104ecb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	eb 25                	jmp    f0104ef5 <syscall+0xf2>$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	e8 7f 1e 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	53                   	push   %ebx$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	68 fa 95 10 f0       	push   $0xf01095fa$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	e8 f6 ef ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	e8 ca ec ff ff       	call   f0103bca <env_destroy>$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	e9 79 08 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	81 7d 0c ff ff ff ef 	cmpl   $0xefffffff,0xc(%ebp)$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	77 14                	ja     f0104f2a <syscall+0x127>$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	6a 4d                	push   $0x4d$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	68 12 96 10 f0       	push   $0xf0109612$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	e8 16 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	8d b0 00 00 00 10    	lea    0x10000000(%eax),%esi$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	3b 35 b8 0e 28 f0    	cmp    0xf0280eb8,%esi$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	72 14                	jb     f0104f52 <syscall+0x14f>$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	68 9c 86 10 f0       	push   $0xf010869c$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	6a 4f                	push   $0x4f$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	68 e1 8c 10 f0       	push   $0xf0108ce1$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	e8 ee b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	a1 c0 0e 28 f0       	mov    0xf0280ec0,%eax$/;"	l
f0104f57	obj/kern/kernel.asm	/^f0104f57:	8d 34 f0             	lea    (%eax,%esi,8),%esi$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	bb 03 00 00 00       	mov    $0x3,%ebx$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	85 f6                	test   %esi,%esi$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	0f 84 1f 08 00 00    	je     f0105786 <syscall+0x983>$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	e8 eb 1d 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	6a 06                	push   $0x6$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0104f71	obj/kern/kernel.asm	/^f0104f71:	56                   	push   %esi$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	e8 16 cb ff ff       	call   f0101a99 <page_insert>$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	89 c3                	mov    %eax,%ebx$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	e9 f9 07 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	e8 30 fd ff ff       	call   f0104cc2 <sched_yield>$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	e8 c0 1d 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	ff 70 48             	pushl  0x48(%eax)$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	50                   	push   %eax$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	e8 ad e7 ff ff       	call   f010375c <env_alloc>$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	89 c3                	mov    %eax,%ebx$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	85 c0                	test   %eax,%eax$/;"	l
f0104fb6	obj/kern/kernel.asm	/^f0104fb6:	0f 85 ca 07 00 00    	jne    f0105786 <syscall+0x983>$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104fbf	obj/kern/kernel.asm	/^f0104fbf:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	e8 8c 1d 00 00       	call   f0106d57 <cpunum>$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	8b b0 28 10 28 f0    	mov    -0xfd7efd8(%eax),%esi$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	89 df                	mov    %ebx,%edi$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104fe0	obj/kern/kernel.asm	/^f0104fe0:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104fe7	obj/kern/kernel.asm	/^f0104fe7:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	e9 97 07 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104ff2	obj/kern/kernel.asm	/^f0104ff2:	6a 01                	push   $0x1$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	50                   	push   %eax$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	e8 38 e6 ff ff       	call   f0103638 <envid2env>$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	89 c3                	mov    %eax,%ebx$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	85 c0                	test   %eax,%eax$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	75 1b                	jne    f0105024 <syscall+0x221>$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	83 e8 02             	sub    $0x2,%eax$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	a9 fd ff ff ff       	test   $0xfffffffd,%eax$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	75 18                	jne    f010502e <syscall+0x22b>$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	89 50 54             	mov    %edx,0x54(%eax)$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	e9 62 07 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	e9 58 07 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	e9 4e 07 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105038	obj/kern/kernel.asm	/^f0105038:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	77 7d                	ja     f01050be <syscall+0x2bb>$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	83 e0 05             	and    $0x5,%eax$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	75 7c                	jne    f01050c8 <syscall+0x2c5>$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	75 7d                	jne    f01050d2 <syscall+0x2cf>$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	81 e3 f8 f1 ff ff    	and    $0xfffff1f8,%ebx$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	75 7c                	jne    f01050dc <syscall+0x2d9>$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105063	obj/kern/kernel.asm	/^f0105063:	6a 01                	push   $0x1$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	50                   	push   %eax$/;"	l
f0105069	obj/kern/kernel.asm	/^f0105069:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	e8 c7 e5 ff ff       	call   f0103638 <envid2env>$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	85 c0                	test   %eax,%eax$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	78 6e                	js     f01050e6 <syscall+0x2e3>$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	6a 01                	push   $0x1$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	e8 66 c2 ff ff       	call   f01012e8 <page_alloc>$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	89 c6                	mov    %eax,%esi$/;"	l
f0105084	obj/kern/kernel.asm	/^f0105084:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	85 c0                	test   %eax,%eax$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	74 65                	je     f01050f0 <syscall+0x2ed>$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	50                   	push   %eax$/;"	l
f0105092	obj/kern/kernel.asm	/^f0105092:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	e8 fc c9 ff ff       	call   f0101a99 <page_insert>$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	85 c0                	test   %eax,%eax$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	0f 84 de 06 00 00    	je     f0105786 <syscall+0x983>$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	56                   	push   %esi$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	e8 a8 c4 ff ff       	call   f0101559 <page_free>$/;"	l
f01050b1	obj/kern/kernel.asm	/^f01050b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	e9 c8 06 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	e9 be 06 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	e9 b4 06 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	e9 aa 06 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	e9 a0 06 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	e9 96 06 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f01050f5	obj/kern/kernel.asm	/^f01050f5:	e9 8c 06 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	8b 70 0c             	mov    0xc(%eax),%esi$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0105106	obj/kern/kernel.asm	/^f0105106:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	0f 87 b8 00 00 00    	ja     f01051ca <syscall+0x3c7>$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	81 fe ff ff bf ee    	cmp    $0xeebfffff,%esi$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	0f 87 ac 00 00 00    	ja     f01051ca <syscall+0x3c7>$/;"	l
f010511e	obj/kern/kernel.asm	/^f010511e:	89 d8                	mov    %ebx,%eax$/;"	l
f0105120	obj/kern/kernel.asm	/^f0105120:	83 e0 05             	and    $0x5,%eax$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	0f 85 a8 00 00 00    	jne    f01051d4 <syscall+0x3d1>$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	89 f0                	mov    %esi,%eax$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	09 f8                	or     %edi,%eax$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	a9 ff 0f 00 00       	test   $0xfff,%eax$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	0f 85 a3 00 00 00    	jne    f01051de <syscall+0x3db>$/;"	l
f010513b	obj/kern/kernel.asm	/^f010513b:	f7 c3 f8 f1 ff ff    	test   $0xfffff1f8,%ebx$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	0f 85 a1 00 00 00    	jne    f01051e8 <syscall+0x3e5>$/;"	l
f0105147	obj/kern/kernel.asm	/^f0105147:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	6a 01                	push   $0x1$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	50                   	push   %eax$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	ff 32                	pushl  (%edx)$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	e8 d5 e4 ff ff       	call   f0103638 <envid2env>$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0105166	obj/kern/kernel.asm	/^f0105166:	6a 01                	push   $0x1$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	50                   	push   %eax$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010516f	obj/kern/kernel.asm	/^f010516f:	e8 c4 e4 ff ff       	call   f0103638 <envid2env>$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	83 c4 10             	add    $0x10,%esp$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	85 c0                	test   %eax,%eax$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	74 74                	je     f01051f2 <syscall+0x3ef>$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	74 78                	je     f01051fc <syscall+0x3f9>$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	52                   	push   %edx$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	57                   	push   %edi$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f010518f	obj/kern/kernel.asm	/^f010518f:	e8 21 c8 ff ff       	call   f01019b5 <page_lookup>$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	85 c0                	test   %eax,%eax$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	74 6b                	je     f0105206 <syscall+0x403>$/;"	l
f010519b	obj/kern/kernel.asm	/^f010519b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	75 05                	jne    f01051a8 <syscall+0x3a5>$/;"	l
f01051a3	obj/kern/kernel.asm	/^f01051a3:	f6 c3 02             	test   $0x2,%bl$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	75 68                	jne    f0105210 <syscall+0x40d>$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	53                   	push   %ebx$/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9:	56                   	push   %esi$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	50                   	push   %eax$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	e8 e3 c8 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	89 c3                	mov    %eax,%ebx$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	85 c0                	test   %eax,%eax$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	0f 45 d8             	cmovne %eax,%ebx$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	e9 bc 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	e9 b2 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01051d9	obj/kern/kernel.asm	/^f01051d9:	e9 a8 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	e9 9e 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	e9 94 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f01051f7	obj/kern/kernel.asm	/^f01051f7:	e9 8a 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	e9 80 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010520b	obj/kern/kernel.asm	/^f010520b:	e9 76 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	e9 6c 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0105221	obj/kern/kernel.asm	/^f0105221:	77 3c                	ja     f010525f <syscall+0x45c>$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	75 3d                	jne    f0105269 <syscall+0x466>$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	6a 01                	push   $0x1$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	50                   	push   %eax$/;"	l
f0105235	obj/kern/kernel.asm	/^f0105235:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	e8 fb e3 ff ff       	call   f0103638 <envid2env>$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	89 c3                	mov    %eax,%ebx$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	85 c0                	test   %eax,%eax$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	75 2d                	jne    f0105273 <syscall+0x470>$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	e8 f9 c7 ff ff       	call   f0101a50 <page_remove>$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	83 c4 10             	add    $0x10,%esp$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	e9 27 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	e9 1d 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	e9 13 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	e9 09 05 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105283	obj/kern/kernel.asm	/^f0105283:	6a 00                	push   $0x0$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	50                   	push   %eax$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	e8 a7 e3 ff ff       	call   f0103638 <envid2env>$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	85 c0                	test   %eax,%eax$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	75 23                	jne    f01052bb <syscall+0x4b8>$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	66 83 48 34 03       	orw    $0x3,0x34(%eax)$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	e9 cb 04 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	e9 c1 04 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	6a 01                	push   $0x1$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	50                   	push   %eax$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	e8 62 e3 ff ff       	call   f0103638 <envid2env>$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	89 c3                	mov    %eax,%ebx$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	85 c0                	test   %eax,%eax$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	75 0e                	jne    f01052ed <syscall+0x4ea>$/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	e9 99 04 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	e9 8f 04 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	77 0d                	ja     f010530d <syscall+0x50a>$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	0f 85 5e 04 00 00    	jne    f010576b <syscall+0x968>$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	e8 45 1a 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f0105322	obj/kern/kernel.asm	/^f0105322:	e8 30 1a 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	c7 40 6c 01 00 00 00 	movl   $0x1,0x6c(%eax)$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	e8 1b 1a 00 00       	call   f0106d57 <cpunum>$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0105345	obj/kern/kernel.asm	/^f0105345:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	89 48 70             	mov    %ecx,0x70(%eax)$/;"	l
f010534b	obj/kern/kernel.asm	/^f010534b:	e8 07 1a 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	e8 5d f9 ff ff       	call   f0104cc2 <sched_yield>$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	6a 00                	push   $0x0$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	50                   	push   %eax$/;"	l
f010536e	obj/kern/kernel.asm	/^f010536e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	e8 c2 e2 ff ff       	call   f0103638 <envid2env>$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	85 c0                	test   %eax,%eax$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	0f 85 ce 00 00 00    	jne    f010544f <syscall+0x64c>$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	83 78 6c 00          	cmpl   $0x0,0x6c(%eax)$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	0f 84 cb 00 00 00    	je     f0105459 <syscall+0x656>$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	8b 58 78             	mov    0x78(%eax),%ebx$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	85 db                	test   %ebx,%ebx$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	0f 85 ca 00 00 00    	jne    f0105463 <syscall+0x660>$/;"	l
f0105399	obj/kern/kernel.asm	/^f0105399:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%eax)$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	77 6c                	ja     f0105415 <syscall+0x612>$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	0f 85 b7 00 00 00    	jne    f010546d <syscall+0x66a>$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	e8 9c 19 00 00       	call   f0106d57 <cpunum>$/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	52                   	push   %edx$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	e8 df c5 ff ff       	call   f01019b5 <page_lookup>$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	85 c0                	test   %eax,%eax$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	0f 84 96 00 00 00    	je     f0105477 <syscall+0x674>$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	74 0c                	je     f01053f3 <syscall+0x5f0>$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01053ed	obj/kern/kernel.asm	/^f01053ed:	0f 84 8e 00 00 00    	je     f0105481 <syscall+0x67e>$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	ff 72 70             	pushl  0x70(%edx)$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	50                   	push   %eax$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	ff 72 64             	pushl  0x64(%edx)$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	e8 94 c6 ff ff       	call   f0101a99 <page_insert>$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	85 c0                	test   %eax,%eax$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a:	75 7f                	jne    f010548b <syscall+0x688>$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010540f	obj/kern/kernel.asm	/^f010540f:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	89 48 7c             	mov    %ecx,0x7c(%eax)$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	c7 46 6c 00 00 00 00 	movl   $0x0,0x6c(%esi)$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	e8 33 19 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105427	obj/kern/kernel.asm	/^f0105427:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	89 46 78             	mov    %eax,0x78(%esi)$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	89 48 74             	mov    %ecx,0x74(%eax)$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	e9 37 03 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010544f	obj/kern/kernel.asm	/^f010544f:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	e9 2d 03 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	e9 23 03 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	e9 19 03 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105472	obj/kern/kernel.asm	/^f0105472:	e9 0f 03 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	e9 05 03 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	e9 fb 02 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	e9 f1 02 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	e8 bd 18 00 00       	call   f0106d57 <cpunum>$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01054a6	obj/kern/kernel.asm	/^f01054a6:	03 58 60             	add    0x60(%eax),%ebx$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	e8 a9 18 00 00       	call   f0106d57 <cpunum>$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	8b b8 28 10 28 f0    	mov    -0xfd7efd8(%eax),%edi$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	89 d8                	mov    %ebx,%eax$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	8d b4 13 ff 0f 00 00 	lea    0xfff(%ebx,%edx,1),%esi$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	39 f0                	cmp    %esi,%eax$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	73 5e                	jae    f0105533 <syscall+0x730>$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	89 c3                	mov    %eax,%ebx$/;"	l
f01054d7	obj/kern/kernel.asm	/^f01054d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	6a 00                	push   $0x0$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	e8 07 be ff ff       	call   f01012e8 <page_alloc>$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	85 c0                	test   %eax,%eax$/;"	l
f01054e6	obj/kern/kernel.asm	/^f01054e6:	75 17                	jne    f01054ff <syscall+0x6fc>$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	68 a4 90 10 f0       	push   $0xf01090a4$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	68 b8 01 00 00       	push   $0x1b8$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	68 12 96 10 f0       	push   $0xf0109612$/;"	l
f01054fa	obj/kern/kernel.asm	/^f01054fa:	e8 41 ab ff ff       	call   f0100040 <_panic>$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	6a 06                	push   $0x6$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	53                   	push   %ebx$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	50                   	push   %eax$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	ff 77 64             	pushl  0x64(%edi)$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	e8 8e c5 ff ff       	call   f0101a99 <page_insert>$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	85 c0                	test   %eax,%eax$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	74 17                	je     f0105529 <syscall+0x726>$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105515	obj/kern/kernel.asm	/^f0105515:	68 d8 90 10 f0       	push   $0xf01090d8$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	68 bb 01 00 00       	push   $0x1bb$/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	68 12 96 10 f0       	push   $0xf0109612$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	e8 17 ab ff ff       	call   f0100040 <_panic>$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	39 de                	cmp    %ebx,%esi$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	77 a4                	ja     f01054d7 <syscall+0x6d4>$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	89 47 60             	mov    %eax,0x60(%edi)$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	e8 19 18 00 00       	call   f0106d57 <cpunum>$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	8b 58 60             	mov    0x60(%eax),%ebx$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	e9 37 02 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	e8 ac 26 00 00       	call   f0107c00 <time_msec>$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	89 c3                	mov    %eax,%ebx$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	e9 2b 02 00 00       	jmp    f0105786 <syscall+0x983>$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	e8 f4 17 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	89 c7                	mov    %eax,%edi$/;"	l
f0105573	obj/kern/kernel.asm	/^f0105573:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
f010557c	obj/kern/kernel.asm	/^f010557c:	0f 84 fc 00 00 00    	je     f010567e <syscall+0x87b>$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	bf 00 20 40 00       	mov    $0x402000,%edi$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	0f 85 cc 00 00 00    	jne    f0105669 <syscall+0x866>$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	83 e0 02             	and    $0x2,%eax$/;"	l
f01055a3	obj/kern/kernel.asm	/^f01055a3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	19 c0                	sbb    %eax,%eax$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	83 e0 fe             	and    $0xfffffffe,%eax$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	83 c0 07             	add    $0x7,%eax$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4:	89 c6                	mov    %eax,%esi$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01055bc	obj/kern/kernel.asm	/^f01055bc:	03 43 14             	add    0x14(%ebx),%eax$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01055c4	obj/kern/kernel.asm	/^f01055c4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	39 c6                	cmp    %eax,%esi$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	0f 83 98 00 00 00    	jae    f0105669 <syscall+0x866>$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	e8 7e 17 00 00       	call   f0106d57 <cpunum>$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01055dc	obj/kern/kernel.asm	/^f01055dc:	6a 00                	push   $0x0$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	57                   	push   %edi$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	e8 c5 c3 ff ff       	call   f01019b5 <page_lookup>$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	85 c0                	test   %eax,%eax$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	0f 84 74 01 00 00    	je     f0105772 <syscall+0x96f>$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	e8 54 17 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105603	obj/kern/kernel.asm	/^f0105603:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	56                   	push   %esi$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	e8 7e c4 ff ff       	call   f0101a99 <page_insert>$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	85 c0                	test   %eax,%eax$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	0f 88 53 01 00 00    	js     f0105779 <syscall+0x976>$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	e8 2c 17 00 00       	call   f0106d57 <cpunum>$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f010563a	obj/kern/kernel.asm	/^f010563a:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	e8 0e c4 ff ff       	call   f0101a50 <page_remove>$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0105659	obj/kern/kernel.asm	/^f0105659:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	39 c6                	cmp    %eax,%esi$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	0f 82 68 ff ff ff    	jb     f01055d1 <syscall+0x7ce>$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	39 45 c4             	cmp    %eax,-0x3c(%ebp)$/;"	l
f0105676	obj/kern/kernel.asm	/^f0105676:	0f 85 18 ff ff ff    	jne    f0105594 <syscall+0x791>$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	eb 05                	jmp    f0105683 <syscall+0x880>$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	bf 00 20 40 00       	mov    $0x402000,%edi$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	e8 cf 16 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	6a 00                	push   $0x0$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	57                   	push   %edi$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f010569a	obj/kern/kernel.asm	/^f010569a:	e8 16 c3 ff ff       	call   f01019b5 <page_lookup>$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	89 c3                	mov    %eax,%ebx$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	85 c0                	test   %eax,%eax$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	0f 84 d1 00 00 00    	je     f010577d <syscall+0x97a>$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	e8 a6 16 00 00       	call   f0106d57 <cpunum>$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	6a 07                	push   $0x7$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	68 00 d0 bf ee       	push   $0xeebfd000$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	53                   	push   %ebx$/;"	l
f01056b9	obj/kern/kernel.asm	/^f01056b9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	e8 cf c3 ff ff       	call   f0101a99 <page_insert>$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056cd	obj/kern/kernel.asm	/^f01056cd:	85 c0                	test   %eax,%eax$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	0f 88 af 00 00 00    	js     f0105784 <syscall+0x981>$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	e8 7d 16 00 00       	call   f0106d57 <cpunum>$/;"	l
f01056da	obj/kern/kernel.asm	/^f01056da:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	57                   	push   %edi$/;"	l
f01056de	obj/kern/kernel.asm	/^f01056de:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	ff 70 64             	pushl  0x64(%eax)$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	e8 61 c3 ff ff       	call   f0101a50 <page_remove>$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	e8 63 16 00 00       	call   f0106d57 <cpunum>$/;"	l
f01056f4	obj/kern/kernel.asm	/^f01056f4:	83 c4 04             	add    $0x4,%esp$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0105700	obj/kern/kernel.asm	/^f0105700:	e8 64 e5 ff ff       	call   f0103c69 <env_run>$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	e8 4d 16 00 00       	call   f0106d57 <cpunum>$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	6a 04                	push   $0x4$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010570f	obj/kern/kernel.asm	/^f010570f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	e8 3c de ff ff       	call   f010355c <user_mem_assert>$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	e8 83 1d 00 00       	call   f01074b1 <e1000_transmit>$/;"	l
f010572e	obj/kern/kernel.asm	/^f010572e:	89 c3                	mov    %eax,%ebx$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	eb 51                	jmp    f0105786 <syscall+0x983>$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	e8 1d 16 00 00       	call   f0106d57 <cpunum>$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	6a 04                	push   $0x4$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	68 00 08 00 00       	push   $0x800$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	e8 0a de ff ff       	call   f010355c <user_mem_assert>$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	e8 66 1e 00 00       	call   f01075c3 <e1000_receive>$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	89 c3                	mov    %eax,%ebx$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	eb 22                	jmp    f0105786 <syscall+0x983>$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	eb 1b                	jmp    f0105786 <syscall+0x983>$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	eb 14                	jmp    f0105786 <syscall+0x983>$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	eb 0d                	jmp    f0105786 <syscall+0x983>$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	89 c3                	mov    %eax,%ebx$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	eb 09                	jmp    f0105786 <syscall+0x983>$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f0105782	obj/kern/kernel.asm	/^f0105782:	eb 02                	jmp    f0105786 <syscall+0x983>$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	89 c3                	mov    %eax,%ebx$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	89 d8                	mov    %ebx,%eax$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	5b                   	pop    %ebx$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	5e                   	pop    %esi$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	5f                   	pop    %edi$/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	5d                   	pop    %ebp$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	c3                   	ret    $/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790 <syscall_helper>:$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	55                   	push   %ebp$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	89 e5                	mov    %esp,%ebp$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	57                   	push   %edi$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	56                   	push   %esi$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	53                   	push   %ebx$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	68 a0 63 12 f0       	push   $0xf01263a0$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	e8 1f 18 00 00       	call   f0106fc5 <spin_lock>$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	e8 a5 15 00 00       	call   f0106d57 <cpunum>$/;"	l
f01057b2	obj/kern/kernel.asm	/^f01057b2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01057b5	obj/kern/kernel.asm	/^f01057b5:	8b 80 28 10 28 f0    	mov    -0xfd7efd8(%eax),%eax$/;"	l
f01057bb	obj/kern/kernel.asm	/^f01057bb:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	89 c7                	mov    %eax,%edi$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	89 de                	mov    %ebx,%esi$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	e8 8c 15 00 00       	call   f0106d57 <cpunum>$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	8b b0 28 10 28 f0    	mov    -0xfd7efd8(%eax),%esi$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	83 c4 08             	add    $0x8,%esp$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	6a 00                	push   $0x0$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	ff 33                	pushl  (%ebx)$/;"	l
f01057db	obj/kern/kernel.asm	/^f01057db:	ff 73 10             	pushl  0x10(%ebx)$/;"	l
f01057de	obj/kern/kernel.asm	/^f01057de:	ff 73 18             	pushl  0x18(%ebx)$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f01057e4	obj/kern/kernel.asm	/^f01057e4:	ff 73 1c             	pushl  0x1c(%ebx)$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	e8 17 f6 ff ff       	call   f0104e03 <syscall>$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	83 c4 14             	add    $0x14,%esp$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	68 a0 63 12 f0       	push   $0xf01263a0$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	e8 9e 18 00 00       	call   f010709a <spin_unlock>$/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	f3 90                	pause  $/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	e8 54 15 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	e8 17 e4 ff ff       	call   f0103c2b <env_pop_tf>$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814 <stab_binsearch>:$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	55                   	push   %ebp$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	89 e5                	mov    %esp,%ebp$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	57                   	push   %edi$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	56                   	push   %esi$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	53                   	push   %ebx$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	8b 1a                	mov    (%edx),%ebx$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	8b 01                	mov    (%ecx),%eax$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	0f 8f 9a 00 00 00    	jg     f01058d2 <stab_binsearch+0xbe>$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	01 d8                	add    %ebx,%eax$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	89 c6                	mov    %eax,%esi$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	c1 ee 1f             	shr    $0x1f,%esi$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	01 c6                	add    %eax,%esi$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	d1 fe                	sar    %esi$/;"	d
f010584d	obj/kern/kernel.asm	/^f010584d:	39 de                	cmp    %ebx,%esi$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	0f 8c c4 00 00 00    	jl     f0105919 <stab_binsearch+0x105>$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f010585e	obj/kern/kernel.asm	/^f010585e:	0f b6 42 04          	movzbl 0x4(%edx),%eax$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	39 c7                	cmp    %eax,%edi$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	0f 84 b4 00 00 00    	je     f010591e <stab_binsearch+0x10a>$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	89 f0                	mov    %esi,%eax$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	0f 8c a2 00 00 00    	jl     f0105919 <stab_binsearch+0x105>$/;"	l
f0105877	obj/kern/kernel.asm	/^f0105877:	0f b6 4a f8          	movzbl -0x8(%edx),%ecx$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	39 f9                	cmp    %edi,%ecx$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	75 ea                	jne    f010586c <stab_binsearch+0x58>$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	e9 99 00 00 00       	jmp    f0105920 <stab_binsearch+0x10c>$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	89 03                	mov    %eax,(%ebx)$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	eb 2b                	jmp    f01058c3 <stab_binsearch+0xaf>$/;"	l
f0105898	obj/kern/kernel.asm	/^f0105898:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f010589b	obj/kern/kernel.asm	/^f010589b:	76 14                	jbe    f01058b1 <stab_binsearch+0x9d>$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	89 06                	mov    %eax,(%esi)$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	eb 12                	jmp    f01058c3 <stab_binsearch+0xaf>$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	89 06                	mov    %eax,(%esi)$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	89 c3                	mov    %eax,%ebx$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f01058c3	obj/kern/kernel.asm	/^f01058c3:	39 5d f0             	cmp    %ebx,-0x10(%ebp)$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	0f 8d 73 ff ff ff    	jge    f010583f <stab_binsearch+0x2b>$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	75 0f                	jne    f01058e1 <stab_binsearch+0xcd>$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	8b 00                	mov    (%eax),%eax$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	89 07                	mov    %eax,(%edi)$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	eb 57                	jmp    f0105938 <stab_binsearch+0x124>$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	8b 00                	mov    (%eax),%eax$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01058e9	obj/kern/kernel.asm	/^f01058e9:	8b 0e                	mov    (%esi),%ecx$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	39 c8                	cmp    %ecx,%eax$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	7e 23                	jle    f0105912 <stab_binsearch+0xfe>$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	39 df                	cmp    %ebx,%edi$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	74 12                	je     f0105912 <stab_binsearch+0xfe>$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	7e 0b                	jle    f0105912 <stab_binsearch+0xfe>$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	0f b6 5a f8          	movzbl -0x8(%edx),%ebx$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	39 df                	cmp    %ebx,%edi$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	75 ee                	jne    f0105900 <stab_binsearch+0xec>$/;"	l
f0105912	obj/kern/kernel.asm	/^f0105912:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	89 07                	mov    %eax,(%edi)$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	eb 1f                	jmp    f0105938 <stab_binsearch+0x124>$/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	eb a5                	jmp    f01058c3 <stab_binsearch+0xaf>$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	89 f0                	mov    %esi,%eax$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	0f 82 54 ff ff ff    	jb     f0105887 <stab_binsearch+0x73>$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	e9 60 ff ff ff       	jmp    f0105898 <stab_binsearch+0x84>$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	83 c4 14             	add    $0x14,%esp$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	5b                   	pop    %ebx$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	5e                   	pop    %esi$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	5f                   	pop    %edi$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	5d                   	pop    %ebp$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	c3                   	ret    $/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940 <debuginfo_eip>:$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	55                   	push   %ebp$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	89 e5                	mov    %esp,%ebp$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	57                   	push   %edi$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	56                   	push   %esi$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	53                   	push   %ebx$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010594f	obj/kern/kernel.asm	/^f010594f:	c7 03 74 96 10 f0    	movl   $0xf0109674,(%ebx)$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	c7 43 08 74 96 10 f0 	movl   $0xf0109674,0x8(%ebx)$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f010597a	obj/kern/kernel.asm	/^f010597a:	0f 87 a3 00 00 00    	ja     f0105a23 <debuginfo_eip+0xe3>$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	e8 d2 13 00 00       	call   f0106d57 <cpunum>$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	6a 04                	push   $0x4$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	6a 10                	push   $0x10$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	68 00 00 20 00       	push   $0x200000$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	e8 0a db ff ff       	call   f01034a6 <user_mem_check>$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	85 c0                	test   %eax,%eax$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	0f 85 52 02 00 00    	jne    f0105bf9 <debuginfo_eip+0x2b9>$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	8b 35 04 00 20 00    	mov    0x200004,%esi$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	e8 8c 13 00 00       	call   f0106d57 <cpunum>$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	6a 04                	push   $0x4$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	89 f2                	mov    %esi,%edx$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	29 ca                	sub    %ecx,%edx$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	52                   	push   %edx$/;"	l
f01059de	obj/kern/kernel.asm	/^f01059de:	51                   	push   %ecx$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	e8 b9 da ff ff       	call   f01034a6 <user_mem_check>$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	85 c0                	test   %eax,%eax$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	0f 85 08 02 00 00    	jne    f0105c00 <debuginfo_eip+0x2c0>$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	e8 5a 13 00 00       	call   f0106d57 <cpunum>$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	6a 04                	push   $0x4$/;"	l
f01059ff	obj/kern/kernel.asm	/^f01059ff:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105a02	obj/kern/kernel.asm	/^f0105a02:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	29 ca                	sub    %ecx,%edx$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	52                   	push   %edx$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	51                   	push   %ecx$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	ff b0 28 10 28 f0    	pushl  -0xfd7efd8(%eax)$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	e8 8f da ff ff       	call   f01034a6 <user_mem_check>$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	85 c0                	test   %eax,%eax$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	74 1f                	je     f0105a3d <debuginfo_eip+0xfd>$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	e9 e4 01 00 00       	jmp    f0105c07 <debuginfo_eip+0x2c7>$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	c7 45 bc 86 b5 11 f0 	movl   $0xf011b586,-0x44(%ebp)$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	c7 45 b8 d1 6b 11 f0 	movl   $0xf0116bd1,-0x48(%ebp)$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	be d0 6b 11 f0       	mov    $0xf0116bd0,%esi$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	c7 45 c0 58 9f 10 f0 	movl   $0xf0109f58,-0x40(%ebp)$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	39 45 b8             	cmp    %eax,-0x48(%ebp)$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	0f 83 c5 01 00 00    	jae    f0105c0e <debuginfo_eip+0x2ce>$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	0f 85 c2 01 00 00    	jne    f0105c15 <debuginfo_eip+0x2d5>$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105a5a	obj/kern/kernel.asm	/^f0105a5a:	2b 75 c0             	sub    -0x40(%ebp),%esi$/;"	l
f0105a5d	obj/kern/kernel.asm	/^f0105a5d:	c1 fe 02             	sar    $0x2,%esi$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	69 c6 ab aa aa aa    	imul   $0xaaaaaaab,%esi,%eax$/;"	l
f0105a66	obj/kern/kernel.asm	/^f0105a66:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105a6c	obj/kern/kernel.asm	/^f0105a6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	57                   	push   %edi$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	6a 64                	push   $0x64$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0105a75	obj/kern/kernel.asm	/^f0105a75:	89 d1                	mov    %edx,%ecx$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	89 f0                	mov    %esi,%eax$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	e8 90 fd ff ff       	call   f0105814 <stab_binsearch>$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	85 c0                	test   %eax,%eax$/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	0f 84 8a 01 00 00    	je     f0105c1c <debuginfo_eip+0x2dc>$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105a95	obj/kern/kernel.asm	/^f0105a95:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a98	obj/kern/kernel.asm	/^f0105a98:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	57                   	push   %edi$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	6a 24                	push   $0x24$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	89 d1                	mov    %edx,%ecx$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	89 f0                	mov    %esi,%eax$/;"	l
f0105aab	obj/kern/kernel.asm	/^f0105aab:	e8 64 fd ff ff       	call   f0105814 <stab_binsearch>$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	39 d0                	cmp    %edx,%eax$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	7f 2e                	jg     f0105aeb <debuginfo_eip+0x1ab>$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	8d 34 8e             	lea    (%esi,%ecx,4),%esi$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	89 75 c4             	mov    %esi,-0x3c(%ebp)$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	8b 36                	mov    (%esi),%esi$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	2b 4d b8             	sub    -0x48(%ebp),%ecx$/;"	l
f0105ace	obj/kern/kernel.asm	/^f0105ace:	39 ce                	cmp    %ecx,%esi$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	73 06                	jae    f0105ad8 <debuginfo_eip+0x198>$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	03 75 b8             	add    -0x48(%ebp),%esi$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	89 73 08             	mov    %esi,0x8(%ebx)$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	8b 4e 08             	mov    0x8(%esi),%ecx$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	29 cf                	sub    %ecx,%edi$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	eb 0f                	jmp    f0105afa <debuginfo_eip+0x1ba>$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f0105aee	obj/kern/kernel.asm	/^f0105aee:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	6a 3a                	push   $0x3a$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	e8 b3 0b 00 00       	call   f01066ba <strfind>$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	57                   	push   %edi$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	6a 44                	push   $0x44$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	8b 75 c0             	mov    -0x40(%ebp),%esi$/;"	l
f0105b1c	obj/kern/kernel.asm	/^f0105b1c:	89 f0                	mov    %esi,%eax$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	e8 f1 fc ff ff       	call   f0105814 <stab_binsearch>$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105b29	obj/kern/kernel.asm	/^f0105b29:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	39 d0                	cmp    %edx,%eax$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	0f 8f ef 00 00 00    	jg     f0105c23 <debuginfo_eip+0x2e3>$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	89 53 04             	mov    %edx,0x4(%ebx)$/;"	l
f0105b37	obj/kern/kernel.asm	/^f0105b37:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	39 f8                	cmp    %edi,%eax$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	7c 69                	jl     f0105ba7 <debuginfo_eip+0x267>$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	8d 34 96             	lea    (%esi,%edx,4),%esi$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	0f b6 56 04          	movzbl 0x4(%esi),%edx$/;"	l
f0105b48	obj/kern/kernel.asm	/^f0105b48:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0105b4b	obj/kern/kernel.asm	/^f0105b4b:	74 41                	je     f0105b8e <debuginfo_eip+0x24e>$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	89 f1                	mov    %esi,%ecx$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	83 c6 08             	add    $0x8,%esi$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	c6 45 c4 00          	movb   $0x0,-0x3c(%ebp)$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	eb 1f                	jmp    f0105b77 <debuginfo_eip+0x237>$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105b5b	obj/kern/kernel.asm	/^f0105b5b:	39 f8                	cmp    %edi,%eax$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	7c 48                	jl     f0105ba7 <debuginfo_eip+0x267>$/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	0f b6 51 f8          	movzbl -0x8(%ecx),%edx$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	83 e9 0c             	sub    $0xc,%ecx$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	83 ee 0c             	sub    $0xc,%esi$/;"	l
f0105b69	obj/kern/kernel.asm	/^f0105b69:	c6 45 c4 01          	movb   $0x1,-0x3c(%ebp)$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	75 05                	jne    f0105b77 <debuginfo_eip+0x237>$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	eb 17                	jmp    f0105b8e <debuginfo_eip+0x24e>$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	75 dc                	jne    f0105b58 <debuginfo_eip+0x218>$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	74 d7                	je     f0105b58 <debuginfo_eip+0x218>$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0105b85	obj/kern/kernel.asm	/^f0105b85:	74 03                	je     f0105b8a <debuginfo_eip+0x24a>$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	39 c7                	cmp    %eax,%edi$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	7f 19                	jg     f0105ba7 <debuginfo_eip+0x267>$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	8b 7d b8             	mov    -0x48(%ebp),%edi$/;"	l
f0105b9d	obj/kern/kernel.asm	/^f0105b9d:	29 f8                	sub    %edi,%eax$/;"	l
f0105b9f	obj/kern/kernel.asm	/^f0105b9f:	39 c2                	cmp    %eax,%edx$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	73 04                	jae    f0105ba7 <debuginfo_eip+0x267>$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	01 fa                	add    %edi,%edx$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	89 13                	mov    %edx,(%ebx)$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	39 f2                	cmp    %esi,%edx$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	0f 8d 83 00 00 00    	jge    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0105bbd	obj/kern/kernel.asm	/^f0105bbd:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105bc0	obj/kern/kernel.asm	/^f0105bc0:	39 c6                	cmp    %eax,%esi$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	7e 66                	jle    f0105c2a <debuginfo_eip+0x2ea>$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	80 7c 0f 04 a0       	cmpb   $0xa0,0x4(%edi,%ecx,1)$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	75 5d                	jne    f0105c31 <debuginfo_eip+0x2f1>$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	8d 42 02             	lea    0x2(%edx),%eax$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	8d 54 0f f4          	lea    -0xc(%edi,%ecx,1),%edx$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0105bdf	obj/kern/kernel.asm	/^f0105bdf:	39 c6                	cmp    %eax,%esi$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	74 55                	je     f0105c38 <debuginfo_eip+0x2f8>$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	0f b6 4a 1c          	movzbl 0x1c(%edx),%ecx$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	74 e9                	je     f0105bdb <debuginfo_eip+0x29b>$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7:	eb 44                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105bfe	obj/kern/kernel.asm	/^f0105bfe:	eb 3d                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	eb 36                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c:	eb 2f                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c13	obj/kern/kernel.asm	/^f0105c13:	eb 28                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	eb 21                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c1c	obj/kern/kernel.asm	/^f0105c1c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	eb 1a                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	eb 13                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	eb 0c                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	eb 05                	jmp    f0105c3d <debuginfo_eip+0x2fd>$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	5b                   	pop    %ebx$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	5e                   	pop    %esi$/;"	l
f0105c42	obj/kern/kernel.asm	/^f0105c42:	5f                   	pop    %edi$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	5d                   	pop    %ebp$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	c3                   	ret    $/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45 <printnum>:$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	55                   	push   %ebp$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	57                   	push   %edi$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	56                   	push   %esi$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	53                   	push   %ebx$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	89 c7                	mov    %eax,%edi$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	89 d6                	mov    %edx,%esi$/;"	l
f0105c52	obj/kern/kernel.asm	/^f0105c52:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105c58	obj/kern/kernel.asm	/^f0105c58:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	83 7d 18 2d          	cmpl   $0x2d,0x18(%ebp)$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	0f 85 bf 00 00 00    	jne    f0105d2a <printnum+0xe5>$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	39 1d 88 0a 28 f0    	cmp    %ebx,0xf0280a88$/;"	l
f0105c71	obj/kern/kernel.asm	/^f0105c71:	0f 8d de 00 00 00    	jge    f0105d55 <printnum+0x110>$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	89 1d 88 0a 28 f0    	mov    %ebx,0xf0280a88$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	e9 d3 00 00 00       	jmp    f0105d55 <printnum+0x110>$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	85 db                	test   %ebx,%ebx$/;"	l
f0105c87	obj/kern/kernel.asm	/^f0105c87:	7f 37                	jg     f0105cc0 <printnum+0x7b>$/;"	l
f0105c89	obj/kern/kernel.asm	/^f0105c89:	e9 ea 00 00 00       	jmp    f0105d78 <printnum+0x133>$/;"	l
f0105c8e	obj/kern/kernel.asm	/^f0105c8e:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	a3 84 0a 28 f0       	mov    %eax,0xf0280a84$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	56                   	push   %esi$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105c9d	obj/kern/kernel.asm	/^f0105c9d:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105ca9	obj/kern/kernel.asm	/^f0105ca9:	e8 92 20 00 00       	call   f0107d40 <__umoddi3>$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	0f be 80 7e 96 10 f0 	movsbl -0xfef6982(%eax),%eax$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	50                   	push   %eax$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	ff d7                	call   *%edi$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	eb 16                	jmp    f0105cd6 <printnum+0x91>$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	56                   	push   %esi$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	ff d7                	call   *%edi$/;"	l
f0105cc9	obj/kern/kernel.asm	/^f0105cc9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	75 ef                	jne    f0105cc0 <printnum+0x7b>$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	e9 a2 00 00 00       	jmp    f0105d78 <printnum+0x133>$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	3b 1d 88 0a 28 f0    	cmp    0xf0280a88,%ebx$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	0f 85 76 01 00 00    	jne    f0105e58 <printnum+0x213>$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	a1 84 0a 28 f0       	mov    0xf0280a84,%eax$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	89 15 84 0a 28 f0    	mov    %edx,0xf0280a84$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	85 c0                	test   %eax,%eax$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	7e 1d                	jle    f0105d11 <printnum+0xcc>$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	56                   	push   %esi$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	6a 20                	push   $0x20$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	ff d7                	call   *%edi$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	a1 84 0a 28 f0       	mov    0xf0280a84,%eax$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	89 15 84 0a 28 f0    	mov    %edx,0xf0280a84$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105d0d	obj/kern/kernel.asm	/^f0105d0d:	85 c0                	test   %eax,%eax$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	7f e3                	jg     f0105cf4 <printnum+0xaf>$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	c7 05 84 0a 28 f0 00 	movl   $0x0,0xf0280a84$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	00 00 00 $/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	c7 05 88 0a 28 f0 00 	movl   $0x0,0xf0280a88$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	00 00 00 $/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	e9 2e 01 00 00       	jmp    f0105e58 <printnum+0x213>$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d32	obj/kern/kernel.asm	/^f0105d32:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	83 fa 00             	cmp    $0x0,%edx$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	0f 87 ba 00 00 00    	ja     f0105e01 <printnum+0x1bc>$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	0f 83 b1 00 00 00    	jae    f0105e01 <printnum+0x1bc>$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	e9 2d ff ff ff       	jmp    f0105c82 <printnum+0x3d>$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105d66	obj/kern/kernel.asm	/^f0105d66:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	83 fa 00             	cmp    $0x0,%edx$/;"	l
f0105d6c	obj/kern/kernel.asm	/^f0105d6c:	77 37                	ja     f0105da5 <printnum+0x160>$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	73 32                	jae    f0105da5 <printnum+0x160>$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	e9 16 ff ff ff       	jmp    f0105c8e <printnum+0x49>$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	56                   	push   %esi$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	e8 b0 1f 00 00       	call   f0107d40 <__umoddi3>$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	0f be 80 7e 96 10 f0 	movsbl -0xfef6982(%eax),%eax$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	50                   	push   %eax$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	ff d7                	call   *%edi$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	e9 b3 00 00 00       	jmp    f0105e58 <printnum+0x213>$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105dab	obj/kern/kernel.asm	/^f0105dab:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	50                   	push   %eax$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105db8	obj/kern/kernel.asm	/^f0105db8:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	e8 4a 1e 00 00       	call   f0107c10 <__udivdi3>$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	52                   	push   %edx$/;"	l
f0105dca	obj/kern/kernel.asm	/^f0105dca:	50                   	push   %eax$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	89 f2                	mov    %esi,%edx$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	89 f8                	mov    %edi,%eax$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	e8 71 fe ff ff       	call   f0105c45 <printnum>$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	56                   	push   %esi$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105dde	obj/kern/kernel.asm	/^f0105dde:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	e8 54 1f 00 00       	call   f0107d40 <__umoddi3>$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	0f be 80 7e 96 10 f0 	movsbl -0xfef6982(%eax),%eax$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	50                   	push   %eax$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	ff d7                	call   *%edi$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	e9 d5 fe ff ff       	jmp    f0105cd6 <printnum+0x91>$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	53                   	push   %ebx$/;"	l
f0105e0b	obj/kern/kernel.asm	/^f0105e0b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	e8 ee 1d 00 00       	call   f0107c10 <__udivdi3>$/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	52                   	push   %edx$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	50                   	push   %eax$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	89 f2                	mov    %esi,%edx$/;"	l
f0105e29	obj/kern/kernel.asm	/^f0105e29:	89 f8                	mov    %edi,%eax$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	e8 15 fe ff ff       	call   f0105c45 <printnum>$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	83 c4 18             	add    $0x18,%esp$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	56                   	push   %esi$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f0105e3a	obj/kern/kernel.asm	/^f0105e3a:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f0105e3d	obj/kern/kernel.asm	/^f0105e3d:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0105e43	obj/kern/kernel.asm	/^f0105e43:	e8 f8 1e 00 00       	call   f0107d40 <__umoddi3>$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	0f be 80 7e 96 10 f0 	movsbl -0xfef6982(%eax),%eax$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	50                   	push   %eax$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	ff d7                	call   *%edi$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	5b                   	pop    %ebx$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	5e                   	pop    %esi$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	5f                   	pop    %edi$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	5d                   	pop    %ebp$/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	c3                   	ret    $/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60 <getuint>:$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	55                   	push   %ebp$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	7e 0e                	jle    f0105e76 <getuint+0x16>$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	8b 10                	mov    (%eax),%edx$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	8b 02                	mov    (%edx),%eax$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	eb 22                	jmp    f0105e98 <getuint+0x38>$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	85 d2                	test   %edx,%edx$/;"	l
f0105e78	obj/kern/kernel.asm	/^f0105e78:	74 10                	je     f0105e8a <getuint+0x2a>$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	8b 10                	mov    (%eax),%edx$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	8b 02                	mov    (%edx),%eax$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e88	obj/kern/kernel.asm	/^f0105e88:	eb 0e                	jmp    f0105e98 <getuint+0x38>$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	8b 10                	mov    (%eax),%edx$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105e91	obj/kern/kernel.asm	/^f0105e91:	8b 02                	mov    (%edx),%eax$/;"	l
f0105e93	obj/kern/kernel.asm	/^f0105e93:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	5d                   	pop    %ebp$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	c3                   	ret    $/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a <sprintputch>:$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	55                   	push   %ebp$/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	8b 10                	mov    (%eax),%edx$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	73 0a                	jae    f0105eb5 <sprintputch+0x1b>$/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	88 02                	mov    %al,(%edx)$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	5d                   	pop    %ebp$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	c3                   	ret    $/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7 <printfmt>:$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	55                   	push   %ebp$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	89 e5                	mov    %esp,%ebp$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	50                   	push   %eax$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105ec4	obj/kern/kernel.asm	/^f0105ec4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	e8 05 00 00 00       	call   f0105ed4 <vprintfmt>$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	c9                   	leave  $/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	c3                   	ret    $/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4 <vprintfmt>:$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	55                   	push   %ebp$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	57                   	push   %edi$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	56                   	push   %esi$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	53                   	push   %ebx$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	eb 03                	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	89 75 10             	mov    %esi,0x10(%ebp)$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	74 27                	je     f0105f1d <vprintfmt+0x49>$/;"	l
f0105ef6	obj/kern/kernel.asm	/^f0105ef6:	85 c0                	test   %eax,%eax$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	75 0d                	jne    f0105f07 <vprintfmt+0x33>$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	e9 9d 04 00 00       	jmp    f010639c <vprintfmt+0x4c8>$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	85 c0                	test   %eax,%eax$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	0f 84 95 04 00 00    	je     f010639c <vprintfmt+0x4c8>$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	53                   	push   %ebx$/;"	l
f0105f0b	obj/kern/kernel.asm	/^f0105f0b:	50                   	push   %eax$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	ff d7                	call   *%edi$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	0f b6 46 ff          	movzbl -0x1(%esi),%eax$/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	75 e2                	jne    f0105eff <vprintfmt+0x2b>$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	c6 45 e3 20          	movb   $0x20,-0x1d(%ebp)$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0105f3b	obj/kern/kernel.asm	/^f0105f3b:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	eb 08                	jmp    f0105f4c <vprintfmt+0x78>$/;"	l
f0105f44	obj/kern/kernel.asm	/^f0105f44:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	8d 46 01             	lea    0x1(%esi),%eax$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f0105f52	obj/kern/kernel.asm	/^f0105f52:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	3c 55                	cmp    $0x55,%al$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	0f 87 fa 03 00 00    	ja     f010635d <vprintfmt+0x489>$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	ff 24 85 60 98 10 f0 	jmp    *-0xfef67a0(,%eax,4)$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	c6 45 e3 2d          	movb   $0x2d,-0x1d(%ebp)$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	eb d6                	jmp    f0105f4c <vprintfmt+0x78>$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	8d 42 d0             	lea    -0x30(%edx),%eax$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105f7c	obj/kern/kernel.asm	/^f0105f7c:	0f be 46 01          	movsbl 0x1(%esi),%eax$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	77 6b                	ja     f0105ff3 <vprintfmt+0x11f>$/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	eb 09                	jmp    f0105f9c <vprintfmt+0xc8>$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	c6 45 e3 30          	movb   $0x30,-0x1d(%ebp)$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	eb b0                	jmp    f0105f4c <vprintfmt+0x78>$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	8d 14 92             	lea    (%edx,%edx,4),%edx$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	8d 54 50 d0          	lea    -0x30(%eax,%edx,2),%edx$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	76 eb                	jbe    f0105f9c <vprintfmt+0xc8>$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	eb 3d                	jmp    f0105ff6 <vprintfmt+0x122>$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	8b 00                	mov    (%eax),%eax$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	eb 2a                	jmp    f0105ff6 <vprintfmt+0x122>$/;"	l
f0105fcc	obj/kern/kernel.asm	/^f0105fcc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	85 c0                	test   %eax,%eax$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	0f 49 d0             	cmovns %eax,%edx$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	e9 68 ff ff ff       	jmp    f0105f4c <vprintfmt+0x78>$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105fe7	obj/kern/kernel.asm	/^f0105fe7:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	e9 59 ff ff ff       	jmp    f0105f4c <vprintfmt+0x78>$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	0f 89 4c ff ff ff    	jns    f0105f4c <vprintfmt+0x78>$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	e9 3a ff ff ff       	jmp    f0105f4c <vprintfmt+0x78>$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	e9 2e ff ff ff       	jmp    f0105f4c <vprintfmt+0x78>$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	53                   	push   %ebx$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	ff 30                	pushl  (%eax)$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	ff d7                	call   *%edi$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	e9 b1 fe ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f0106037	obj/kern/kernel.asm	/^f0106037:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	8b 00                	mov    (%eax),%eax$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	99                   	cltd   $/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	31 d0                	xor    %edx,%eax$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	29 d0                	sub    %edx,%eax$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	83 f8 12             	cmp    $0x12,%eax$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	7f 0b                	jg     f0106057 <vprintfmt+0x183>$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	8b 14 85 c0 99 10 f0 	mov    -0xfef6640(,%eax,4),%edx$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	85 d2                	test   %edx,%edx$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	75 15                	jne    f010606c <vprintfmt+0x198>$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	50                   	push   %eax$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	68 96 96 10 f0       	push   $0xf0109696$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	53                   	push   %ebx$/;"	l
f010605e	obj/kern/kernel.asm	/^f010605e:	57                   	push   %edi$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	e8 53 fe ff ff       	call   f0105eb7 <printfmt>$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	e9 7c fe ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	52                   	push   %edx$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	68 0d 8d 10 f0       	push   $0xf0108d0d$/;"	l
f0106072	obj/kern/kernel.asm	/^f0106072:	53                   	push   %ebx$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	57                   	push   %edi$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	e8 3e fe ff ff       	call   f0105eb7 <printfmt>$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	83 c4 10             	add    $0x10,%esp$/;"	l
f010607c	obj/kern/kernel.asm	/^f010607c:	e9 67 fe ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	8b 00                	mov    (%eax),%eax$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	85 c0                	test   %eax,%eax$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	b9 8f 96 10 f0       	mov    $0xf010968f,%ecx$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	0f 45 c8             	cmovne %eax,%ecx$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	7e 06                	jle    f01060a5 <vprintfmt+0x1d1>$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	80 7d e3 2d          	cmpb   $0x2d,-0x1d(%ebp)$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	75 19                	jne    f01060be <vprintfmt+0x1ea>$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	0f be d0             	movsbl %al,%edx$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	85 d2                	test   %edx,%edx$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	0f 85 9f 00 00 00    	jne    f0106158 <vprintfmt+0x284>$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	e9 8c 00 00 00       	jmp    f010614a <vprintfmt+0x276>$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	e8 3b 04 00 00       	call   f0106507 <strnlen>$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	29 45 e4             	sub    %eax,-0x1c(%ebp)$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	85 c9                	test   %ecx,%ecx$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	0f 8e a6 02 00 00    	jle    f0106383 <vprintfmt+0x4af>$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	0f be 75 e3          	movsbl -0x1d(%ebp),%esi$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	89 cb                	mov    %ecx,%ebx$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	56                   	push   %esi$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	ff d7                	call   *%edi$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	75 ef                	jne    f01060e6 <vprintfmt+0x212>$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	e9 81 02 00 00       	jmp    f0106383 <vprintfmt+0x4af>$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	74 1b                	je     f0106123 <vprintfmt+0x24f>$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	0f be c0             	movsbl %al,%eax$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	83 e8 20             	sub    $0x20,%eax$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	83 f8 5e             	cmp    $0x5e,%eax$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	76 10                	jbe    f0106123 <vprintfmt+0x24f>$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	6a 3f                	push   $0x3f$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106121	obj/kern/kernel.asm	/^f0106121:	eb 0d                	jmp    f0106130 <vprintfmt+0x25c>$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106126	obj/kern/kernel.asm	/^f0106126:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	52                   	push   %edx$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	0f b6 46 ff          	movzbl -0x1(%esi),%eax$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	0f be d0             	movsbl %al,%edx$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	85 d2                	test   %edx,%edx$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	75 31                	jne    f0106172 <vprintfmt+0x29e>$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f010614d	obj/kern/kernel.asm	/^f010614d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	7f 33                	jg     f0106186 <vprintfmt+0x2b2>$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	e9 90 fd ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010615e	obj/kern/kernel.asm	/^f010615e:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	eb 0c                	jmp    f0106172 <vprintfmt+0x29e>$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	85 db                	test   %ebx,%ebx$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	78 8c                	js     f0106102 <vprintfmt+0x22e>$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	79 87                	jns    f0106102 <vprintfmt+0x22e>$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	eb c4                	jmp    f010614a <vprintfmt+0x276>$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	53                   	push   %ebx$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	6a 20                	push   $0x20$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	ff d7                	call   *%edi$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	75 f0                	jne    f0106186 <vprintfmt+0x2b2>$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	e9 4d fd ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	83 7d cc 01          	cmpl   $0x1,-0x34(%ebp)$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	7e 16                	jle    f01061b7 <vprintfmt+0x2e3>$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01061aa	obj/kern/kernel.asm	/^f01061aa:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	8b 00                	mov    (%eax),%eax$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	eb 34                	jmp    f01061eb <vprintfmt+0x317>$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
f01061bb	obj/kern/kernel.asm	/^f01061bb:	74 18                	je     f01061d5 <vprintfmt+0x301>$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	8b 30                	mov    (%eax),%esi$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	89 f0                	mov    %esi,%eax$/;"	l
f01061cd	obj/kern/kernel.asm	/^f01061cd:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	eb 16                	jmp    f01061eb <vprintfmt+0x317>$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01061de	obj/kern/kernel.asm	/^f01061de:	8b 30                	mov    (%eax),%esi$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	89 f0                	mov    %esi,%eax$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f01061e8	obj/kern/kernel.asm	/^f01061e8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01061f7	obj/kern/kernel.asm	/^f01061f7:	85 d2                	test   %edx,%edx$/;"	l
f01061f9	obj/kern/kernel.asm	/^f01061f9:	79 28                	jns    f0106223 <vprintfmt+0x34f>$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	53                   	push   %ebx$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	6a 2d                	push   $0x2d$/;"	l
f0106201	obj/kern/kernel.asm	/^f0106201:	ff d7                	call   *%edi$/;"	l
f0106203	obj/kern/kernel.asm	/^f0106203:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	f7 d8                	neg    %eax$/;"	l
f010620b	obj/kern/kernel.asm	/^f010620b:	83 d2 00             	adc    $0x0,%edx$/;"	l
f010620e	obj/kern/kernel.asm	/^f010620e:	f7 da                	neg    %edx$/;"	l
f0106210	obj/kern/kernel.asm	/^f0106210:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0106216	obj/kern/kernel.asm	/^f0106216:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106219	obj/kern/kernel.asm	/^f0106219:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	e9 b2 00 00 00       	jmp    f01062d5 <vprintfmt+0x401>$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	85 c9                	test   %ecx,%ecx$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	0f 84 a5 00 00 00    	je     f01062d5 <vprintfmt+0x401>$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	53                   	push   %ebx$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	6a 2b                	push   $0x2b$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	ff d7                	call   *%edi$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	83 c4 10             	add    $0x10,%esp$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	e9 90 00 00 00       	jmp    f01062d5 <vprintfmt+0x401>$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	85 c9                	test   %ecx,%ecx$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	74 0b                	je     f0106254 <vprintfmt+0x380>$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	53                   	push   %ebx$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	6a 2b                	push   $0x2b$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	ff d7                	call   *%edi$/;"	l
f0106251	obj/kern/kernel.asm	/^f0106251:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010625a	obj/kern/kernel.asm	/^f010625a:	e8 01 fc ff ff       	call   f0105e60 <getuint>$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0106262	obj/kern/kernel.asm	/^f0106262:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	eb 69                	jmp    f01062d5 <vprintfmt+0x401>$/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	53                   	push   %ebx$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	6a 30                	push   $0x30$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	ff d7                	call   *%edi$/;"	l
f0106274	obj/kern/kernel.asm	/^f0106274:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010627a	obj/kern/kernel.asm	/^f010627a:	e8 e1 fb ff ff       	call   f0105e60 <getuint>$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0106282	obj/kern/kernel.asm	/^f0106282:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0106285	obj/kern/kernel.asm	/^f0106285:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106288	obj/kern/kernel.asm	/^f0106288:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	eb 46                	jmp    f01062d5 <vprintfmt+0x401>$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	53                   	push   %ebx$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	6a 30                	push   $0x30$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	ff d7                	call   *%edi$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	83 c4 08             	add    $0x8,%esp$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	53                   	push   %ebx$/;"	l
f010629b	obj/kern/kernel.asm	/^f010629b:	6a 78                	push   $0x78$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	ff d7                	call   *%edi$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	8b 00                	mov    (%eax),%eax$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01062b8	obj/kern/kernel.asm	/^f01062b8:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	eb 16                	jmp    f01062d5 <vprintfmt+0x401>$/;"	l
f01062bf	obj/kern/kernel.asm	/^f01062bf:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f01062c2	obj/kern/kernel.asm	/^f01062c2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	e8 96 fb ff ff       	call   f0105e60 <getuint>$/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	0f be 75 e3          	movsbl -0x1d(%ebp),%esi$/;"	l
f01062dc	obj/kern/kernel.asm	/^f01062dc:	56                   	push   %esi$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01062e0	obj/kern/kernel.asm	/^f01062e0:	50                   	push   %eax$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	89 da                	mov    %ebx,%edx$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	89 f8                	mov    %edi,%eax$/;"	l
f01062eb	obj/kern/kernel.asm	/^f01062eb:	e8 55 f9 ff ff       	call   f0105c45 <printnum>$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	83 c4 20             	add    $0x20,%esp$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	e9 f0 fb ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f01062f8	obj/kern/kernel.asm	/^f01062f8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	8b 30                	mov    (%eax),%esi$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	85 f6                	test   %esi,%esi$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	75 1a                	jne    f0106321 <vprintfmt+0x44d>$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	68 b4 97 10 f0       	push   $0xf01097b4$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	68 0d 8d 10 f0       	push   $0xf0108d0d$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	e8 cf db ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106319	obj/kern/kernel.asm	/^f0106319:	83 c4 10             	add    $0x10,%esp$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	e9 c7 fb ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	84 c0                	test   %al,%al$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	79 1f                	jns    f0106347 <vprintfmt+0x473>$/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	68 ec 97 10 f0       	push   $0xf01097ec$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	68 0d 8d 10 f0       	push   $0xf0108d0d$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	e8 ae db ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	88 06                	mov    %al,(%esi)$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106342	obj/kern/kernel.asm	/^f0106342:	e9 a1 fb ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f0106347	obj/kern/kernel.asm	/^f0106347:	88 06                	mov    %al,(%esi)$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	e9 9a fb ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	53                   	push   %ebx$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	52                   	push   %edx$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	ff d7                	call   *%edi$/;"	l
f0106355	obj/kern/kernel.asm	/^f0106355:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	e9 8b fb ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	53                   	push   %ebx$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	6a 25                	push   $0x25$/;"	l
f0106363	obj/kern/kernel.asm	/^f0106363:	ff d7                	call   *%edi$/;"	l
f0106365	obj/kern/kernel.asm	/^f0106365:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	0f 84 73 fb ff ff    	je     f0105ee5 <vprintfmt+0x11>$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0106379	obj/kern/kernel.asm	/^f0106379:	75 f7                	jne    f0106372 <vprintfmt+0x49e>$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	89 75 10             	mov    %esi,0x10(%ebp)$/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e:	e9 65 fb ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	0f be d0             	movsbl %al,%edx$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	85 d2                	test   %edx,%edx$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	0f 85 cf fd ff ff    	jne    f0106166 <vprintfmt+0x292>$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	e9 4c fb ff ff       	jmp    f0105ee8 <vprintfmt+0x14>$/;"	l
f010639c	obj/kern/kernel.asm	/^f010639c:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f:	5b                   	pop    %ebx$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	5e                   	pop    %esi$/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	5f                   	pop    %edi$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	5d                   	pop    %ebp$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	c3                   	ret    $/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4 <vsnprintf>:$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	55                   	push   %ebp$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	85 c0                	test   %eax,%eax$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	74 26                	je     f01063eb <vsnprintf+0x47>$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	85 d2                	test   %edx,%edx$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	7e 22                	jle    f01063eb <vsnprintf+0x47>$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01063cf	obj/kern/kernel.asm	/^f01063cf:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	50                   	push   %eax$/;"	l
f01063d3	obj/kern/kernel.asm	/^f01063d3:	68 9a 5e 10 f0       	push   $0xf0105e9a$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	e8 f7 fa ff ff       	call   f0105ed4 <vprintfmt>$/;"	l
f01063dd	obj/kern/kernel.asm	/^f01063dd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	eb 05                	jmp    f01063f0 <vsnprintf+0x4c>$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	c9                   	leave  $/;"	l
f01063f1	obj/kern/kernel.asm	/^f01063f1:	c3                   	ret    $/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2 <snprintf>:$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	55                   	push   %ebp$/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	50                   	push   %eax$/;"	l
f01063fc	obj/kern/kernel.asm	/^f01063fc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106405	obj/kern/kernel.asm	/^f0106405:	e8 9a ff ff ff       	call   f01063a4 <vsnprintf>$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	c9                   	leave  $/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b:	c3                   	ret    $/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c <readline>:$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	55                   	push   %ebp$/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	89 e5                	mov    %esp,%ebp$/;"	l
f010640f	obj/kern/kernel.asm	/^f010640f:	57                   	push   %edi$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	56                   	push   %esi$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	53                   	push   %ebx$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106418	obj/kern/kernel.asm	/^f0106418:	85 c0                	test   %eax,%eax$/;"	l
f010641a	obj/kern/kernel.asm	/^f010641a:	74 11                	je     f010642d <readline+0x21>$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	50                   	push   %eax$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	68 0d 8d 10 f0       	push   $0xf0108d0d$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	e8 be da ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010642d	obj/kern/kernel.asm	/^f010642d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	6a 00                	push   $0x0$/;"	l
f0106432	obj/kern/kernel.asm	/^f0106432:	e8 c5 a4 ff ff       	call   f01008fc <iscons>$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	89 c7                	mov    %eax,%edi$/;"	l
f0106439	obj/kern/kernel.asm	/^f0106439:	83 c4 10             	add    $0x10,%esp$/;"	l
f010643c	obj/kern/kernel.asm	/^f010643c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441:	e8 a5 a4 ff ff       	call   f01008eb <getchar>$/;"	l
f0106446	obj/kern/kernel.asm	/^f0106446:	89 c3                	mov    %eax,%ebx$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	85 c0                	test   %eax,%eax$/;"	l
f010644a	obj/kern/kernel.asm	/^f010644a:	79 18                	jns    f0106464 <readline+0x58>$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	50                   	push   %eax$/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	68 0c 9a 10 f0       	push   $0xf0109a0c$/;"	l
f0106455	obj/kern/kernel.asm	/^f0106455:	e8 8e da ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010645a	obj/kern/kernel.asm	/^f010645a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106462	obj/kern/kernel.asm	/^f0106462:	eb 79                	jmp    f01064dd <readline+0xd1>$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	0f 94 c2             	sete   %dl$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	0f 94 c0             	sete   %al$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	08 c2                	or     %al,%dl$/;"	l
f0106472	obj/kern/kernel.asm	/^f0106472:	74 1a                	je     f010648e <readline+0x82>$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	85 f6                	test   %esi,%esi$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	7e 16                	jle    f010648e <readline+0x82>$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	85 ff                	test   %edi,%edi$/;"	l
f010647a	obj/kern/kernel.asm	/^f010647a:	74 0d                	je     f0106489 <readline+0x7d>$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010647f	obj/kern/kernel.asm	/^f010647f:	6a 08                	push   $0x8$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	e8 55 a4 ff ff       	call   f01008db <cputchar>$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	eb b3                	jmp    f0106441 <readline+0x35>$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	7e 23                	jle    f01064b6 <readline+0xaa>$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	7f 1b                	jg     f01064b6 <readline+0xaa>$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	85 ff                	test   %edi,%edi$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	74 0c                	je     f01064ab <readline+0x9f>$/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01064a2	obj/kern/kernel.asm	/^f01064a2:	53                   	push   %ebx$/;"	l
f01064a3	obj/kern/kernel.asm	/^f01064a3:	e8 33 a4 ff ff       	call   f01008db <cputchar>$/;"	l
f01064a8	obj/kern/kernel.asm	/^f01064a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	88 9e a0 0a 28 f0    	mov    %bl,-0xfd7f560(%esi)$/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	eb 8b                	jmp    f0106441 <readline+0x35>$/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01064b9	obj/kern/kernel.asm	/^f01064b9:	74 05                	je     f01064c0 <readline+0xb4>$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01064be	obj/kern/kernel.asm	/^f01064be:	75 81                	jne    f0106441 <readline+0x35>$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	85 ff                	test   %edi,%edi$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	74 0d                	je     f01064d1 <readline+0xc5>$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	6a 0a                	push   $0xa$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	e8 0d a4 ff ff       	call   f01008db <cputchar>$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	c6 86 a0 0a 28 f0 00 	movb   $0x0,-0xfd7f560(%esi)$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	b8 a0 0a 28 f0       	mov    $0xf0280aa0,%eax$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	5b                   	pop    %ebx$/;"	l
f01064e1	obj/kern/kernel.asm	/^f01064e1:	5e                   	pop    %esi$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	5f                   	pop    %edi$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	5d                   	pop    %ebp$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	c3                   	ret    $/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5 <strlen>:$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	55                   	push   %ebp$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01064ee	obj/kern/kernel.asm	/^f01064ee:	74 10                	je     f0106500 <strlen+0x1b>$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	75 f7                	jne    f01064f5 <strlen+0x10>$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	eb 05                	jmp    f0106505 <strlen+0x20>$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	5d                   	pop    %ebp$/;"	l
f0106506	obj/kern/kernel.asm	/^f0106506:	c3                   	ret    $/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507 <strnlen>:$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	55                   	push   %ebp$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	89 e5                	mov    %esp,%ebp$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	53                   	push   %ebx$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	85 c9                	test   %ecx,%ecx$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	74 1c                	je     f0106531 <strnlen+0x2a>$/;"	l
f0106515	obj/kern/kernel.asm	/^f0106515:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0106518	obj/kern/kernel.asm	/^f0106518:	74 1e                	je     f0106538 <strnlen+0x31>$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010651f	obj/kern/kernel.asm	/^f010651f:	89 d0                	mov    %edx,%eax$/;"	l
f0106521	obj/kern/kernel.asm	/^f0106521:	39 ca                	cmp    %ecx,%edx$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	74 18                	je     f010653d <strnlen+0x36>$/;"	l
f0106525	obj/kern/kernel.asm	/^f0106525:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	80 7c 13 ff 00       	cmpb   $0x0,-0x1(%ebx,%edx,1)$/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	75 f0                	jne    f010651f <strnlen+0x18>$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	eb 0c                	jmp    f010653d <strnlen+0x36>$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	eb 05                	jmp    f010653d <strnlen+0x36>$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	5b                   	pop    %ebx$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	5d                   	pop    %ebp$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	c3                   	ret    $/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540 <strcpy>:$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	55                   	push   %ebp$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	89 e5                	mov    %esp,%ebp$/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	53                   	push   %ebx$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	89 c2                	mov    %eax,%edx$/;"	l
f010654c	obj/kern/kernel.asm	/^f010654c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106552	obj/kern/kernel.asm	/^f0106552:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	84 db                	test   %bl,%bl$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	75 ef                	jne    f010654c <strcpy+0xc>$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	5b                   	pop    %ebx$/;"	l
f010655e	obj/kern/kernel.asm	/^f010655e:	5d                   	pop    %ebp$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	c3                   	ret    $/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560 <strcat>:$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560:	55                   	push   %ebp$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	89 e5                	mov    %esp,%ebp$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	53                   	push   %ebx$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	53                   	push   %ebx$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	e8 78 ff ff ff       	call   f01064e5 <strlen>$/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	01 d8                	add    %ebx,%eax$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	50                   	push   %eax$/;"	l
f0106576	obj/kern/kernel.asm	/^f0106576:	e8 c5 ff ff ff       	call   f0106540 <strcpy>$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	89 d8                	mov    %ebx,%eax$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0106580	obj/kern/kernel.asm	/^f0106580:	c9                   	leave  $/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	c3                   	ret    $/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582 <strncpy>:$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582:	55                   	push   %ebp$/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	89 e5                	mov    %esp,%ebp$/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	56                   	push   %esi$/;"	l
f0106586	obj/kern/kernel.asm	/^f0106586:	53                   	push   %ebx$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	85 db                	test   %ebx,%ebx$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	74 17                	je     f01065ab <strncpy+0x29>$/;"	l
f0106594	obj/kern/kernel.asm	/^f0106594:	01 f3                	add    %esi,%ebx$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	89 f1                	mov    %esi,%ecx$/;"	l
f0106598	obj/kern/kernel.asm	/^f0106598:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f010659e	obj/kern/kernel.asm	/^f010659e:	88 41 ff             	mov    %al,-0x1(%ecx)$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01065a9	obj/kern/kernel.asm	/^f01065a9:	75 ed                	jne    f0106598 <strncpy+0x16>$/;"	l
f01065ab	obj/kern/kernel.asm	/^f01065ab:	89 f0                	mov    %esi,%eax$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	5b                   	pop    %ebx$/;"	l
f01065ae	obj/kern/kernel.asm	/^f01065ae:	5e                   	pop    %esi$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	5d                   	pop    %ebp$/;"	l
f01065b0	obj/kern/kernel.asm	/^f01065b0:	c3                   	ret    $/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1 <strlcpy>:$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	55                   	push   %ebp$/;"	l
f01065b2	obj/kern/kernel.asm	/^f01065b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01065b4	obj/kern/kernel.asm	/^f01065b4:	56                   	push   %esi$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	53                   	push   %ebx$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	89 f0                	mov    %esi,%eax$/;"	l
f01065c1	obj/kern/kernel.asm	/^f01065c1:	85 d2                	test   %edx,%edx$/;"	l
f01065c3	obj/kern/kernel.asm	/^f01065c3:	74 35                	je     f01065fa <strlcpy+0x49>$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	89 d0                	mov    %edx,%eax$/;"	l
f01065c7	obj/kern/kernel.asm	/^f01065c7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	74 25                	je     f01065f1 <strlcpy+0x40>$/;"	l
f01065cc	obj/kern/kernel.asm	/^f01065cc:	0f b6 0b             	movzbl (%ebx),%ecx$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	84 c9                	test   %cl,%cl$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	74 22                	je     f01065f5 <strlcpy+0x44>$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	8d 53 01             	lea    0x1(%ebx),%edx$/;"	l
f01065d6	obj/kern/kernel.asm	/^f01065d6:	01 c3                	add    %eax,%ebx$/;"	l
f01065d8	obj/kern/kernel.asm	/^f01065d8:	89 f0                	mov    %esi,%eax$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	83 c0 01             	add    $0x1,%eax$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f01065e0	obj/kern/kernel.asm	/^f01065e0:	39 da                	cmp    %ebx,%edx$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	74 13                	je     f01065f7 <strlcpy+0x46>$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	0f b6 4a ff          	movzbl -0x1(%edx),%ecx$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	84 c9                	test   %cl,%cl$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	75 eb                	jne    f01065da <strlcpy+0x29>$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	eb 06                	jmp    f01065f7 <strlcpy+0x46>$/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	89 f0                	mov    %esi,%eax$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	eb 02                	jmp    f01065f7 <strlcpy+0x46>$/;"	l
f01065f5	obj/kern/kernel.asm	/^f01065f5:	89 f0                	mov    %esi,%eax$/;"	l
f01065f7	obj/kern/kernel.asm	/^f01065f7:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01065fa	obj/kern/kernel.asm	/^f01065fa:	29 f0                	sub    %esi,%eax$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	5b                   	pop    %ebx$/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	5e                   	pop    %esi$/;"	l
f01065fe	obj/kern/kernel.asm	/^f01065fe:	5d                   	pop    %ebp$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	c3                   	ret    $/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600 <strcmp>:$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	55                   	push   %ebp$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	89 e5                	mov    %esp,%ebp$/;"	l
f0106603	obj/kern/kernel.asm	/^f0106603:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106609	obj/kern/kernel.asm	/^f0106609:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	84 c0                	test   %al,%al$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	74 15                	je     f0106625 <strcmp+0x25>$/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610:	3a 02                	cmp    (%edx),%al$/;"	l
f0106612	obj/kern/kernel.asm	/^f0106612:	75 11                	jne    f0106625 <strcmp+0x25>$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106617	obj/kern/kernel.asm	/^f0106617:	83 c2 01             	add    $0x1,%edx$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	84 c0                	test   %al,%al$/;"	l
f010661f	obj/kern/kernel.asm	/^f010661f:	74 04                	je     f0106625 <strcmp+0x25>$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	3a 02                	cmp    (%edx),%al$/;"	l
f0106623	obj/kern/kernel.asm	/^f0106623:	74 ef                	je     f0106614 <strcmp+0x14>$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010662b	obj/kern/kernel.asm	/^f010662b:	29 d0                	sub    %edx,%eax$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	5d                   	pop    %ebp$/;"	l
f010662e	obj/kern/kernel.asm	/^f010662e:	c3                   	ret    $/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f <strncmp>:$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	55                   	push   %ebp$/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	89 e5                	mov    %esp,%ebp$/;"	l
f0106632	obj/kern/kernel.asm	/^f0106632:	56                   	push   %esi$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	53                   	push   %ebx$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106637	obj/kern/kernel.asm	/^f0106637:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	85 f6                	test   %esi,%esi$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	74 29                	je     f010666a <strncmp+0x3b>$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106644	obj/kern/kernel.asm	/^f0106644:	84 c0                	test   %al,%al$/;"	l
f0106646	obj/kern/kernel.asm	/^f0106646:	74 30                	je     f0106678 <strncmp+0x49>$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	3a 02                	cmp    (%edx),%al$/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	75 2c                	jne    f0106678 <strncmp+0x49>$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f010664f	obj/kern/kernel.asm	/^f010664f:	01 de                	add    %ebx,%esi$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	89 c3                	mov    %eax,%ebx$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106656	obj/kern/kernel.asm	/^f0106656:	39 c6                	cmp    %eax,%esi$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	74 17                	je     f0106671 <strncmp+0x42>$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f010665d	obj/kern/kernel.asm	/^f010665d:	84 c9                	test   %cl,%cl$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	74 17                	je     f0106678 <strncmp+0x49>$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106664	obj/kern/kernel.asm	/^f0106664:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	74 e9                	je     f0106651 <strncmp+0x22>$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	eb 0e                	jmp    f0106678 <strncmp+0x49>$/;"	l
f010666a	obj/kern/kernel.asm	/^f010666a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	eb 0f                	jmp    f0106680 <strncmp+0x51>$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	eb 08                	jmp    f0106680 <strncmp+0x51>$/;"	l
f0106678	obj/kern/kernel.asm	/^f0106678:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010667b	obj/kern/kernel.asm	/^f010667b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010667e	obj/kern/kernel.asm	/^f010667e:	29 d0                	sub    %edx,%eax$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	5b                   	pop    %ebx$/;"	l
f0106681	obj/kern/kernel.asm	/^f0106681:	5e                   	pop    %esi$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	5d                   	pop    %ebp$/;"	l
f0106683	obj/kern/kernel.asm	/^f0106683:	c3                   	ret    $/;"	l
f0106684	obj/kern/kernel.asm	/^f0106684 <strchr>:$/;"	l
f0106684	obj/kern/kernel.asm	/^f0106684:	55                   	push   %ebp$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	89 e5                	mov    %esp,%ebp$/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	53                   	push   %ebx$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010668e	obj/kern/kernel.asm	/^f010668e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	84 d2                	test   %dl,%dl$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	74 1d                	je     f01066b2 <strchr+0x2e>$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	38 d3                	cmp    %dl,%bl$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	75 06                	jne    f01066a1 <strchr+0x1d>$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	eb 1a                	jmp    f01066b7 <strchr+0x33>$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	38 ca                	cmp    %cl,%dl$/;"	l
f010669f	obj/kern/kernel.asm	/^f010669f:	74 16                	je     f01066b7 <strchr+0x33>$/;"	l
f01066a1	obj/kern/kernel.asm	/^f01066a1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	84 d2                	test   %dl,%dl$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	75 f2                	jne    f010669d <strchr+0x19>$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	eb 05                	jmp    f01066b7 <strchr+0x33>$/;"	l
f01066b2	obj/kern/kernel.asm	/^f01066b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066b7	obj/kern/kernel.asm	/^f01066b7:	5b                   	pop    %ebx$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	5d                   	pop    %ebp$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	c3                   	ret    $/;"	l
f01066ba	obj/kern/kernel.asm	/^f01066ba <strfind>:$/;"	l
f01066ba	obj/kern/kernel.asm	/^f01066ba:	55                   	push   %ebp$/;"	l
f01066bb	obj/kern/kernel.asm	/^f01066bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	53                   	push   %ebx$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	0f b6 18             	movzbl (%eax),%ebx$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	38 d3                	cmp    %dl,%bl$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	74 14                	je     f01066df <strfind+0x25>$/;"	l
f01066cb	obj/kern/kernel.asm	/^f01066cb:	89 d1                	mov    %edx,%ecx$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	84 db                	test   %bl,%bl$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	74 0e                	je     f01066df <strfind+0x25>$/;"	l
f01066d1	obj/kern/kernel.asm	/^f01066d1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01066d7	obj/kern/kernel.asm	/^f01066d7:	38 ca                	cmp    %cl,%dl$/;"	l
f01066d9	obj/kern/kernel.asm	/^f01066d9:	74 04                	je     f01066df <strfind+0x25>$/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	84 d2                	test   %dl,%dl$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	75 f2                	jne    f01066d1 <strfind+0x17>$/;"	l
f01066df	obj/kern/kernel.asm	/^f01066df:	5b                   	pop    %ebx$/;"	l
f01066e0	obj/kern/kernel.asm	/^f01066e0:	5d                   	pop    %ebp$/;"	l
f01066e1	obj/kern/kernel.asm	/^f01066e1:	c3                   	ret    $/;"	l
f01066e2	obj/kern/kernel.asm	/^f01066e2 <memset>:$/;"	l
f01066e2	obj/kern/kernel.asm	/^f01066e2:	55                   	push   %ebp$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	57                   	push   %edi$/;"	l
f01066e6	obj/kern/kernel.asm	/^f01066e6:	56                   	push   %esi$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	53                   	push   %ebx$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01066ee	obj/kern/kernel.asm	/^f01066ee:	85 c9                	test   %ecx,%ecx$/;"	l
f01066f0	obj/kern/kernel.asm	/^f01066f0:	74 36                	je     f0106728 <memset+0x46>$/;"	l
f01066f2	obj/kern/kernel.asm	/^f01066f2:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	75 28                	jne    f0106722 <memset+0x40>$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	75 23                	jne    f0106722 <memset+0x40>$/;"	l
f01066ff	obj/kern/kernel.asm	/^f01066ff:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	89 d3                	mov    %edx,%ebx$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	89 d6                	mov    %edx,%esi$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	89 d0                	mov    %edx,%eax$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	09 f0                	or     %esi,%eax$/;"	l
f0106714	obj/kern/kernel.asm	/^f0106714:	09 c2                	or     %eax,%edx$/;"	l
f0106716	obj/kern/kernel.asm	/^f0106716:	89 d8                	mov    %ebx,%eax$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	09 d0                	or     %edx,%eax$/;"	l
f010671a	obj/kern/kernel.asm	/^f010671a:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	fc                   	cld    $/;"	l
f010671e	obj/kern/kernel.asm	/^f010671e:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	eb 06                	jmp    f0106728 <memset+0x46>$/;"	l
f0106722	obj/kern/kernel.asm	/^f0106722:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106725	obj/kern/kernel.asm	/^f0106725:	fc                   	cld    $/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	89 f8                	mov    %edi,%eax$/;"	l
f010672a	obj/kern/kernel.asm	/^f010672a:	5b                   	pop    %ebx$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	5e                   	pop    %esi$/;"	l
f010672c	obj/kern/kernel.asm	/^f010672c:	5f                   	pop    %edi$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	5d                   	pop    %ebp$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	c3                   	ret    $/;"	l
f010672f	obj/kern/kernel.asm	/^f010672f <memmove>:$/;"	l
f010672f	obj/kern/kernel.asm	/^f010672f:	55                   	push   %ebp$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	89 e5                	mov    %esp,%ebp$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	57                   	push   %edi$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	56                   	push   %esi$/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106737	obj/kern/kernel.asm	/^f0106737:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010673d	obj/kern/kernel.asm	/^f010673d:	39 c6                	cmp    %eax,%esi$/;"	l
f010673f	obj/kern/kernel.asm	/^f010673f:	73 35                	jae    f0106776 <memmove+0x47>$/;"	l
f0106741	obj/kern/kernel.asm	/^f0106741:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	39 d0                	cmp    %edx,%eax$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	73 2e                	jae    f0106776 <memmove+0x47>$/;"	l
f0106748	obj/kern/kernel.asm	/^f0106748:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	89 d6                	mov    %edx,%esi$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	09 fe                	or     %edi,%esi$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0106755	obj/kern/kernel.asm	/^f0106755:	75 13                	jne    f010676a <memmove+0x3b>$/;"	l
f0106757	obj/kern/kernel.asm	/^f0106757:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	75 0e                	jne    f010676a <memmove+0x3b>$/;"	l
f010675c	obj/kern/kernel.asm	/^f010675c:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106762	obj/kern/kernel.asm	/^f0106762:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106765	obj/kern/kernel.asm	/^f0106765:	fd                   	std    $/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	eb 09                	jmp    f0106773 <memmove+0x44>$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770:	fd                   	std    $/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	fc                   	cld    $/;"	l
f0106774	obj/kern/kernel.asm	/^f0106774:	eb 1d                	jmp    f0106793 <memmove+0x64>$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	89 f2                	mov    %esi,%edx$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	09 c2                	or     %eax,%edx$/;"	l
f010677a	obj/kern/kernel.asm	/^f010677a:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	75 0f                	jne    f010678e <memmove+0x5f>$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	75 0a                	jne    f010678e <memmove+0x5f>$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	89 c7                	mov    %eax,%edi$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	fc                   	cld    $/;"	l
f010678a	obj/kern/kernel.asm	/^f010678a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	eb 05                	jmp    f0106793 <memmove+0x64>$/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	89 c7                	mov    %eax,%edi$/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790:	fc                   	cld    $/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106793	obj/kern/kernel.asm	/^f0106793:	5e                   	pop    %esi$/;"	l
f0106794	obj/kern/kernel.asm	/^f0106794:	5f                   	pop    %edi$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	5d                   	pop    %ebp$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	c3                   	ret    $/;"	l
f0106797	obj/kern/kernel.asm	/^f0106797 <memcpy>:$/;"	l
f0106797	obj/kern/kernel.asm	/^f0106797:	55                   	push   %ebp$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	89 e5                	mov    %esp,%ebp$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01067a0	obj/kern/kernel.asm	/^f01067a0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01067a3	obj/kern/kernel.asm	/^f01067a3:	e8 87 ff ff ff       	call   f010672f <memmove>$/;"	l
f01067a8	obj/kern/kernel.asm	/^f01067a8:	c9                   	leave  $/;"	l
f01067a9	obj/kern/kernel.asm	/^f01067a9:	c3                   	ret    $/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa <memcmp>:$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	55                   	push   %ebp$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01067ad	obj/kern/kernel.asm	/^f01067ad:	57                   	push   %edi$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	56                   	push   %esi$/;"	l
f01067af	obj/kern/kernel.asm	/^f01067af:	53                   	push   %ebx$/;"	l
f01067b0	obj/kern/kernel.asm	/^f01067b0:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	85 c0                	test   %eax,%eax$/;"	l
f01067bb	obj/kern/kernel.asm	/^f01067bb:	74 39                	je     f01067f6 <memcmp+0x4c>$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	8d 78 ff             	lea    -0x1(%eax),%edi$/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f01067c3	obj/kern/kernel.asm	/^f01067c3:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	38 ca                	cmp    %cl,%dl$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	75 17                	jne    f01067e1 <memcmp+0x37>$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	eb 1a                	jmp    f01067eb <memcmp+0x41>$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	0f b6 54 03 01       	movzbl 0x1(%ebx,%eax,1),%edx$/;"	l
f01067d6	obj/kern/kernel.asm	/^f01067d6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	0f b6 0c 06          	movzbl (%esi,%eax,1),%ecx$/;"	l
f01067dd	obj/kern/kernel.asm	/^f01067dd:	38 ca                	cmp    %cl,%dl$/;"	l
f01067df	obj/kern/kernel.asm	/^f01067df:	74 0a                	je     f01067eb <memcmp+0x41>$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01067e7	obj/kern/kernel.asm	/^f01067e7:	29 c8                	sub    %ecx,%eax$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	eb 10                	jmp    f01067fb <memcmp+0x51>$/;"	l
f01067eb	obj/kern/kernel.asm	/^f01067eb:	39 f8                	cmp    %edi,%eax$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	75 e2                	jne    f01067d1 <memcmp+0x27>$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067f4	obj/kern/kernel.asm	/^f01067f4:	eb 05                	jmp    f01067fb <memcmp+0x51>$/;"	l
f01067f6	obj/kern/kernel.asm	/^f01067f6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	5b                   	pop    %ebx$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	5e                   	pop    %esi$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	5f                   	pop    %edi$/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	5d                   	pop    %ebp$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	c3                   	ret    $/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800 <memfind>:$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	55                   	push   %ebp$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	89 e5                	mov    %esp,%ebp$/;"	l
f0106803	obj/kern/kernel.asm	/^f0106803:	53                   	push   %ebx$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	89 d0                	mov    %edx,%eax$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	39 c2                	cmp    %eax,%edx$/;"	l
f0106811	obj/kern/kernel.asm	/^f0106811:	73 15                	jae    f0106828 <memfind+0x28>$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	89 d9                	mov    %ebx,%ecx$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	38 1a                	cmp    %bl,(%edx)$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	75 06                	jne    f010681f <memfind+0x1f>$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	eb 11                	jmp    f010682c <memfind+0x2c>$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	38 0a                	cmp    %cl,(%edx)$/;"	l
f010681d	obj/kern/kernel.asm	/^f010681d:	74 11                	je     f0106830 <memfind+0x30>$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106822	obj/kern/kernel.asm	/^f0106822:	39 d0                	cmp    %edx,%eax$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	75 f5                	jne    f010681b <memfind+0x1b>$/;"	l
f0106826	obj/kern/kernel.asm	/^f0106826:	eb 0a                	jmp    f0106832 <memfind+0x32>$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	89 d0                	mov    %edx,%eax$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	eb 06                	jmp    f0106832 <memfind+0x32>$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	89 d0                	mov    %edx,%eax$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	eb 02                	jmp    f0106832 <memfind+0x32>$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	89 d0                	mov    %edx,%eax$/;"	l
f0106832	obj/kern/kernel.asm	/^f0106832:	5b                   	pop    %ebx$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	5d                   	pop    %ebp$/;"	l
f0106834	obj/kern/kernel.asm	/^f0106834:	c3                   	ret    $/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835 <strtol>:$/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835:	55                   	push   %ebp$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	89 e5                	mov    %esp,%ebp$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	57                   	push   %edi$/;"	l
f0106839	obj/kern/kernel.asm	/^f0106839:	56                   	push   %esi$/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a:	53                   	push   %ebx$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010683e	obj/kern/kernel.asm	/^f010683e:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106841	obj/kern/kernel.asm	/^f0106841:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106844	obj/kern/kernel.asm	/^f0106844:	3c 20                	cmp    $0x20,%al$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	74 04                	je     f010684c <strtol+0x17>$/;"	l
f0106848	obj/kern/kernel.asm	/^f0106848:	3c 09                	cmp    $0x9,%al$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	75 0e                	jne    f010685a <strtol+0x25>$/;"	l
f010684c	obj/kern/kernel.asm	/^f010684c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010684f	obj/kern/kernel.asm	/^f010684f:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106852	obj/kern/kernel.asm	/^f0106852:	3c 20                	cmp    $0x20,%al$/;"	l
f0106854	obj/kern/kernel.asm	/^f0106854:	74 f6                	je     f010684c <strtol+0x17>$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	3c 09                	cmp    $0x9,%al$/;"	l
f0106858	obj/kern/kernel.asm	/^f0106858:	74 f2                	je     f010684c <strtol+0x17>$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	3c 2b                	cmp    $0x2b,%al$/;"	l
f010685c	obj/kern/kernel.asm	/^f010685c:	75 0a                	jne    f0106868 <strtol+0x33>$/;"	l
f010685e	obj/kern/kernel.asm	/^f010685e:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106861	obj/kern/kernel.asm	/^f0106861:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106866	obj/kern/kernel.asm	/^f0106866:	eb 11                	jmp    f0106879 <strtol+0x44>$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010686f	obj/kern/kernel.asm	/^f010686f:	75 08                	jne    f0106879 <strtol+0x44>$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0106879	obj/kern/kernel.asm	/^f0106879:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebx$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	75 15                	jne    f0106896 <strtol+0x61>$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	75 10                	jne    f0106896 <strtol+0x61>$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	75 7c                	jne    f0106908 <strtol+0xd3>$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	83 c1 02             	add    $0x2,%ecx$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106894	obj/kern/kernel.asm	/^f0106894:	eb 16                	jmp    f01068ac <strtol+0x77>$/;"	l
f0106896	obj/kern/kernel.asm	/^f0106896:	85 db                	test   %ebx,%ebx$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	75 12                	jne    f01068ac <strtol+0x77>$/;"	l
f010689a	obj/kern/kernel.asm	/^f010689a:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	80 39 30             	cmpb   $0x30,(%ecx)$/;"	l
f01068a2	obj/kern/kernel.asm	/^f01068a2:	75 08                	jne    f01068ac <strtol+0x77>$/;"	l
f01068a4	obj/kern/kernel.asm	/^f01068a4:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01068b4	obj/kern/kernel.asm	/^f01068b4:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	8d 72 d0             	lea    -0x30(%edx),%esi$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	89 f3                	mov    %esi,%ebx$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	77 08                	ja     f01068c9 <strtol+0x94>$/;"	l
f01068c1	obj/kern/kernel.asm	/^f01068c1:	0f be d2             	movsbl %dl,%edx$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	83 ea 30             	sub    $0x30,%edx$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	eb 22                	jmp    f01068eb <strtol+0xb6>$/;"	l
f01068c9	obj/kern/kernel.asm	/^f01068c9:	8d 72 9f             	lea    -0x61(%edx),%esi$/;"	l
f01068cc	obj/kern/kernel.asm	/^f01068cc:	89 f3                	mov    %esi,%ebx$/;"	l
f01068ce	obj/kern/kernel.asm	/^f01068ce:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	77 08                	ja     f01068db <strtol+0xa6>$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	0f be d2             	movsbl %dl,%edx$/;"	l
f01068d6	obj/kern/kernel.asm	/^f01068d6:	83 ea 57             	sub    $0x57,%edx$/;"	l
f01068d9	obj/kern/kernel.asm	/^f01068d9:	eb 10                	jmp    f01068eb <strtol+0xb6>$/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db:	8d 72 bf             	lea    -0x41(%edx),%esi$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	89 f3                	mov    %esi,%ebx$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01068e3	obj/kern/kernel.asm	/^f01068e3:	77 16                	ja     f01068fb <strtol+0xc6>$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	0f be d2             	movsbl %dl,%edx$/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	83 ea 37             	sub    $0x37,%edx$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	3b 55 10             	cmp    0x10(%ebp),%edx$/;"	l
f01068ee	obj/kern/kernel.asm	/^f01068ee:	7d 0b                	jge    f01068fb <strtol+0xc6>$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f01068f7	obj/kern/kernel.asm	/^f01068f7:	01 d0                	add    %edx,%eax$/;"	l
f01068f9	obj/kern/kernel.asm	/^f01068f9:	eb b9                	jmp    f01068b4 <strtol+0x7f>$/;"	l
f01068fb	obj/kern/kernel.asm	/^f01068fb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	74 0d                	je     f010690e <strtol+0xd9>$/;"	l
f0106901	obj/kern/kernel.asm	/^f0106901:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	89 0e                	mov    %ecx,(%esi)$/;"	l
f0106906	obj/kern/kernel.asm	/^f0106906:	eb 06                	jmp    f010690e <strtol+0xd9>$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	85 db                	test   %ebx,%ebx$/;"	l
f010690a	obj/kern/kernel.asm	/^f010690a:	74 98                	je     f01068a4 <strtol+0x6f>$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	eb 9e                	jmp    f01068ac <strtol+0x77>$/;"	l
f010690e	obj/kern/kernel.asm	/^f010690e:	89 c2                	mov    %eax,%edx$/;"	l
f0106910	obj/kern/kernel.asm	/^f0106910:	f7 da                	neg    %edx$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	85 ff                	test   %edi,%edi$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	5b                   	pop    %ebx$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	5e                   	pop    %esi$/;"	l
f0106919	obj/kern/kernel.asm	/^f0106919:	5f                   	pop    %edi$/;"	l
f010691a	obj/kern/kernel.asm	/^f010691a:	5d                   	pop    %ebp$/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	c3                   	ret    $/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c <mpentry_start>:$/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c:	fa                   	cli    $/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	31 c0                	xor    %eax,%eax$/;"	l
f010691f	obj/kern/kernel.asm	/^f010691f:	8e d8                	mov    %eax,%ds$/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	8e c0                	mov    %eax,%es$/;"	l
f0106923	obj/kern/kernel.asm	/^f0106923:	8e d0                	mov    %eax,%ss$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	74 70                	je     f010699a <mpsearch1+0x3>$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0106931	obj/kern/kernel.asm	/^f0106931:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106934	obj/kern/kernel.asm	/^f0106934:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	08 00                	or     %al,(%eax)$/;"	l
f010693c	obj/kern/kernel.asm	/^f010693c <start32>:$/;"	l
f010693c	obj/kern/kernel.asm	/^f010693c:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	8e d8                	mov    %eax,%ds$/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	8e c0                	mov    %eax,%es$/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944:	8e d0                	mov    %eax,%ss$/;"	l
f0106946	obj/kern/kernel.asm	/^f0106946:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010694a	obj/kern/kernel.asm	/^f010694a:	8e e0                	mov    %eax,%fs$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	8e e8                	mov    %eax,%gs$/;"	l
f010694e	obj/kern/kernel.asm	/^f010694e:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106956	obj/kern/kernel.asm	/^f0106956:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	8b 25 b4 0e 28 f0    	mov    0xf0280eb4,%esp$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	b8 1c 03 10 f0       	mov    $0xf010031c,%eax$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	ff d0                	call   *%eax$/;"	l
f0106973	obj/kern/kernel.asm	/^f0106973 <spin>:$/;"	l
f0106973	obj/kern/kernel.asm	/^f0106973:	eb fe                	jmp    f0106973 <spin>$/;"	l
f0106975	obj/kern/kernel.asm	/^f0106975:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106978	obj/kern/kernel.asm	/^f0106978 <gdt>:$/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980:	ff                   	(bad)  $/;"	l
f0106981	obj/kern/kernel.asm	/^f0106981:	ff 00                	incl   (%eax)$/;"	l
f0106983	obj/kern/kernel.asm	/^f0106983:	00 00                	add    %al,(%eax)$/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	00                   	.byte 0x0$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	92                   	xchg   %eax,%edx$/;"	l
f010698e	obj/kern/kernel.asm	/^f010698e:	cf                   	iret   $/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990 <gdtdesc>:$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	17                   	pop    %ss$/;"	l
f0106991	obj/kern/kernel.asm	/^f0106991:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996 <mpentry_end>:$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	90                   	nop$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997 <mpsearch1>:$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997:	55                   	push   %ebp$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	89 e5                	mov    %esp,%ebp$/;"	l
f010699a	obj/kern/kernel.asm	/^f010699a:	57                   	push   %edi$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	56                   	push   %esi$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	53                   	push   %ebx$/;"	l
f010699d	obj/kern/kernel.asm	/^f010699d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	8b 0d b8 0e 28 f0    	mov    0xf0280eb8,%ecx$/;"	l
f01069a6	obj/kern/kernel.asm	/^f01069a6:	89 c3                	mov    %eax,%ebx$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01069ab	obj/kern/kernel.asm	/^f01069ab:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	72 12                	jb     f01069c1 <mpsearch1+0x2a>$/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	50                   	push   %eax$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	6a 57                	push   $0x57$/;"	l
f01069b7	obj/kern/kernel.asm	/^f01069b7:	68 a9 9b 10 f0       	push   $0xf0109ba9$/;"	l
f01069bc	obj/kern/kernel.asm	/^f01069bc:	e8 7f 96 ff ff       	call   f0100040 <_panic>$/;"	l
f01069c1	obj/kern/kernel.asm	/^f01069c1:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01069c7	obj/kern/kernel.asm	/^f01069c7:	01 d0                	add    %edx,%eax$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	89 c2                	mov    %eax,%edx$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	39 ca                	cmp    %ecx,%edx$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	72 12                	jb     f01069e4 <mpsearch1+0x4d>$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	50                   	push   %eax$/;"	l
f01069d3	obj/kern/kernel.asm	/^f01069d3:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	6a 57                	push   $0x57$/;"	l
f01069da	obj/kern/kernel.asm	/^f01069da:	68 a9 9b 10 f0       	push   $0xf0109ba9$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	e8 5c 96 ff ff       	call   f0100040 <_panic>$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f01069ea	obj/kern/kernel.asm	/^f01069ea:	39 de                	cmp    %ebx,%esi$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	76 3f                	jbe    f0106a2d <mpsearch1+0x96>$/;"	l
f01069ee	obj/kern/kernel.asm	/^f01069ee:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01069f1	obj/kern/kernel.asm	/^f01069f1:	6a 04                	push   $0x4$/;"	l
f01069f3	obj/kern/kernel.asm	/^f01069f3:	68 b9 9b 10 f0       	push   $0xf0109bb9$/;"	l
f01069f8	obj/kern/kernel.asm	/^f01069f8:	53                   	push   %ebx$/;"	l
f01069f9	obj/kern/kernel.asm	/^f01069f9:	e8 ac fd ff ff       	call   f01067aa <memcmp>$/;"	l
f01069fe	obj/kern/kernel.asm	/^f01069fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106a01	obj/kern/kernel.asm	/^f0106a01:	85 c0                	test   %eax,%eax$/;"	l
f0106a03	obj/kern/kernel.asm	/^f0106a03:	75 1a                	jne    f0106a1f <mpsearch1+0x88>$/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	89 d8                	mov    %ebx,%eax$/;"	l
f0106a07	obj/kern/kernel.asm	/^f0106a07:	8d 7b 10             	lea    0x10(%ebx),%edi$/;"	l
f0106a0a	obj/kern/kernel.asm	/^f0106a0a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0106a12	obj/kern/kernel.asm	/^f0106a12:	01 ca                	add    %ecx,%edx$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	39 c7                	cmp    %eax,%edi$/;"	l
f0106a19	obj/kern/kernel.asm	/^f0106a19:	75 f4                	jne    f0106a0f <mpsearch1+0x78>$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	84 d2                	test   %dl,%dl$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	74 15                	je     f0106a34 <mpsearch1+0x9d>$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106a24	obj/kern/kernel.asm	/^f0106a24:	72 c8                	jb     f01069ee <mpsearch1+0x57>$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a2b	obj/kern/kernel.asm	/^f0106a2b:	eb 09                	jmp    f0106a36 <mpsearch1+0x9f>$/;"	l
f0106a2d	obj/kern/kernel.asm	/^f0106a2d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	eb 02                	jmp    f0106a36 <mpsearch1+0x9f>$/;"	l
f0106a34	obj/kern/kernel.asm	/^f0106a34:	89 d8                	mov    %ebx,%eax$/;"	l
f0106a36	obj/kern/kernel.asm	/^f0106a36:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	5b                   	pop    %ebx$/;"	l
f0106a3a	obj/kern/kernel.asm	/^f0106a3a:	5e                   	pop    %esi$/;"	l
f0106a3b	obj/kern/kernel.asm	/^f0106a3b:	5f                   	pop    %edi$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	5d                   	pop    %ebp$/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	c3                   	ret    $/;"	l
f0106a3e	obj/kern/kernel.asm	/^f0106a3e <mp_init>:$/;"	l
f0106a3e	obj/kern/kernel.asm	/^f0106a3e:	55                   	push   %ebp$/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	57                   	push   %edi$/;"	l
f0106a42	obj/kern/kernel.asm	/^f0106a42:	56                   	push   %esi$/;"	l
f0106a43	obj/kern/kernel.asm	/^f0106a43:	53                   	push   %ebx$/;"	l
f0106a44	obj/kern/kernel.asm	/^f0106a44:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106a47	obj/kern/kernel.asm	/^f0106a47:	c7 05 c0 13 28 f0 20 	movl   $0xf0281020,0xf02813c0$/;"	l
f0106a4e	obj/kern/kernel.asm	/^f0106a4e:	10 28 f0 $/;"	l
f0106a51	obj/kern/kernel.asm	/^f0106a51:	83 3d b8 0e 28 f0 00 	cmpl   $0x0,0xf0280eb8$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	75 16                	jne    f0106a70 <mp_init+0x32>$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	68 00 04 00 00       	push   $0x400$/;"	l
f0106a5f	obj/kern/kernel.asm	/^f0106a5f:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0106a64	obj/kern/kernel.asm	/^f0106a64:	6a 6f                	push   $0x6f$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	68 a9 9b 10 f0       	push   $0xf0109ba9$/;"	l
f0106a6b	obj/kern/kernel.asm	/^f0106a6b:	e8 d0 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106a77	obj/kern/kernel.asm	/^f0106a77:	85 c0                	test   %eax,%eax$/;"	l
f0106a79	obj/kern/kernel.asm	/^f0106a79:	74 16                	je     f0106a91 <mp_init+0x53>$/;"	l
f0106a7b	obj/kern/kernel.asm	/^f0106a7b:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106a7e	obj/kern/kernel.asm	/^f0106a7e:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106a83	obj/kern/kernel.asm	/^f0106a83:	e8 0f ff ff ff       	call   f0106997 <mpsearch1>$/;"	l
f0106a88	obj/kern/kernel.asm	/^f0106a88:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	85 c0                	test   %eax,%eax$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	75 3c                	jne    f0106acb <mp_init+0x8d>$/;"	l
f0106a8f	obj/kern/kernel.asm	/^f0106a8f:	eb 20                	jmp    f0106ab1 <mp_init+0x73>$/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106a98	obj/kern/kernel.asm	/^f0106a98:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106aa0	obj/kern/kernel.asm	/^f0106aa0:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106aa5	obj/kern/kernel.asm	/^f0106aa5:	e8 ed fe ff ff       	call   f0106997 <mpsearch1>$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106aad	obj/kern/kernel.asm	/^f0106aad:	85 c0                	test   %eax,%eax$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	75 1a                	jne    f0106acb <mp_init+0x8d>$/;"	l
f0106ab1	obj/kern/kernel.asm	/^f0106ab1:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106ab6	obj/kern/kernel.asm	/^f0106ab6:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106abb	obj/kern/kernel.asm	/^f0106abb:	e8 d7 fe ff ff       	call   f0106997 <mpsearch1>$/;"	l
f0106ac0	obj/kern/kernel.asm	/^f0106ac0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3:	85 c0                	test   %eax,%eax$/;"	l
f0106ac5	obj/kern/kernel.asm	/^f0106ac5:	0f 84 6c 02 00 00    	je     f0106d37 <mp_init+0x2f9>$/;"	l
f0106acb	obj/kern/kernel.asm	/^f0106acb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106ace	obj/kern/kernel.asm	/^f0106ace:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	85 f6                	test   %esi,%esi$/;"	l
f0106ad3	obj/kern/kernel.asm	/^f0106ad3:	74 06                	je     f0106adb <mp_init+0x9d>$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	74 15                	je     f0106af0 <mp_init+0xb2>$/;"	l
f0106adb	obj/kern/kernel.asm	/^f0106adb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106ade	obj/kern/kernel.asm	/^f0106ade:	68 1c 9a 10 f0       	push   $0xf0109a1c$/;"	l
f0106ae3	obj/kern/kernel.asm	/^f0106ae3:	e8 00 d4 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106aeb	obj/kern/kernel.asm	/^f0106aeb:	e9 47 02 00 00       	jmp    f0106d37 <mp_init+0x2f9>$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	89 f0                	mov    %esi,%eax$/;"	l
f0106af2	obj/kern/kernel.asm	/^f0106af2:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106af5	obj/kern/kernel.asm	/^f0106af5:	3b 05 b8 0e 28 f0    	cmp    0xf0280eb8,%eax$/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	72 15                	jb     f0106b12 <mp_init+0xd4>$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	56                   	push   %esi$/;"	l
f0106afe	obj/kern/kernel.asm	/^f0106afe:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0106b03	obj/kern/kernel.asm	/^f0106b03:	68 90 00 00 00       	push   $0x90$/;"	l
f0106b08	obj/kern/kernel.asm	/^f0106b08:	68 a9 9b 10 f0       	push   $0xf0109ba9$/;"	l
f0106b0d	obj/kern/kernel.asm	/^f0106b0d:	e8 2e 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106b12	obj/kern/kernel.asm	/^f0106b12:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0106b18	obj/kern/kernel.asm	/^f0106b18:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	6a 04                	push   $0x4$/;"	l
f0106b1d	obj/kern/kernel.asm	/^f0106b1d:	68 be 9b 10 f0       	push   $0xf0109bbe$/;"	l
f0106b22	obj/kern/kernel.asm	/^f0106b22:	53                   	push   %ebx$/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	e8 82 fc ff ff       	call   f01067aa <memcmp>$/;"	l
f0106b28	obj/kern/kernel.asm	/^f0106b28:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	85 c0                	test   %eax,%eax$/;"	l
f0106b2d	obj/kern/kernel.asm	/^f0106b2d:	74 15                	je     f0106b44 <mp_init+0x106>$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	68 4c 9a 10 f0       	push   $0xf0109a4c$/;"	l
f0106b37	obj/kern/kernel.asm	/^f0106b37:	e8 ac d3 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106b3c	obj/kern/kernel.asm	/^f0106b3c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106b3f	obj/kern/kernel.asm	/^f0106b3f:	e9 f3 01 00 00       	jmp    f0106d37 <mp_init+0x2f9>$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0106b48	obj/kern/kernel.asm	/^f0106b48:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0106b4c	obj/kern/kernel.asm	/^f0106b4c:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106b4f	obj/kern/kernel.asm	/^f0106b4f:	85 ff                	test   %edi,%edi$/;"	l
f0106b51	obj/kern/kernel.asm	/^f0106b51:	7e 34                	jle    f0106b87 <mp_init+0x149>$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106b58	obj/kern/kernel.asm	/^f0106b58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106b5d	obj/kern/kernel.asm	/^f0106b5d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106b64	obj/kern/kernel.asm	/^f0106b64:	f0 $/;"	l
f0106b65	obj/kern/kernel.asm	/^f0106b65:	01 ca                	add    %ecx,%edx$/;"	l
f0106b67	obj/kern/kernel.asm	/^f0106b67:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106b6a	obj/kern/kernel.asm	/^f0106b6a:	39 c7                	cmp    %eax,%edi$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c:	75 ef                	jne    f0106b5d <mp_init+0x11f>$/;"	l
f0106b6e	obj/kern/kernel.asm	/^f0106b6e:	84 d2                	test   %dl,%dl$/;"	l
f0106b70	obj/kern/kernel.asm	/^f0106b70:	74 15                	je     f0106b87 <mp_init+0x149>$/;"	l
f0106b72	obj/kern/kernel.asm	/^f0106b72:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106b75	obj/kern/kernel.asm	/^f0106b75:	68 80 9a 10 f0       	push   $0xf0109a80$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	e8 69 d3 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106b82	obj/kern/kernel.asm	/^f0106b82:	e9 b0 01 00 00       	jmp    f0106d37 <mp_init+0x2f9>$/;"	l
f0106b87	obj/kern/kernel.asm	/^f0106b87:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0106b8b	obj/kern/kernel.asm	/^f0106b8b:	3c 01                	cmp    $0x1,%al$/;"	l
f0106b8d	obj/kern/kernel.asm	/^f0106b8d:	74 1d                	je     f0106bac <mp_init+0x16e>$/;"	l
f0106b8f	obj/kern/kernel.asm	/^f0106b8f:	3c 04                	cmp    $0x4,%al$/;"	l
f0106b91	obj/kern/kernel.asm	/^f0106b91:	74 19                	je     f0106bac <mp_init+0x16e>$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106b99	obj/kern/kernel.asm	/^f0106b99:	50                   	push   %eax$/;"	l
f0106b9a	obj/kern/kernel.asm	/^f0106b9a:	68 a4 9a 10 f0       	push   $0xf0109aa4$/;"	l
f0106b9f	obj/kern/kernel.asm	/^f0106b9f:	e8 44 d3 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106ba4	obj/kern/kernel.asm	/^f0106ba4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106ba7	obj/kern/kernel.asm	/^f0106ba7:	e9 8b 01 00 00       	jmp    f0106d37 <mp_init+0x2f9>$/;"	l
f0106bac	obj/kern/kernel.asm	/^f0106bac:	0f b7 7b 28          	movzwl 0x28(%ebx),%edi$/;"	l
f0106bb0	obj/kern/kernel.asm	/^f0106bb0:	0f b7 4d e2          	movzwl -0x1e(%ebp),%ecx$/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	85 ff                	test   %edi,%edi$/;"	l
f0106bb6	obj/kern/kernel.asm	/^f0106bb6:	7e 1f                	jle    f0106bd7 <mp_init+0x199>$/;"	l
f0106bb8	obj/kern/kernel.asm	/^f0106bb8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106bbd	obj/kern/kernel.asm	/^f0106bbd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106bc2	obj/kern/kernel.asm	/^f0106bc2:	01 ce                	add    %ecx,%esi$/;"	l
f0106bc4	obj/kern/kernel.asm	/^f0106bc4:	0f b6 8c 06 00 00 00 	movzbl -0x10000000(%esi,%eax,1),%ecx$/;"	l
f0106bcb	obj/kern/kernel.asm	/^f0106bcb:	f0 $/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	01 ca                	add    %ecx,%edx$/;"	l
f0106bce	obj/kern/kernel.asm	/^f0106bce:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	39 c7                	cmp    %eax,%edi$/;"	l
f0106bd3	obj/kern/kernel.asm	/^f0106bd3:	75 ef                	jne    f0106bc4 <mp_init+0x186>$/;"	l
f0106bd5	obj/kern/kernel.asm	/^f0106bd5:	eb 05                	jmp    f0106bdc <mp_init+0x19e>$/;"	l
f0106bd7	obj/kern/kernel.asm	/^f0106bd7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	38 53 2a             	cmp    %dl,0x2a(%ebx)$/;"	l
f0106bdf	obj/kern/kernel.asm	/^f0106bdf:	74 15                	je     f0106bf6 <mp_init+0x1b8>$/;"	l
f0106be1	obj/kern/kernel.asm	/^f0106be1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	68 c4 9a 10 f0       	push   $0xf0109ac4$/;"	l
f0106be9	obj/kern/kernel.asm	/^f0106be9:	e8 fa d2 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106bee	obj/kern/kernel.asm	/^f0106bee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106bf1	obj/kern/kernel.asm	/^f0106bf1:	e9 41 01 00 00       	jmp    f0106d37 <mp_init+0x2f9>$/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6:	85 db                	test   %ebx,%ebx$/;"	l
f0106bf8	obj/kern/kernel.asm	/^f0106bf8:	0f 84 39 01 00 00    	je     f0106d37 <mp_init+0x2f9>$/;"	l
f0106bfe	obj/kern/kernel.asm	/^f0106bfe:	c7 05 00 10 28 f0 01 	movl   $0x1,0xf0281000$/;"	l
f0106c05	obj/kern/kernel.asm	/^f0106c05:	00 00 00 $/;"	l
f0106c08	obj/kern/kernel.asm	/^f0106c08:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106c0b	obj/kern/kernel.asm	/^f0106c0b:	a3 00 20 2c f0       	mov    %eax,0xf02c2000$/;"	l
f0106c10	obj/kern/kernel.asm	/^f0106c10:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106c13	obj/kern/kernel.asm	/^f0106c13:	66 83 7b 22 00       	cmpw   $0x0,0x22(%ebx)$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	0f 84 96 00 00 00    	je     f0106cb4 <mp_init+0x276>$/;"	l
f0106c1e	obj/kern/kernel.asm	/^f0106c1e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106c23	obj/kern/kernel.asm	/^f0106c23:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0106c26	obj/kern/kernel.asm	/^f0106c26:	84 c0                	test   %al,%al$/;"	l
f0106c28	obj/kern/kernel.asm	/^f0106c28:	74 06                	je     f0106c30 <mp_init+0x1f2>$/;"	l
f0106c2a	obj/kern/kernel.asm	/^f0106c2a:	3c 04                	cmp    $0x4,%al$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	77 55                	ja     f0106c83 <mp_init+0x245>$/;"	l
f0106c2e	obj/kern/kernel.asm	/^f0106c2e:	eb 4e                	jmp    f0106c7e <mp_init+0x240>$/;"	l
f0106c30	obj/kern/kernel.asm	/^f0106c30:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0106c34	obj/kern/kernel.asm	/^f0106c34:	74 11                	je     f0106c47 <mp_init+0x209>$/;"	l
f0106c36	obj/kern/kernel.asm	/^f0106c36:	6b 05 c4 13 28 f0 74 	imul   $0x74,0xf02813c4,%eax$/;"	l
f0106c3d	obj/kern/kernel.asm	/^f0106c3d:	05 20 10 28 f0       	add    $0xf0281020,%eax$/;"	l
f0106c42	obj/kern/kernel.asm	/^f0106c42:	a3 c0 13 28 f0       	mov    %eax,0xf02813c0$/;"	l
f0106c47	obj/kern/kernel.asm	/^f0106c47:	a1 c4 13 28 f0       	mov    0xf02813c4,%eax$/;"	l
f0106c4c	obj/kern/kernel.asm	/^f0106c4c:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106c4f	obj/kern/kernel.asm	/^f0106c4f:	7f 13                	jg     f0106c64 <mp_init+0x226>$/;"	l
f0106c51	obj/kern/kernel.asm	/^f0106c51:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106c54	obj/kern/kernel.asm	/^f0106c54:	88 82 20 10 28 f0    	mov    %al,-0xfd7efe0(%edx)$/;"	l
f0106c5a	obj/kern/kernel.asm	/^f0106c5a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106c5d	obj/kern/kernel.asm	/^f0106c5d:	a3 c4 13 28 f0       	mov    %eax,0xf02813c4$/;"	l
f0106c62	obj/kern/kernel.asm	/^f0106c62:	eb 15                	jmp    f0106c79 <mp_init+0x23b>$/;"	l
f0106c64	obj/kern/kernel.asm	/^f0106c64:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106c67	obj/kern/kernel.asm	/^f0106c67:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0106c6b	obj/kern/kernel.asm	/^f0106c6b:	50                   	push   %eax$/;"	l
f0106c6c	obj/kern/kernel.asm	/^f0106c6c:	68 f4 9a 10 f0       	push   $0xf0109af4$/;"	l
f0106c71	obj/kern/kernel.asm	/^f0106c71:	e8 72 d2 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106c76	obj/kern/kernel.asm	/^f0106c76:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106c79	obj/kern/kernel.asm	/^f0106c79:	83 c7 14             	add    $0x14,%edi$/;"	l
f0106c7c	obj/kern/kernel.asm	/^f0106c7c:	eb 27                	jmp    f0106ca5 <mp_init+0x267>$/;"	l
f0106c7e	obj/kern/kernel.asm	/^f0106c7e:	83 c7 08             	add    $0x8,%edi$/;"	l
f0106c81	obj/kern/kernel.asm	/^f0106c81:	eb 22                	jmp    f0106ca5 <mp_init+0x267>$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106c86	obj/kern/kernel.asm	/^f0106c86:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106c89	obj/kern/kernel.asm	/^f0106c89:	50                   	push   %eax$/;"	l
f0106c8a	obj/kern/kernel.asm	/^f0106c8a:	68 1c 9b 10 f0       	push   $0xf0109b1c$/;"	l
f0106c8f	obj/kern/kernel.asm	/^f0106c8f:	e8 54 d2 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106c94	obj/kern/kernel.asm	/^f0106c94:	c7 05 00 10 28 f0 00 	movl   $0x0,0xf0281000$/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	00 00 00 $/;"	l
f0106c9e	obj/kern/kernel.asm	/^f0106c9e:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0106ca2	obj/kern/kernel.asm	/^f0106ca2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106ca5	obj/kern/kernel.asm	/^f0106ca5:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0106cac	obj/kern/kernel.asm	/^f0106cac:	39 f0                	cmp    %esi,%eax$/;"	l
f0106cae	obj/kern/kernel.asm	/^f0106cae:	0f 87 6f ff ff ff    	ja     f0106c23 <mp_init+0x1e5>$/;"	l
f0106cb4	obj/kern/kernel.asm	/^f0106cb4:	a1 c0 13 28 f0       	mov    0xf02813c0,%eax$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106cc0	obj/kern/kernel.asm	/^f0106cc0:	83 3d 00 10 28 f0 00 	cmpl   $0x0,0xf0281000$/;"	l
f0106cc7	obj/kern/kernel.asm	/^f0106cc7:	75 26                	jne    f0106cef <mp_init+0x2b1>$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	c7 05 c4 13 28 f0 01 	movl   $0x1,0xf02813c4$/;"	l
f0106cd0	obj/kern/kernel.asm	/^f0106cd0:	00 00 00 $/;"	l
f0106cd3	obj/kern/kernel.asm	/^f0106cd3:	c7 05 00 20 2c f0 00 	movl   $0x0,0xf02c2000$/;"	l
f0106cda	obj/kern/kernel.asm	/^f0106cda:	00 00 00 $/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106ce0	obj/kern/kernel.asm	/^f0106ce0:	68 3c 9b 10 f0       	push   $0xf0109b3c$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	e8 fe d1 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106cea	obj/kern/kernel.asm	/^f0106cea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106ced	obj/kern/kernel.asm	/^f0106ced:	eb 48                	jmp    f0106d37 <mp_init+0x2f9>$/;"	l
f0106cef	obj/kern/kernel.asm	/^f0106cef:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106cf2	obj/kern/kernel.asm	/^f0106cf2:	ff 35 c4 13 28 f0    	pushl  0xf02813c4$/;"	l
f0106cf8	obj/kern/kernel.asm	/^f0106cf8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	50                   	push   %eax$/;"	l
f0106cfc	obj/kern/kernel.asm	/^f0106cfc:	68 c3 9b 10 f0       	push   $0xf0109bc3$/;"	l
f0106d01	obj/kern/kernel.asm	/^f0106d01:	e8 e2 d1 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106d06	obj/kern/kernel.asm	/^f0106d06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d09	obj/kern/kernel.asm	/^f0106d09:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106d10	obj/kern/kernel.asm	/^f0106d10:	74 25                	je     f0106d37 <mp_init+0x2f9>$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106d15	obj/kern/kernel.asm	/^f0106d15:	68 68 9b 10 f0       	push   $0xf0109b68$/;"	l
f0106d1a	obj/kern/kernel.asm	/^f0106d1a:	e8 c9 d1 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0106d1f	obj/kern/kernel.asm	/^f0106d1f:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106d29	obj/kern/kernel.asm	/^f0106d29:	ee                   	out    %al,(%dx)$/;"	l
f0106d2a	obj/kern/kernel.asm	/^f0106d2a:	ba 23 00 00 00       	mov    $0x23,%edx$/;"	l
f0106d2f	obj/kern/kernel.asm	/^f0106d2f:	ec                   	in     (%dx),%al$/;"	l
f0106d30	obj/kern/kernel.asm	/^f0106d30:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106d33	obj/kern/kernel.asm	/^f0106d33:	ee                   	out    %al,(%dx)$/;"	l
f0106d34	obj/kern/kernel.asm	/^f0106d34:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0106d3a	obj/kern/kernel.asm	/^f0106d3a:	5b                   	pop    %ebx$/;"	l
f0106d3b	obj/kern/kernel.asm	/^f0106d3b:	5e                   	pop    %esi$/;"	l
f0106d3c	obj/kern/kernel.asm	/^f0106d3c:	5f                   	pop    %edi$/;"	l
f0106d3d	obj/kern/kernel.asm	/^f0106d3d:	5d                   	pop    %ebp$/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e:	c3                   	ret    $/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f <lapicw>:$/;"	l
f0106d3f	obj/kern/kernel.asm	/^f0106d3f:	55                   	push   %ebp$/;"	l
f0106d40	obj/kern/kernel.asm	/^f0106d40:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d42	obj/kern/kernel.asm	/^f0106d42:	8b 0d 00 20 2c f0    	mov    0xf02c2000,%ecx$/;"	l
f0106d48	obj/kern/kernel.asm	/^f0106d48:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106d4b	obj/kern/kernel.asm	/^f0106d4b:	89 10                	mov    %edx,(%eax)$/;"	l
f0106d4d	obj/kern/kernel.asm	/^f0106d4d:	a1 00 20 2c f0       	mov    0xf02c2000,%eax$/;"	l
f0106d52	obj/kern/kernel.asm	/^f0106d52:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106d55	obj/kern/kernel.asm	/^f0106d55:	5d                   	pop    %ebp$/;"	l
f0106d56	obj/kern/kernel.asm	/^f0106d56:	c3                   	ret    $/;"	l
f0106d57	obj/kern/kernel.asm	/^f0106d57 <cpunum>:$/;"	l
f0106d57	obj/kern/kernel.asm	/^f0106d57:	55                   	push   %ebp$/;"	l
f0106d58	obj/kern/kernel.asm	/^f0106d58:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d5a	obj/kern/kernel.asm	/^f0106d5a:	a1 00 20 2c f0       	mov    0xf02c2000,%eax$/;"	l
f0106d5f	obj/kern/kernel.asm	/^f0106d5f:	85 c0                	test   %eax,%eax$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	74 08                	je     f0106d6b <cpunum+0x14>$/;"	l
f0106d63	obj/kern/kernel.asm	/^f0106d63:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106d66	obj/kern/kernel.asm	/^f0106d66:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106d69	obj/kern/kernel.asm	/^f0106d69:	eb 05                	jmp    f0106d70 <cpunum+0x19>$/;"	l
f0106d6b	obj/kern/kernel.asm	/^f0106d6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106d70	obj/kern/kernel.asm	/^f0106d70:	5d                   	pop    %ebp$/;"	l
f0106d71	obj/kern/kernel.asm	/^f0106d71:	c3                   	ret    $/;"	l
f0106d72	obj/kern/kernel.asm	/^f0106d72 <lapic_init>:$/;"	l
f0106d72	obj/kern/kernel.asm	/^f0106d72:	83 3d 00 20 2c f0 00 	cmpl   $0x0,0xf02c2000$/;"	l
f0106d79	obj/kern/kernel.asm	/^f0106d79:	0f 84 0b 01 00 00    	je     f0106e8a <lapic_init+0x118>$/;"	l
f0106d7f	obj/kern/kernel.asm	/^f0106d7f:	55                   	push   %ebp$/;"	l
f0106d80	obj/kern/kernel.asm	/^f0106d80:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d82	obj/kern/kernel.asm	/^f0106d82:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106d87	obj/kern/kernel.asm	/^f0106d87:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106d8c	obj/kern/kernel.asm	/^f0106d8c:	e8 ae ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106d91	obj/kern/kernel.asm	/^f0106d91:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106d9b	obj/kern/kernel.asm	/^f0106d9b:	e8 9f ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106da0	obj/kern/kernel.asm	/^f0106da0:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106da5	obj/kern/kernel.asm	/^f0106da5:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106daa	obj/kern/kernel.asm	/^f0106daa:	e8 90 ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106db4	obj/kern/kernel.asm	/^f0106db4:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106db9	obj/kern/kernel.asm	/^f0106db9:	e8 81 ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106dbe	obj/kern/kernel.asm	/^f0106dbe:	e8 94 ff ff ff       	call   f0106d57 <cpunum>$/;"	l
f0106dc3	obj/kern/kernel.asm	/^f0106dc3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106dc6	obj/kern/kernel.asm	/^f0106dc6:	05 20 10 28 f0       	add    $0xf0281020,%eax$/;"	l
f0106dcb	obj/kern/kernel.asm	/^f0106dcb:	39 05 c0 13 28 f0    	cmp    %eax,0xf02813c0$/;"	l
f0106dd1	obj/kern/kernel.asm	/^f0106dd1:	74 0f                	je     f0106de2 <lapic_init+0x70>$/;"	l
f0106dd3	obj/kern/kernel.asm	/^f0106dd3:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106ddd	obj/kern/kernel.asm	/^f0106ddd:	e8 5d ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106de2	obj/kern/kernel.asm	/^f0106de2:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106de7	obj/kern/kernel.asm	/^f0106de7:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	e8 4e ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106df1	obj/kern/kernel.asm	/^f0106df1:	a1 00 20 2c f0       	mov    0xf02c2000,%eax$/;"	l
f0106df6	obj/kern/kernel.asm	/^f0106df6:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106df9	obj/kern/kernel.asm	/^f0106df9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	3c 03                	cmp    $0x3,%al$/;"	l
f0106dfe	obj/kern/kernel.asm	/^f0106dfe:	76 0f                	jbe    f0106e0f <lapic_init+0x9d>$/;"	l
f0106e00	obj/kern/kernel.asm	/^f0106e00:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106e05	obj/kern/kernel.asm	/^f0106e05:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106e0a	obj/kern/kernel.asm	/^f0106e0a:	e8 30 ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106e0f	obj/kern/kernel.asm	/^f0106e0f:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106e14	obj/kern/kernel.asm	/^f0106e14:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106e19	obj/kern/kernel.asm	/^f0106e19:	e8 21 ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106e1e	obj/kern/kernel.asm	/^f0106e1e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106e28	obj/kern/kernel.asm	/^f0106e28:	e8 12 ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106e2d	obj/kern/kernel.asm	/^f0106e2d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e32	obj/kern/kernel.asm	/^f0106e32:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106e37	obj/kern/kernel.asm	/^f0106e37:	e8 03 ff ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106e3c	obj/kern/kernel.asm	/^f0106e3c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e41	obj/kern/kernel.asm	/^f0106e41:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106e46	obj/kern/kernel.asm	/^f0106e46:	e8 f4 fe ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106e4b	obj/kern/kernel.asm	/^f0106e4b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e50	obj/kern/kernel.asm	/^f0106e50:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106e55	obj/kern/kernel.asm	/^f0106e55:	e8 e5 fe ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106e5a	obj/kern/kernel.asm	/^f0106e5a:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e64	obj/kern/kernel.asm	/^f0106e64:	e8 d6 fe ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	8b 15 00 20 2c f0    	mov    0xf02c2000,%edx$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106e78	obj/kern/kernel.asm	/^f0106e78:	75 f5                	jne    f0106e6f <lapic_init+0xfd>$/;"	l
f0106e7a	obj/kern/kernel.asm	/^f0106e7a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e7f	obj/kern/kernel.asm	/^f0106e7f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106e84	obj/kern/kernel.asm	/^f0106e84:	e8 b6 fe ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106e89	obj/kern/kernel.asm	/^f0106e89:	5d                   	pop    %ebp$/;"	l
f0106e8a	obj/kern/kernel.asm	/^f0106e8a:	f3 c3                	repz ret $/;"	l
f0106e8c	obj/kern/kernel.asm	/^f0106e8c <lapic_eoi>:$/;"	l
f0106e8c	obj/kern/kernel.asm	/^f0106e8c:	83 3d 00 20 2c f0 00 	cmpl   $0x0,0xf02c2000$/;"	l
f0106e93	obj/kern/kernel.asm	/^f0106e93:	74 13                	je     f0106ea8 <lapic_eoi+0x1c>$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	55                   	push   %ebp$/;"	l
f0106e96	obj/kern/kernel.asm	/^f0106e96:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e98	obj/kern/kernel.asm	/^f0106e98:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e9d	obj/kern/kernel.asm	/^f0106e9d:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106ea2	obj/kern/kernel.asm	/^f0106ea2:	e8 98 fe ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	5d                   	pop    %ebp$/;"	l
f0106ea8	obj/kern/kernel.asm	/^f0106ea8:	f3 c3                	repz ret $/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa <lapic_startap>:$/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	55                   	push   %ebp$/;"	l
f0106eab	obj/kern/kernel.asm	/^f0106eab:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ead	obj/kern/kernel.asm	/^f0106ead:	56                   	push   %esi$/;"	l
f0106eae	obj/kern/kernel.asm	/^f0106eae:	53                   	push   %ebx$/;"	l
f0106eaf	obj/kern/kernel.asm	/^f0106eaf:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106eb2	obj/kern/kernel.asm	/^f0106eb2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106eb5	obj/kern/kernel.asm	/^f0106eb5:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106eba	obj/kern/kernel.asm	/^f0106eba:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106ebf	obj/kern/kernel.asm	/^f0106ebf:	ee                   	out    %al,(%dx)$/;"	l
f0106ec0	obj/kern/kernel.asm	/^f0106ec0:	ba 71 00 00 00       	mov    $0x71,%edx$/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106eca	obj/kern/kernel.asm	/^f0106eca:	ee                   	out    %al,(%dx)$/;"	l
f0106ecb	obj/kern/kernel.asm	/^f0106ecb:	83 3d b8 0e 28 f0 00 	cmpl   $0x0,0xf0280eb8$/;"	l
f0106ed2	obj/kern/kernel.asm	/^f0106ed2:	75 19                	jne    f0106eed <lapic_startap+0x43>$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	68 67 04 00 00       	push   $0x467$/;"	l
f0106ed9	obj/kern/kernel.asm	/^f0106ed9:	68 20 7f 10 f0       	push   $0xf0107f20$/;"	l
f0106ede	obj/kern/kernel.asm	/^f0106ede:	68 93 00 00 00       	push   $0x93$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	68 e0 9b 10 f0       	push   $0xf0109be0$/;"	l
f0106ee8	obj/kern/kernel.asm	/^f0106ee8:	e8 53 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106eed	obj/kern/kernel.asm	/^f0106eed:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106ef4	obj/kern/kernel.asm	/^f0106ef4:	00 00 $/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	89 d8                	mov    %ebx,%eax$/;"	l
f0106ef8	obj/kern/kernel.asm	/^f0106ef8:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106efb	obj/kern/kernel.asm	/^f0106efb:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106f01	obj/kern/kernel.asm	/^f0106f01:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0106f04	obj/kern/kernel.asm	/^f0106f04:	89 f2                	mov    %esi,%edx$/;"	l
f0106f06	obj/kern/kernel.asm	/^f0106f06:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106f0b	obj/kern/kernel.asm	/^f0106f0b:	e8 2f fe ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106f10	obj/kern/kernel.asm	/^f0106f10:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106f15	obj/kern/kernel.asm	/^f0106f15:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f1a	obj/kern/kernel.asm	/^f0106f1a:	e8 20 fe ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106f1f	obj/kern/kernel.asm	/^f0106f1f:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106f24	obj/kern/kernel.asm	/^f0106f24:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f29	obj/kern/kernel.asm	/^f0106f29:	e8 11 fe ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106f2e	obj/kern/kernel.asm	/^f0106f2e:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106f31	obj/kern/kernel.asm	/^f0106f31:	80 cf 06             	or     $0x6,%bh$/;"	l
f0106f34	obj/kern/kernel.asm	/^f0106f34:	89 f2                	mov    %esi,%edx$/;"	l
f0106f36	obj/kern/kernel.asm	/^f0106f36:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106f3b	obj/kern/kernel.asm	/^f0106f3b:	e8 ff fd ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106f40	obj/kern/kernel.asm	/^f0106f40:	89 da                	mov    %ebx,%edx$/;"	l
f0106f42	obj/kern/kernel.asm	/^f0106f42:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f47	obj/kern/kernel.asm	/^f0106f47:	e8 f3 fd ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106f4c	obj/kern/kernel.asm	/^f0106f4c:	89 f2                	mov    %esi,%edx$/;"	l
f0106f4e	obj/kern/kernel.asm	/^f0106f4e:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106f53	obj/kern/kernel.asm	/^f0106f53:	e8 e7 fd ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106f58	obj/kern/kernel.asm	/^f0106f58:	89 da                	mov    %ebx,%edx$/;"	l
f0106f5a	obj/kern/kernel.asm	/^f0106f5a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f5f	obj/kern/kernel.asm	/^f0106f5f:	e8 db fd ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106f64	obj/kern/kernel.asm	/^f0106f64:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106f67	obj/kern/kernel.asm	/^f0106f67:	5b                   	pop    %ebx$/;"	l
f0106f68	obj/kern/kernel.asm	/^f0106f68:	5e                   	pop    %esi$/;"	l
f0106f69	obj/kern/kernel.asm	/^f0106f69:	5d                   	pop    %ebp$/;"	l
f0106f6a	obj/kern/kernel.asm	/^f0106f6a:	c3                   	ret    $/;"	l
f0106f6b	obj/kern/kernel.asm	/^f0106f6b <lapic_ipi>:$/;"	l
f0106f6b	obj/kern/kernel.asm	/^f0106f6b:	55                   	push   %ebp$/;"	l
f0106f6c	obj/kern/kernel.asm	/^f0106f6c:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f6e	obj/kern/kernel.asm	/^f0106f6e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106f71	obj/kern/kernel.asm	/^f0106f71:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f7c	obj/kern/kernel.asm	/^f0106f7c:	e8 be fd ff ff       	call   f0106d3f <lapicw>$/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	8b 15 00 20 2c f0    	mov    0xf02c2000,%edx$/;"	l
f0106f87	obj/kern/kernel.asm	/^f0106f87:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106f8d	obj/kern/kernel.asm	/^f0106f8d:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106f90	obj/kern/kernel.asm	/^f0106f90:	75 f5                	jne    f0106f87 <lapic_ipi+0x1c>$/;"	l
f0106f92	obj/kern/kernel.asm	/^f0106f92:	5d                   	pop    %ebp$/;"	l
f0106f93	obj/kern/kernel.asm	/^f0106f93:	c3                   	ret    $/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94 <atomic_return_and_add>:$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	55                   	push   %ebp$/;"	l
f0106f95	obj/kern/kernel.asm	/^f0106f95:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f97	obj/kern/kernel.asm	/^f0106f97:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106f9a	obj/kern/kernel.asm	/^f0106f9a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106f9d	obj/kern/kernel.asm	/^f0106f9d:	f0 0f c1 02          	lock xadd %eax,(%edx)$/;"	l
f0106fa1	obj/kern/kernel.asm	/^f0106fa1:	5d                   	pop    %ebp$/;"	l
f0106fa2	obj/kern/kernel.asm	/^f0106fa2:	c3                   	ret    $/;"	l
f0106fa3	obj/kern/kernel.asm	/^f0106fa3 <__spin_initlock>:$/;"	l
f0106fa3	obj/kern/kernel.asm	/^f0106fa3:	55                   	push   %ebp$/;"	l
f0106fa4	obj/kern/kernel.asm	/^f0106fa4:	89 e5                	mov    %esp,%ebp$/;"	l
f0106fa6	obj/kern/kernel.asm	/^f0106fa6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106fa9	obj/kern/kernel.asm	/^f0106fa9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106faf	obj/kern/kernel.asm	/^f0106faf:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0106fb6	obj/kern/kernel.asm	/^f0106fb6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106fb9	obj/kern/kernel.asm	/^f0106fb9:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f0106fbc	obj/kern/kernel.asm	/^f0106fbc:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
f0106fc3	obj/kern/kernel.asm	/^f0106fc3:	5d                   	pop    %ebp$/;"	l
f0106fc4	obj/kern/kernel.asm	/^f0106fc4:	c3                   	ret    $/;"	l
f0106fc5	obj/kern/kernel.asm	/^f0106fc5 <spin_lock>:$/;"	l
f0106fc5	obj/kern/kernel.asm	/^f0106fc5:	55                   	push   %ebp$/;"	l
f0106fc6	obj/kern/kernel.asm	/^f0106fc6:	89 e5                	mov    %esp,%ebp$/;"	l
f0106fc8	obj/kern/kernel.asm	/^f0106fc8:	56                   	push   %esi$/;"	l
f0106fc9	obj/kern/kernel.asm	/^f0106fc9:	53                   	push   %ebx$/;"	l
f0106fca	obj/kern/kernel.asm	/^f0106fca:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	8b 13                	mov    (%ebx),%edx$/;"	l
f0106fcf	obj/kern/kernel.asm	/^f0106fcf:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0106fd2	obj/kern/kernel.asm	/^f0106fd2:	39 c2                	cmp    %eax,%edx$/;"	l
f0106fd4	obj/kern/kernel.asm	/^f0106fd4:	74 32                	je     f0107008 <spin_lock+0x43>$/;"	l
f0106fd6	obj/kern/kernel.asm	/^f0106fd6:	8b 73 0c             	mov    0xc(%ebx),%esi$/;"	l
f0106fd9	obj/kern/kernel.asm	/^f0106fd9:	e8 79 fd ff ff       	call   f0106d57 <cpunum>$/;"	l
f0106fde	obj/kern/kernel.asm	/^f0106fde:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106fe1	obj/kern/kernel.asm	/^f0106fe1:	05 20 10 28 f0       	add    $0xf0281020,%eax$/;"	l
f0106fe6	obj/kern/kernel.asm	/^f0106fe6:	39 c6                	cmp    %eax,%esi$/;"	l
f0106fe8	obj/kern/kernel.asm	/^f0106fe8:	75 1e                	jne    f0107008 <spin_lock+0x43>$/;"	l
f0106fea	obj/kern/kernel.asm	/^f0106fea:	8b 5b 08             	mov    0x8(%ebx),%ebx$/;"	l
f0106fed	obj/kern/kernel.asm	/^f0106fed:	e8 65 fd ff ff       	call   f0106d57 <cpunum>$/;"	l
f0106ff2	obj/kern/kernel.asm	/^f0106ff2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106ff5	obj/kern/kernel.asm	/^f0106ff5:	53                   	push   %ebx$/;"	l
f0106ff6	obj/kern/kernel.asm	/^f0106ff6:	50                   	push   %eax$/;"	l
f0106ff7	obj/kern/kernel.asm	/^f0106ff7:	68 f0 9b 10 f0       	push   $0xf0109bf0$/;"	l
f0106ffc	obj/kern/kernel.asm	/^f0106ffc:	6a 5c                	push   $0x5c$/;"	l
f0106ffe	obj/kern/kernel.asm	/^f0106ffe:	68 52 9c 10 f0       	push   $0xf0109c52$/;"	l
f0107003	obj/kern/kernel.asm	/^f0107003:	e8 38 90 ff ff       	call   f0100040 <_panic>$/;"	l
f0107008	obj/kern/kernel.asm	/^f0107008:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010700b	obj/kern/kernel.asm	/^f010700b:	6a 01                	push   $0x1$/;"	l
f010700d	obj/kern/kernel.asm	/^f010700d:	8d 43 04             	lea    0x4(%ebx),%eax$/;"	l
f0107010	obj/kern/kernel.asm	/^f0107010:	50                   	push   %eax$/;"	l
f0107011	obj/kern/kernel.asm	/^f0107011:	e8 7e ff ff ff       	call   f0106f94 <atomic_return_and_add>$/;"	l
f0107016	obj/kern/kernel.asm	/^f0107016:	8b 13                	mov    (%ebx),%edx$/;"	l
f0107018	obj/kern/kernel.asm	/^f0107018:	83 c4 10             	add    $0x10,%esp$/;"	l
f010701b	obj/kern/kernel.asm	/^f010701b:	39 d0                	cmp    %edx,%eax$/;"	l
f010701d	obj/kern/kernel.asm	/^f010701d:	74 08                	je     f0107027 <spin_lock+0x62>$/;"	l
f010701f	obj/kern/kernel.asm	/^f010701f:	f3 90                	pause  $/;"	l
f0107021	obj/kern/kernel.asm	/^f0107021:	8b 13                	mov    (%ebx),%edx$/;"	l
f0107023	obj/kern/kernel.asm	/^f0107023:	39 d0                	cmp    %edx,%eax$/;"	l
f0107025	obj/kern/kernel.asm	/^f0107025:	75 f8                	jne    f010701f <spin_lock+0x5a>$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	e8 2b fd ff ff       	call   f0106d57 <cpunum>$/;"	l
f010702c	obj/kern/kernel.asm	/^f010702c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010702f	obj/kern/kernel.asm	/^f010702f:	05 20 10 28 f0       	add    $0xf0281020,%eax$/;"	l
f0107034	obj/kern/kernel.asm	/^f0107034:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0107037	obj/kern/kernel.asm	/^f0107037:	8d 4b 10             	lea    0x10(%ebx),%ecx$/;"	l
f010703a	obj/kern/kernel.asm	/^f010703a:	89 e8                	mov    %ebp,%eax$/;"	l
f010703c	obj/kern/kernel.asm	/^f010703c:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f0107042	obj/kern/kernel.asm	/^f0107042:	81 fa ff ff 7f 0e    	cmp    $0xe7fffff,%edx$/;"	l
f0107048	obj/kern/kernel.asm	/^f0107048:	76 3a                	jbe    f0107084 <spin_lock+0xbf>$/;"	l
f010704a	obj/kern/kernel.asm	/^f010704a:	eb 31                	jmp    f010707d <spin_lock+0xb8>$/;"	l
f010704c	obj/kern/kernel.asm	/^f010704c:	8d 9a 00 00 80 10    	lea    0x10800000(%edx),%ebx$/;"	l
f0107052	obj/kern/kernel.asm	/^f0107052:	81 fb ff ff 7f 0e    	cmp    $0xe7fffff,%ebx$/;"	l
f0107058	obj/kern/kernel.asm	/^f0107058:	77 12                	ja     f010706c <spin_lock+0xa7>$/;"	l
f010705a	obj/kern/kernel.asm	/^f010705a:	8b 5a 04             	mov    0x4(%edx),%ebx$/;"	l
f010705d	obj/kern/kernel.asm	/^f010705d:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)$/;"	l
f0107060	obj/kern/kernel.asm	/^f0107060:	8b 12                	mov    (%edx),%edx$/;"	l
f0107062	obj/kern/kernel.asm	/^f0107062:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107065	obj/kern/kernel.asm	/^f0107065:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0107068	obj/kern/kernel.asm	/^f0107068:	75 e2                	jne    f010704c <spin_lock+0x87>$/;"	l
f010706a	obj/kern/kernel.asm	/^f010706a:	eb 27                	jmp    f0107093 <spin_lock+0xce>$/;"	l
f010706c	obj/kern/kernel.asm	/^f010706c:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)$/;"	l
f0107073	obj/kern/kernel.asm	/^f0107073:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107076	obj/kern/kernel.asm	/^f0107076:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0107079	obj/kern/kernel.asm	/^f0107079:	7e f1                	jle    f010706c <spin_lock+0xa7>$/;"	l
f010707b	obj/kern/kernel.asm	/^f010707b:	eb 16                	jmp    f0107093 <spin_lock+0xce>$/;"	l
f010707d	obj/kern/kernel.asm	/^f010707d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107082	obj/kern/kernel.asm	/^f0107082:	eb e8                	jmp    f010706c <spin_lock+0xa7>$/;"	l
f0107084	obj/kern/kernel.asm	/^f0107084:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0107087	obj/kern/kernel.asm	/^f0107087:	89 53 10             	mov    %edx,0x10(%ebx)$/;"	l
f010708a	obj/kern/kernel.asm	/^f010708a:	8b 10                	mov    (%eax),%edx$/;"	l
f010708c	obj/kern/kernel.asm	/^f010708c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107091	obj/kern/kernel.asm	/^f0107091:	eb b9                	jmp    f010704c <spin_lock+0x87>$/;"	l
f0107093	obj/kern/kernel.asm	/^f0107093:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0107096	obj/kern/kernel.asm	/^f0107096:	5b                   	pop    %ebx$/;"	l
f0107097	obj/kern/kernel.asm	/^f0107097:	5e                   	pop    %esi$/;"	l
f0107098	obj/kern/kernel.asm	/^f0107098:	5d                   	pop    %ebp$/;"	l
f0107099	obj/kern/kernel.asm	/^f0107099:	c3                   	ret    $/;"	l
f010709a	obj/kern/kernel.asm	/^f010709a <spin_unlock>:$/;"	l
f010709a	obj/kern/kernel.asm	/^f010709a:	55                   	push   %ebp$/;"	l
f010709b	obj/kern/kernel.asm	/^f010709b:	89 e5                	mov    %esp,%ebp$/;"	l
f010709d	obj/kern/kernel.asm	/^f010709d:	57                   	push   %edi$/;"	l
f010709e	obj/kern/kernel.asm	/^f010709e:	56                   	push   %esi$/;"	l
f010709f	obj/kern/kernel.asm	/^f010709f:	53                   	push   %ebx$/;"	l
f01070a0	obj/kern/kernel.asm	/^f01070a0:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01070a3	obj/kern/kernel.asm	/^f01070a3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01070a6	obj/kern/kernel.asm	/^f01070a6:	8b 13                	mov    (%ebx),%edx$/;"	l
f01070a8	obj/kern/kernel.asm	/^f01070a8:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01070ab	obj/kern/kernel.asm	/^f01070ab:	39 c2                	cmp    %eax,%edx$/;"	l
f01070ad	obj/kern/kernel.asm	/^f01070ad:	74 18                	je     f01070c7 <spin_unlock+0x2d>$/;"	l
f01070af	obj/kern/kernel.asm	/^f01070af:	8b 73 0c             	mov    0xc(%ebx),%esi$/;"	l
f01070b2	obj/kern/kernel.asm	/^f01070b2:	e8 a0 fc ff ff       	call   f0106d57 <cpunum>$/;"	l
f01070b7	obj/kern/kernel.asm	/^f01070b7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01070ba	obj/kern/kernel.asm	/^f01070ba:	05 20 10 28 f0       	add    $0xf0281020,%eax$/;"	l
f01070bf	obj/kern/kernel.asm	/^f01070bf:	39 c6                	cmp    %eax,%esi$/;"	l
f01070c1	obj/kern/kernel.asm	/^f01070c1:	0f 84 ae 00 00 00    	je     f0107175 <spin_unlock+0xdb>$/;"	l
f01070c7	obj/kern/kernel.asm	/^f01070c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01070ca	obj/kern/kernel.asm	/^f01070ca:	6a 28                	push   $0x28$/;"	l
f01070cc	obj/kern/kernel.asm	/^f01070cc:	8d 43 10             	lea    0x10(%ebx),%eax$/;"	l
f01070cf	obj/kern/kernel.asm	/^f01070cf:	50                   	push   %eax$/;"	l
f01070d0	obj/kern/kernel.asm	/^f01070d0:	8d 45 c0             	lea    -0x40(%ebp),%eax$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	50                   	push   %eax$/;"	l
f01070d4	obj/kern/kernel.asm	/^f01070d4:	e8 56 f6 ff ff       	call   f010672f <memmove>$/;"	l
f01070d9	obj/kern/kernel.asm	/^f01070d9:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01070dc	obj/kern/kernel.asm	/^f01070dc:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f01070df	obj/kern/kernel.asm	/^f01070df:	8b 5b 08             	mov    0x8(%ebx),%ebx$/;"	l
f01070e2	obj/kern/kernel.asm	/^f01070e2:	e8 70 fc ff ff       	call   f0106d57 <cpunum>$/;"	l
f01070e7	obj/kern/kernel.asm	/^f01070e7:	56                   	push   %esi$/;"	l
f01070e8	obj/kern/kernel.asm	/^f01070e8:	53                   	push   %ebx$/;"	l
f01070e9	obj/kern/kernel.asm	/^f01070e9:	50                   	push   %eax$/;"	l
f01070ea	obj/kern/kernel.asm	/^f01070ea:	68 1c 9c 10 f0       	push   $0xf0109c1c$/;"	l
f01070ef	obj/kern/kernel.asm	/^f01070ef:	e8 f4 cd ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01070f4	obj/kern/kernel.asm	/^f01070f4:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01070f7	obj/kern/kernel.asm	/^f01070f7:	83 c4 20             	add    $0x20,%esp$/;"	l
f01070fa	obj/kern/kernel.asm	/^f01070fa:	85 c0                	test   %eax,%eax$/;"	l
f01070fc	obj/kern/kernel.asm	/^f01070fc:	74 60                	je     f010715e <spin_unlock+0xc4>$/;"	l
f01070fe	obj/kern/kernel.asm	/^f01070fe:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0107101	obj/kern/kernel.asm	/^f0107101:	8d 7d e4             	lea    -0x1c(%ebp),%edi$/;"	l
f0107104	obj/kern/kernel.asm	/^f0107104:	8d 75 a8             	lea    -0x58(%ebp),%esi$/;"	l
f0107107	obj/kern/kernel.asm	/^f0107107:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010710a	obj/kern/kernel.asm	/^f010710a:	56                   	push   %esi$/;"	l
f010710b	obj/kern/kernel.asm	/^f010710b:	50                   	push   %eax$/;"	l
f010710c	obj/kern/kernel.asm	/^f010710c:	e8 2f e8 ff ff       	call   f0105940 <debuginfo_eip>$/;"	l
f0107111	obj/kern/kernel.asm	/^f0107111:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107114	obj/kern/kernel.asm	/^f0107114:	85 c0                	test   %eax,%eax$/;"	l
f0107116	obj/kern/kernel.asm	/^f0107116:	78 27                	js     f010713f <spin_unlock+0xa5>$/;"	l
f0107118	obj/kern/kernel.asm	/^f0107118:	8b 03                	mov    (%ebx),%eax$/;"	l
f010711a	obj/kern/kernel.asm	/^f010711a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010711d	obj/kern/kernel.asm	/^f010711d:	89 c2                	mov    %eax,%edx$/;"	l
f010711f	obj/kern/kernel.asm	/^f010711f:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0107122	obj/kern/kernel.asm	/^f0107122:	52                   	push   %edx$/;"	l
f0107123	obj/kern/kernel.asm	/^f0107123:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
f0107126	obj/kern/kernel.asm	/^f0107126:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
f0107129	obj/kern/kernel.asm	/^f0107129:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
f010712c	obj/kern/kernel.asm	/^f010712c:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
f010712f	obj/kern/kernel.asm	/^f010712f:	50                   	push   %eax$/;"	l
f0107130	obj/kern/kernel.asm	/^f0107130:	68 62 9c 10 f0       	push   $0xf0109c62$/;"	l
f0107135	obj/kern/kernel.asm	/^f0107135:	e8 ae cd ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010713a	obj/kern/kernel.asm	/^f010713a:	83 c4 20             	add    $0x20,%esp$/;"	l
f010713d	obj/kern/kernel.asm	/^f010713d:	eb 12                	jmp    f0107151 <spin_unlock+0xb7>$/;"	l
f010713f	obj/kern/kernel.asm	/^f010713f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107142	obj/kern/kernel.asm	/^f0107142:	ff 33                	pushl  (%ebx)$/;"	l
f0107144	obj/kern/kernel.asm	/^f0107144:	68 79 9c 10 f0       	push   $0xf0109c79$/;"	l
f0107149	obj/kern/kernel.asm	/^f0107149:	e8 9a cd ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010714e	obj/kern/kernel.asm	/^f010714e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107151	obj/kern/kernel.asm	/^f0107151:	39 fb                	cmp    %edi,%ebx$/;"	l
f0107153	obj/kern/kernel.asm	/^f0107153:	74 09                	je     f010715e <spin_unlock+0xc4>$/;"	l
f0107155	obj/kern/kernel.asm	/^f0107155:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0107158	obj/kern/kernel.asm	/^f0107158:	8b 03                	mov    (%ebx),%eax$/;"	l
f010715a	obj/kern/kernel.asm	/^f010715a:	85 c0                	test   %eax,%eax$/;"	l
f010715c	obj/kern/kernel.asm	/^f010715c:	75 a9                	jne    f0107107 <spin_unlock+0x6d>$/;"	l
f010715e	obj/kern/kernel.asm	/^f010715e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107161	obj/kern/kernel.asm	/^f0107161:	68 81 9c 10 f0       	push   $0xf0109c81$/;"	l
f0107166	obj/kern/kernel.asm	/^f0107166:	68 8a 00 00 00       	push   $0x8a$/;"	l
f010716b	obj/kern/kernel.asm	/^f010716b:	68 52 9c 10 f0       	push   $0xf0109c52$/;"	l
f0107170	obj/kern/kernel.asm	/^f0107170:	e8 cb 8e ff ff       	call   f0100040 <_panic>$/;"	l
f0107175	obj/kern/kernel.asm	/^f0107175:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)$/;"	l
f010717c	obj/kern/kernel.asm	/^f010717c:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107186	obj/kern/kernel.asm	/^f0107186:	6a 01                	push   $0x1$/;"	l
f0107188	obj/kern/kernel.asm	/^f0107188:	53                   	push   %ebx$/;"	l
f0107189	obj/kern/kernel.asm	/^f0107189:	e8 06 fe ff ff       	call   f0106f94 <atomic_return_and_add>$/;"	l
f010718e	obj/kern/kernel.asm	/^f010718e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107191	obj/kern/kernel.asm	/^f0107191:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0107194	obj/kern/kernel.asm	/^f0107194:	5b                   	pop    %ebx$/;"	l
f0107195	obj/kern/kernel.asm	/^f0107195:	5e                   	pop    %esi$/;"	l
f0107196	obj/kern/kernel.asm	/^f0107196:	5f                   	pop    %edi$/;"	l
f0107197	obj/kern/kernel.asm	/^f0107197:	5d                   	pop    %ebp$/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198:	c3                   	ret    $/;"	l
f0107199	obj/kern/kernel.asm	/^f0107199 <tx_mem_init>:$/;"	l
f0107199	obj/kern/kernel.asm	/^f0107199:	55                   	push   %ebp$/;"	l
f010719a	obj/kern/kernel.asm	/^f010719a:	89 e5                	mov    %esp,%ebp$/;"	l
f010719c	obj/kern/kernel.asm	/^f010719c:	53                   	push   %ebx$/;"	l
f010719d	obj/kern/kernel.asm	/^f010719d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01071a0	obj/kern/kernel.asm	/^f01071a0:	68 00 04 00 00       	push   $0x400$/;"	l
f01071a5	obj/kern/kernel.asm	/^f01071a5:	6a 00                	push   $0x0$/;"	l
f01071a7	obj/kern/kernel.asm	/^f01071a7:	68 90 a3 31 f0       	push   $0xf031a390$/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	e8 31 f5 ff ff       	call   f01066e2 <memset>$/;"	l
f01071b1	obj/kern/kernel.asm	/^f01071b1:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01071b4	obj/kern/kernel.asm	/^f01071b4:	68 80 7b 01 00       	push   $0x17b80$/;"	l
f01071b9	obj/kern/kernel.asm	/^f01071b9:	6a 00                	push   $0x0$/;"	l
f01071bb	obj/kern/kernel.asm	/^f01071bb:	68 10 28 30 f0       	push   $0xf0302810$/;"	l
f01071c0	obj/kern/kernel.asm	/^f01071c0:	e8 1d f5 ff ff       	call   f01066e2 <memset>$/;"	l
f01071c5	obj/kern/kernel.asm	/^f01071c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	b8 10 28 30 f0       	mov    $0xf0302810,%eax$/;"	l
f01071cd	obj/kern/kernel.asm	/^f01071cd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01071d2	obj/kern/kernel.asm	/^f01071d2:	0f 87 e0 00 00 00    	ja     f01072b8 <tx_mem_init+0x11f>$/;"	l
f01071d8	obj/kern/kernel.asm	/^f01071d8:	eb 0b                	jmp    f01071e5 <tx_mem_init+0x4c>$/;"	l
f01071da	obj/kern/kernel.asm	/^f01071da:	89 c1                	mov    %eax,%ecx$/;"	l
f01071dc	obj/kern/kernel.asm	/^f01071dc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01071e1	obj/kern/kernel.asm	/^f01071e1:	77 19                	ja     f01071fc <tx_mem_init+0x63>$/;"	l
f01071e3	obj/kern/kernel.asm	/^f01071e3:	eb 05                	jmp    f01071ea <tx_mem_init+0x51>$/;"	l
f01071e5	obj/kern/kernel.asm	/^f01071e5:	b9 10 28 30 f0       	mov    $0xf0302810,%ecx$/;"	l
f01071ea	obj/kern/kernel.asm	/^f01071ea:	51                   	push   %ecx$/;"	l
f01071eb	obj/kern/kernel.asm	/^f01071eb:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f01071f0	obj/kern/kernel.asm	/^f01071f0:	6a 12                	push   $0x12$/;"	l
f01071f2	obj/kern/kernel.asm	/^f01071f2:	68 c2 9c 10 f0       	push   $0xf0109cc2$/;"	l
f01071f7	obj/kern/kernel.asm	/^f01071f7:	e8 44 8e ff ff       	call   f0100040 <_panic>$/;"	l
f01071fc	obj/kern/kernel.asm	/^f01071fc:	8d 88 00 00 00 10    	lea    0x10000000(%eax),%ecx$/;"	l
f0107202	obj/kern/kernel.asm	/^f0107202:	89 4a f4             	mov    %ecx,-0xc(%edx)$/;"	l
f0107205	obj/kern/kernel.asm	/^f0107205:	c7 42 f8 00 00 00 00 	movl   $0x0,-0x8(%edx)$/;"	l
f010720c	obj/kern/kernel.asm	/^f010720c:	80 0a 01             	orb    $0x1,(%edx)$/;"	l
f010720f	obj/kern/kernel.asm	/^f010720f:	05 ee 05 00 00       	add    $0x5ee,%eax$/;"	l
f0107214	obj/kern/kernel.asm	/^f0107214:	83 c2 10             	add    $0x10,%edx$/;"	l
f0107217	obj/kern/kernel.asm	/^f0107217:	39 d8                	cmp    %ebx,%eax$/;"	l
f0107219	obj/kern/kernel.asm	/^f0107219:	75 bf                	jne    f01071da <tx_mem_init+0x41>$/;"	l
f010721b	obj/kern/kernel.asm	/^f010721b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010721e	obj/kern/kernel.asm	/^f010721e:	68 00 08 00 00       	push   $0x800$/;"	l
f0107223	obj/kern/kernel.asm	/^f0107223:	6a 00                	push   $0x0$/;"	l
f0107225	obj/kern/kernel.asm	/^f0107225:	68 10 20 30 f0       	push   $0xf0302010$/;"	l
f010722a	obj/kern/kernel.asm	/^f010722a:	e8 b3 f4 ff ff       	call   f01066e2 <memset>$/;"	l
f010722f	obj/kern/kernel.asm	/^f010722f:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107232	obj/kern/kernel.asm	/^f0107232:	68 00 00 04 00       	push   $0x40000$/;"	l
f0107237	obj/kern/kernel.asm	/^f0107237:	6a 00                	push   $0x0$/;"	l
f0107239	obj/kern/kernel.asm	/^f0107239:	68 10 20 2c f0       	push   $0xf02c2010$/;"	l
f010723e	obj/kern/kernel.asm	/^f010723e:	e8 9f f4 ff ff       	call   f01066e2 <memset>$/;"	l
f0107243	obj/kern/kernel.asm	/^f0107243:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107246	obj/kern/kernel.asm	/^f0107246:	b8 10 20 2c f0       	mov    $0xf02c2010,%eax$/;"	l
f010724b	obj/kern/kernel.asm	/^f010724b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0107250	obj/kern/kernel.asm	/^f0107250:	77 41                	ja     f0107293 <tx_mem_init+0xfa>$/;"	l
f0107252	obj/kern/kernel.asm	/^f0107252:	eb 0b                	jmp    f010725f <tx_mem_init+0xc6>$/;"	l
f0107254	obj/kern/kernel.asm	/^f0107254:	89 c1                	mov    %eax,%ecx$/;"	l
f0107256	obj/kern/kernel.asm	/^f0107256:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010725b	obj/kern/kernel.asm	/^f010725b:	77 19                	ja     f0107276 <tx_mem_init+0xdd>$/;"	l
f010725d	obj/kern/kernel.asm	/^f010725d:	eb 05                	jmp    f0107264 <tx_mem_init+0xcb>$/;"	l
f010725f	obj/kern/kernel.asm	/^f010725f:	b9 10 20 2c f0       	mov    $0xf02c2010,%ecx$/;"	l
f0107264	obj/kern/kernel.asm	/^f0107264:	51                   	push   %ecx$/;"	l
f0107265	obj/kern/kernel.asm	/^f0107265:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f010726a	obj/kern/kernel.asm	/^f010726a:	6a 1a                	push   $0x1a$/;"	l
f010726c	obj/kern/kernel.asm	/^f010726c:	68 c2 9c 10 f0       	push   $0xf0109cc2$/;"	l
f0107271	obj/kern/kernel.asm	/^f0107271:	e8 ca 8d ff ff       	call   f0100040 <_panic>$/;"	l
f0107276	obj/kern/kernel.asm	/^f0107276:	8d 88 00 00 00 10    	lea    0x10000000(%eax),%ecx$/;"	l
f010727c	obj/kern/kernel.asm	/^f010727c:	89 0a                	mov    %ecx,(%edx)$/;"	l
f010727e	obj/kern/kernel.asm	/^f010727e:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f0107285	obj/kern/kernel.asm	/^f0107285:	05 00 08 00 00       	add    $0x800,%eax$/;"	l
f010728a	obj/kern/kernel.asm	/^f010728a:	83 c2 10             	add    $0x10,%edx$/;"	l
f010728d	obj/kern/kernel.asm	/^f010728d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010728f	obj/kern/kernel.asm	/^f010728f:	75 c3                	jne    f0107254 <tx_mem_init+0xbb>$/;"	l
f0107291	obj/kern/kernel.asm	/^f0107291:	eb 54                	jmp    f01072e7 <tx_mem_init+0x14e>$/;"	l
f0107293	obj/kern/kernel.asm	/^f0107293:	b8 10 20 2c 00       	mov    $0x2c2010,%eax$/;"	l
f0107298	obj/kern/kernel.asm	/^f0107298:	a3 10 20 30 f0       	mov    %eax,0xf0302010$/;"	l
f010729d	obj/kern/kernel.asm	/^f010729d:	c7 05 14 20 30 f0 00 	movl   $0x0,0xf0302014$/;"	l
f01072a4	obj/kern/kernel.asm	/^f01072a4:	00 00 00 $/;"	l
f01072a7	obj/kern/kernel.asm	/^f01072a7:	b8 10 28 2c f0       	mov    $0xf02c2810,%eax$/;"	l
f01072ac	obj/kern/kernel.asm	/^f01072ac:	ba 20 20 30 f0       	mov    $0xf0302020,%edx$/;"	l
f01072b1	obj/kern/kernel.asm	/^f01072b1:	bb 10 20 30 f0       	mov    $0xf0302010,%ebx$/;"	l
f01072b6	obj/kern/kernel.asm	/^f01072b6:	eb 9c                	jmp    f0107254 <tx_mem_init+0xbb>$/;"	l
f01072b8	obj/kern/kernel.asm	/^f01072b8:	b8 10 28 30 00       	mov    $0x302810,%eax$/;"	l
f01072bd	obj/kern/kernel.asm	/^f01072bd:	a3 90 a3 31 f0       	mov    %eax,0xf031a390$/;"	l
f01072c2	obj/kern/kernel.asm	/^f01072c2:	c7 05 94 a3 31 f0 00 	movl   $0x0,0xf031a394$/;"	l
f01072c9	obj/kern/kernel.asm	/^f01072c9:	00 00 00 $/;"	l
f01072cc	obj/kern/kernel.asm	/^f01072cc:	80 0d 9c a3 31 f0 01 	orb    $0x1,0xf031a39c$/;"	l
f01072d3	obj/kern/kernel.asm	/^f01072d3:	b8 fe 2d 30 f0       	mov    $0xf0302dfe,%eax$/;"	l
f01072d8	obj/kern/kernel.asm	/^f01072d8:	ba ac a3 31 f0       	mov    $0xf031a3ac,%edx$/;"	l
f01072dd	obj/kern/kernel.asm	/^f01072dd:	bb 90 a3 31 f0       	mov    $0xf031a390,%ebx$/;"	l
f01072e2	obj/kern/kernel.asm	/^f01072e2:	e9 f3 fe ff ff       	jmp    f01071da <tx_mem_init+0x41>$/;"	l
f01072e7	obj/kern/kernel.asm	/^f01072e7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01072ea	obj/kern/kernel.asm	/^f01072ea:	c9                   	leave  $/;"	l
f01072eb	obj/kern/kernel.asm	/^f01072eb:	c3                   	ret    $/;"	l
f01072ec	obj/kern/kernel.asm	/^f01072ec <transmit_init>:$/;"	l
f01072ec	obj/kern/kernel.asm	/^f01072ec:	55                   	push   %ebp$/;"	l
f01072ed	obj/kern/kernel.asm	/^f01072ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01072ef	obj/kern/kernel.asm	/^f01072ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01072f2	obj/kern/kernel.asm	/^f01072f2:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f01072f8	obj/kern/kernel.asm	/^f01072f8:	b8 90 a3 31 f0       	mov    $0xf031a390,%eax$/;"	l
f01072fd	obj/kern/kernel.asm	/^f01072fd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0107302	obj/kern/kernel.asm	/^f0107302:	77 12                	ja     f0107316 <transmit_init+0x2a>$/;"	l
f0107304	obj/kern/kernel.asm	/^f0107304:	50                   	push   %eax$/;"	l
f0107305	obj/kern/kernel.asm	/^f0107305:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f010730a	obj/kern/kernel.asm	/^f010730a:	6a 1f                	push   $0x1f$/;"	l
f010730c	obj/kern/kernel.asm	/^f010730c:	68 c2 9c 10 f0       	push   $0xf0109cc2$/;"	l
f0107311	obj/kern/kernel.asm	/^f0107311:	e8 2a 8d ff ff       	call   f0100040 <_panic>$/;"	l
f0107316	obj/kern/kernel.asm	/^f0107316:	c7 82 00 38 00 00 90 	movl   $0x31a390,0x3800(%edx)$/;"	l
f010731d	obj/kern/kernel.asm	/^f010731d:	a3 31 00 $/;"	l
f0107320	obj/kern/kernel.asm	/^f0107320:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107325	obj/kern/kernel.asm	/^f0107325:	c7 80 04 38 00 00 00 	movl   $0x0,0x3804(%eax)$/;"	l
f010732c	obj/kern/kernel.asm	/^f010732c:	00 00 00 $/;"	l
f010732f	obj/kern/kernel.asm	/^f010732f:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107334	obj/kern/kernel.asm	/^f0107334:	c7 80 08 38 00 00 00 	movl   $0x400,0x3808(%eax)$/;"	l
f010733b	obj/kern/kernel.asm	/^f010733b:	04 00 00 $/;"	l
f010733e	obj/kern/kernel.asm	/^f010733e:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107343	obj/kern/kernel.asm	/^f0107343:	c7 80 10 38 00 00 00 	movl   $0x0,0x3810(%eax)$/;"	l
f010734a	obj/kern/kernel.asm	/^f010734a:	00 00 00 $/;"	l
f010734d	obj/kern/kernel.asm	/^f010734d:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107352	obj/kern/kernel.asm	/^f0107352:	c7 80 18 38 00 00 00 	movl   $0x0,0x3818(%eax)$/;"	l
f0107359	obj/kern/kernel.asm	/^f0107359:	00 00 00 $/;"	l
f010735c	obj/kern/kernel.asm	/^f010735c:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f0107362	obj/kern/kernel.asm	/^f0107362:	8b 82 00 04 00 00    	mov    0x400(%edx),%eax$/;"	l
f0107368	obj/kern/kernel.asm	/^f0107368:	0d 0a 01 04 00       	or     $0x4010a,%eax$/;"	l
f010736d	obj/kern/kernel.asm	/^f010736d:	89 82 00 04 00 00    	mov    %eax,0x400(%edx)$/;"	l
f0107373	obj/kern/kernel.asm	/^f0107373:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107378	obj/kern/kernel.asm	/^f0107378:	c7 80 10 04 00 00 0a 	movl   $0x60100a,0x410(%eax)$/;"	l
f010737f	obj/kern/kernel.asm	/^f010737f:	10 60 00 $/;"	l
f0107382	obj/kern/kernel.asm	/^f0107382:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107387	obj/kern/kernel.asm	/^f0107387:	c7 80 00 54 00 00 52 	movl   $0x12005452,0x5400(%eax)$/;"	l
f010738e	obj/kern/kernel.asm	/^f010738e:	54 00 12 $/;"	l
f0107391	obj/kern/kernel.asm	/^f0107391:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107396	obj/kern/kernel.asm	/^f0107396:	c7 80 04 54 00 00 34 	movl   $0x80005634,0x5404(%eax)$/;"	l
f010739d	obj/kern/kernel.asm	/^f010739d:	56 00 80 $/;"	l
f01073a0	obj/kern/kernel.asm	/^f01073a0:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f01073a5	obj/kern/kernel.asm	/^f01073a5:	ba 10 20 2c f0       	mov    $0xf02c2010,%edx$/;"	l
f01073aa	obj/kern/kernel.asm	/^f01073aa:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01073b0	obj/kern/kernel.asm	/^f01073b0:	77 12                	ja     f01073c4 <transmit_init+0xd8>$/;"	l
f01073b2	obj/kern/kernel.asm	/^f01073b2:	52                   	push   %edx$/;"	l
f01073b3	obj/kern/kernel.asm	/^f01073b3:	68 44 7f 10 f0       	push   $0xf0107f44$/;"	l
f01073b8	obj/kern/kernel.asm	/^f01073b8:	6a 2f                	push   $0x2f$/;"	l
f01073ba	obj/kern/kernel.asm	/^f01073ba:	68 c2 9c 10 f0       	push   $0xf0109cc2$/;"	l
f01073bf	obj/kern/kernel.asm	/^f01073bf:	e8 7c 8c ff ff       	call   f0100040 <_panic>$/;"	l
f01073c4	obj/kern/kernel.asm	/^f01073c4:	c7 80 00 28 00 00 10 	movl   $0x2c2010,0x2800(%eax)$/;"	l
f01073cb	obj/kern/kernel.asm	/^f01073cb:	20 2c 00 $/;"	l
f01073ce	obj/kern/kernel.asm	/^f01073ce:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f01073d3	obj/kern/kernel.asm	/^f01073d3:	c7 80 04 28 00 00 00 	movl   $0x0,0x2804(%eax)$/;"	l
f01073da	obj/kern/kernel.asm	/^f01073da:	00 00 00 $/;"	l
f01073dd	obj/kern/kernel.asm	/^f01073dd:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f01073e2	obj/kern/kernel.asm	/^f01073e2:	c7 80 08 28 00 00 00 	movl   $0x800,0x2808(%eax)$/;"	l
f01073e9	obj/kern/kernel.asm	/^f01073e9:	08 00 00 $/;"	l
f01073ec	obj/kern/kernel.asm	/^f01073ec:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f01073f1	obj/kern/kernel.asm	/^f01073f1:	c7 80 10 28 00 00 01 	movl   $0x1,0x2810(%eax)$/;"	l
f01073f8	obj/kern/kernel.asm	/^f01073f8:	00 00 00 $/;"	l
f01073fb	obj/kern/kernel.asm	/^f01073fb:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107400	obj/kern/kernel.asm	/^f0107400:	c7 80 18 28 00 00 00 	movl   $0x0,0x2818(%eax)$/;"	l
f0107407	obj/kern/kernel.asm	/^f0107407:	00 00 00 $/;"	l
f010740a	obj/kern/kernel.asm	/^f010740a:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f010740f	obj/kern/kernel.asm	/^f010740f:	c7 80 00 01 00 00 02 	movl   $0x2,0x100(%eax)$/;"	l
f0107416	obj/kern/kernel.asm	/^f0107416:	00 00 00 $/;"	l
f0107419	obj/kern/kernel.asm	/^f0107419:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f010741f	obj/kern/kernel.asm	/^f010741f:	8b 82 00 01 00 00    	mov    0x100(%edx),%eax$/;"	l
f0107425	obj/kern/kernel.asm	/^f0107425:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
f0107428	obj/kern/kernel.asm	/^f0107428:	89 82 00 01 00 00    	mov    %eax,0x100(%edx)$/;"	l
f010742e	obj/kern/kernel.asm	/^f010742e:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f0107434	obj/kern/kernel.asm	/^f0107434:	8b 82 00 01 00 00    	mov    0x100(%edx),%eax$/;"	l
f010743a	obj/kern/kernel.asm	/^f010743a:	24 3f                	and    $0x3f,%al$/;"	l
f010743c	obj/kern/kernel.asm	/^f010743c:	89 82 00 01 00 00    	mov    %eax,0x100(%edx)$/;"	l
f0107442	obj/kern/kernel.asm	/^f0107442:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f0107448	obj/kern/kernel.asm	/^f0107448:	8b 82 00 01 00 00    	mov    0x100(%edx),%eax$/;"	l
f010744e	obj/kern/kernel.asm	/^f010744e:	80 e4 fc             	and    $0xfc,%ah$/;"	l
f0107451	obj/kern/kernel.asm	/^f0107451:	89 82 00 01 00 00    	mov    %eax,0x100(%edx)$/;"	l
f0107457	obj/kern/kernel.asm	/^f0107457:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f010745d	obj/kern/kernel.asm	/^f010745d:	8b 82 00 01 00 00    	mov    0x100(%edx),%eax$/;"	l
f0107463	obj/kern/kernel.asm	/^f0107463:	80 e4 cf             	and    $0xcf,%ah$/;"	l
f0107466	obj/kern/kernel.asm	/^f0107466:	89 82 00 01 00 00    	mov    %eax,0x100(%edx)$/;"	l
f010746c	obj/kern/kernel.asm	/^f010746c:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f0107472	obj/kern/kernel.asm	/^f0107472:	8b 82 00 01 00 00    	mov    0x100(%edx),%eax$/;"	l
f0107478	obj/kern/kernel.asm	/^f0107478:	80 cc 80             	or     $0x80,%ah$/;"	l
f010747b	obj/kern/kernel.asm	/^f010747b:	89 82 00 01 00 00    	mov    %eax,0x100(%edx)$/;"	l
f0107481	obj/kern/kernel.asm	/^f0107481:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f0107487	obj/kern/kernel.asm	/^f0107487:	8b 82 00 01 00 00    	mov    0x100(%edx),%eax$/;"	l
f010748d	obj/kern/kernel.asm	/^f010748d:	25 ff ff fc ff       	and    $0xfffcffff,%eax$/;"	l
f0107492	obj/kern/kernel.asm	/^f0107492:	89 82 00 01 00 00    	mov    %eax,0x100(%edx)$/;"	l
f0107498	obj/kern/kernel.asm	/^f0107498:	8b 15 ac 0e 28 f0    	mov    0xf0280eac,%edx$/;"	l
f010749e	obj/kern/kernel.asm	/^f010749e:	8b 82 00 01 00 00    	mov    0x100(%edx),%eax$/;"	l
f01074a4	obj/kern/kernel.asm	/^f01074a4:	0d 00 00 00 04       	or     $0x4000000,%eax$/;"	l
f01074a9	obj/kern/kernel.asm	/^f01074a9:	89 82 00 01 00 00    	mov    %eax,0x100(%edx)$/;"	l
f01074af	obj/kern/kernel.asm	/^f01074af:	c9                   	leave  $/;"	l
f01074b0	obj/kern/kernel.asm	/^f01074b0:	c3                   	ret    $/;"	l
f01074b1	obj/kern/kernel.asm	/^f01074b1 <e1000_transmit>:$/;"	l
f01074b1	obj/kern/kernel.asm	/^f01074b1:	55                   	push   %ebp$/;"	l
f01074b2	obj/kern/kernel.asm	/^f01074b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01074b4	obj/kern/kernel.asm	/^f01074b4:	57                   	push   %edi$/;"	l
f01074b5	obj/kern/kernel.asm	/^f01074b5:	56                   	push   %esi$/;"	l
f01074b6	obj/kern/kernel.asm	/^f01074b6:	53                   	push   %ebx$/;"	l
f01074b7	obj/kern/kernel.asm	/^f01074b7:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01074ba	obj/kern/kernel.asm	/^f01074ba:	81 7d 0c ee 05 00 00 	cmpl   $0x5ee,0xc(%ebp)$/;"	l
f01074c1	obj/kern/kernel.asm	/^f01074c1:	76 1a                	jbe    f01074dd <e1000_transmit+0x2c>$/;"	l
f01074c3	obj/kern/kernel.asm	/^f01074c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01074c6	obj/kern/kernel.asm	/^f01074c6:	68 cf 9c 10 f0       	push   $0xf0109ccf$/;"	l
f01074cb	obj/kern/kernel.asm	/^f01074cb:	e8 18 ca ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01074d0	obj/kern/kernel.asm	/^f01074d0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01074d3	obj/kern/kernel.asm	/^f01074d3:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
f01074d8	obj/kern/kernel.asm	/^f01074d8:	e9 de 00 00 00       	jmp    f01075bb <e1000_transmit+0x10a>$/;"	l
f01074dd	obj/kern/kernel.asm	/^f01074dd:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f01074e2	obj/kern/kernel.asm	/^f01074e2:	8b b0 18 38 00 00    	mov    0x3818(%eax),%esi$/;"	l
f01074e8	obj/kern/kernel.asm	/^f01074e8:	89 f7                	mov    %esi,%edi$/;"	l
f01074ea	obj/kern/kernel.asm	/^f01074ea:	c1 e7 04             	shl    $0x4,%edi$/;"	l
f01074ed	obj/kern/kernel.asm	/^f01074ed:	8d 9f 90 a3 31 f0    	lea    -0xfce5c70(%edi),%ebx$/;"	l
f01074f3	obj/kern/kernel.asm	/^f01074f3:	8b 87 90 a3 31 f0    	mov    -0xfce5c70(%edi),%eax$/;"	l
f01074f9	obj/kern/kernel.asm	/^f01074f9:	8b 97 94 a3 31 f0    	mov    -0xfce5c6c(%edi),%edx$/;"	l
f01074ff	obj/kern/kernel.asm	/^f01074ff:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107502	obj/kern/kernel.asm	/^f0107502:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0107505	obj/kern/kernel.asm	/^f0107505:	0f b6 43 0a          	movzbl 0xa(%ebx),%eax$/;"	l
f0107509	obj/kern/kernel.asm	/^f0107509:	88 45 df             	mov    %al,-0x21(%ebp)$/;"	l
f010750c	obj/kern/kernel.asm	/^f010750c:	0f b6 43 0b          	movzbl 0xb(%ebx),%eax$/;"	l
f0107510	obj/kern/kernel.asm	/^f0107510:	88 45 de             	mov    %al,-0x22(%ebp)$/;"	l
f0107513	obj/kern/kernel.asm	/^f0107513:	0f b6 43 0c          	movzbl 0xc(%ebx),%eax$/;"	l
f0107517	obj/kern/kernel.asm	/^f0107517:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
f010751a	obj/kern/kernel.asm	/^f010751a:	0f b6 53 0d          	movzbl 0xd(%ebx),%edx$/;"	l
f010751e	obj/kern/kernel.asm	/^f010751e:	88 55 dc             	mov    %dl,-0x24(%ebp)$/;"	l
f0107521	obj/kern/kernel.asm	/^f0107521:	0f b7 4b 0e          	movzwl 0xe(%ebx),%ecx$/;"	l
f0107525	obj/kern/kernel.asm	/^f0107525:	66 89 4d da          	mov    %cx,-0x26(%ebp)$/;"	l
f0107529	obj/kern/kernel.asm	/^f0107529:	a8 01                	test   $0x1,%al$/;"	l
f010752b	obj/kern/kernel.asm	/^f010752b:	75 17                	jne    f0107544 <e1000_transmit+0x93>$/;"	l
f010752d	obj/kern/kernel.asm	/^f010752d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107530	obj/kern/kernel.asm	/^f0107530:	68 e9 9c 10 f0       	push   $0xf0109ce9$/;"	l
f0107535	obj/kern/kernel.asm	/^f0107535:	e8 ae c9 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010753a	obj/kern/kernel.asm	/^f010753a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010753d	obj/kern/kernel.asm	/^f010753d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
f0107542	obj/kern/kernel.asm	/^f0107542:	eb 77                	jmp    f01075bb <e1000_transmit+0x10a>$/;"	l
f0107544	obj/kern/kernel.asm	/^f0107544:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107547	obj/kern/kernel.asm	/^f0107547:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010754a	obj/kern/kernel.asm	/^f010754a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010754d	obj/kern/kernel.asm	/^f010754d:	69 c6 ee 05 00 00    	imul   $0x5ee,%esi,%eax$/;"	l
f0107553	obj/kern/kernel.asm	/^f0107553:	05 10 28 30 f0       	add    $0xf0302810,%eax$/;"	l
f0107558	obj/kern/kernel.asm	/^f0107558:	50                   	push   %eax$/;"	l
f0107559	obj/kern/kernel.asm	/^f0107559:	e8 d1 f1 ff ff       	call   f010672f <memmove>$/;"	l
f010755e	obj/kern/kernel.asm	/^f010755e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107561	obj/kern/kernel.asm	/^f0107561:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0107564	obj/kern/kernel.asm	/^f0107564:	89 87 90 a3 31 f0    	mov    %eax,-0xfce5c70(%edi)$/;"	l
f010756a	obj/kern/kernel.asm	/^f010756a:	89 97 94 a3 31 f0    	mov    %edx,-0xfce5c6c(%edi)$/;"	l
f0107570	obj/kern/kernel.asm	/^f0107570:	0f b7 45 0c          	movzwl 0xc(%ebp),%eax$/;"	l
f0107574	obj/kern/kernel.asm	/^f0107574:	66 89 43 08          	mov    %ax,0x8(%ebx)$/;"	l
f0107578	obj/kern/kernel.asm	/^f0107578:	0f b6 45 df          	movzbl -0x21(%ebp),%eax$/;"	l
f010757c	obj/kern/kernel.asm	/^f010757c:	88 43 0a             	mov    %al,0xa(%ebx)$/;"	l
f010757f	obj/kern/kernel.asm	/^f010757f:	0f b6 45 de          	movzbl -0x22(%ebp),%eax$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	83 c8 09             	or     $0x9,%eax$/;"	l
f0107586	obj/kern/kernel.asm	/^f0107586:	88 43 0b             	mov    %al,0xb(%ebx)$/;"	l
f0107589	obj/kern/kernel.asm	/^f0107589:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
f010758d	obj/kern/kernel.asm	/^f010758d:	83 e0 fe             	and    $0xfffffffe,%eax$/;"	l
f0107590	obj/kern/kernel.asm	/^f0107590:	88 43 0c             	mov    %al,0xc(%ebx)$/;"	l
f0107593	obj/kern/kernel.asm	/^f0107593:	0f b6 45 dc          	movzbl -0x24(%ebp),%eax$/;"	l
f0107597	obj/kern/kernel.asm	/^f0107597:	88 43 0d             	mov    %al,0xd(%ebx)$/;"	l
f010759a	obj/kern/kernel.asm	/^f010759a:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
f010759e	obj/kern/kernel.asm	/^f010759e:	66 89 43 0e          	mov    %ax,0xe(%ebx)$/;"	l
f01075a2	obj/kern/kernel.asm	/^f01075a2:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f01075a7	obj/kern/kernel.asm	/^f01075a7:	83 c6 01             	add    $0x1,%esi$/;"	l
f01075aa	obj/kern/kernel.asm	/^f01075aa:	83 e6 3f             	and    $0x3f,%esi$/;"	l
f01075ad	obj/kern/kernel.asm	/^f01075ad:	89 b0 18 38 00 00    	mov    %esi,0x3818(%eax)$/;"	l
f01075b3	obj/kern/kernel.asm	/^f01075b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01075b6	obj/kern/kernel.asm	/^f01075b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01075bb	obj/kern/kernel.asm	/^f01075bb:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f01075be	obj/kern/kernel.asm	/^f01075be:	5b                   	pop    %ebx$/;"	l
f01075bf	obj/kern/kernel.asm	/^f01075bf:	5e                   	pop    %esi$/;"	l
f01075c0	obj/kern/kernel.asm	/^f01075c0:	5f                   	pop    %edi$/;"	l
f01075c1	obj/kern/kernel.asm	/^f01075c1:	5d                   	pop    %ebp$/;"	l
f01075c2	obj/kern/kernel.asm	/^f01075c2:	c3                   	ret    $/;"	l
f01075c3	obj/kern/kernel.asm	/^f01075c3 <e1000_receive>:$/;"	l
f01075c3	obj/kern/kernel.asm	/^f01075c3:	55                   	push   %ebp$/;"	l
f01075c4	obj/kern/kernel.asm	/^f01075c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01075c6	obj/kern/kernel.asm	/^f01075c6:	56                   	push   %esi$/;"	l
f01075c7	obj/kern/kernel.asm	/^f01075c7:	53                   	push   %ebx$/;"	l
f01075c8	obj/kern/kernel.asm	/^f01075c8:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f01075cd	obj/kern/kernel.asm	/^f01075cd:	8b 98 18 28 00 00    	mov    0x2818(%eax),%ebx$/;"	l
f01075d3	obj/kern/kernel.asm	/^f01075d3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01075d6	obj/kern/kernel.asm	/^f01075d6:	83 e3 7f             	and    $0x7f,%ebx$/;"	l
f01075d9	obj/kern/kernel.asm	/^f01075d9:	0f b6 d3             	movzbl %bl,%edx$/;"	l
f01075dc	obj/kern/kernel.asm	/^f01075dc:	89 d1                	mov    %edx,%ecx$/;"	l
f01075de	obj/kern/kernel.asm	/^f01075de:	c1 e1 04             	shl    $0x4,%ecx$/;"	l
f01075e1	obj/kern/kernel.asm	/^f01075e1:	0f b7 b1 18 20 30 f0 	movzwl -0xfcfdfe8(%ecx),%esi$/;"	l
f01075e8	obj/kern/kernel.asm	/^f01075e8:	81 c1 10 20 30 f0    	add    $0xf0302010,%ecx$/;"	l
f01075ee	obj/kern/kernel.asm	/^f01075ee:	f6 41 0c 01          	testb  $0x1,0xc(%ecx)$/;"	l
f01075f2	obj/kern/kernel.asm	/^f01075f2:	74 2e                	je     f0107622 <e1000_receive+0x5f>$/;"	l
f01075f4	obj/kern/kernel.asm	/^f01075f4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01075f7	obj/kern/kernel.asm	/^f01075f7:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01075fa	obj/kern/kernel.asm	/^f01075fa:	56                   	push   %esi$/;"	l
f01075fb	obj/kern/kernel.asm	/^f01075fb:	c1 e2 0b             	shl    $0xb,%edx$/;"	l
f01075fe	obj/kern/kernel.asm	/^f01075fe:	81 c2 10 20 2c f0    	add    $0xf02c2010,%edx$/;"	l
f0107604	obj/kern/kernel.asm	/^f0107604:	52                   	push   %edx$/;"	l
f0107605	obj/kern/kernel.asm	/^f0107605:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0107608	obj/kern/kernel.asm	/^f0107608:	e8 22 f1 ff ff       	call   f010672f <memmove>$/;"	l
f010760d	obj/kern/kernel.asm	/^f010760d:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f0107612	obj/kern/kernel.asm	/^f0107612:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0107615	obj/kern/kernel.asm	/^f0107615:	89 98 18 28 00 00    	mov    %ebx,0x2818(%eax)$/;"	l
f010761b	obj/kern/kernel.asm	/^f010761b:	89 f0                	mov    %esi,%eax$/;"	l
f010761d	obj/kern/kernel.asm	/^f010761d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107620	obj/kern/kernel.asm	/^f0107620:	eb 05                	jmp    f0107627 <e1000_receive+0x64>$/;"	l
f0107622	obj/kern/kernel.asm	/^f0107622:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
f0107627	obj/kern/kernel.asm	/^f0107627:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010762a	obj/kern/kernel.asm	/^f010762a:	5b                   	pop    %ebx$/;"	l
f010762b	obj/kern/kernel.asm	/^f010762b:	5e                   	pop    %esi$/;"	l
f010762c	obj/kern/kernel.asm	/^f010762c:	5d                   	pop    %ebp$/;"	l
f010762d	obj/kern/kernel.asm	/^f010762d:	c3                   	ret    $/;"	l
f010762e	obj/kern/kernel.asm	/^f010762e <e1000_attach>:$/;"	l
f010762e	obj/kern/kernel.asm	/^f010762e:	55                   	push   %ebp$/;"	l
f010762f	obj/kern/kernel.asm	/^f010762f:	89 e5                	mov    %esp,%ebp$/;"	l
f0107631	obj/kern/kernel.asm	/^f0107631:	53                   	push   %ebx$/;"	l
f0107632	obj/kern/kernel.asm	/^f0107632:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107635	obj/kern/kernel.asm	/^f0107635:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107638	obj/kern/kernel.asm	/^f0107638:	53                   	push   %ebx$/;"	l
f0107639	obj/kern/kernel.asm	/^f0107639:	e8 31 04 00 00       	call   f0107a6f <pci_func_enable>$/;"	l
f010763e	obj/kern/kernel.asm	/^f010763e:	e8 56 fb ff ff       	call   f0107199 <tx_mem_init>$/;"	l
f0107643	obj/kern/kernel.asm	/^f0107643:	c7 04 24 1a 00 00 00 	movl   $0x1a,(%esp)$/;"	l
f010764a	obj/kern/kernel.asm	/^f010764a:	ff 73 14             	pushl  0x14(%ebx)$/;"	l
f010764d	obj/kern/kernel.asm	/^f010764d:	ff 73 2c             	pushl  0x2c(%ebx)$/;"	l
f0107650	obj/kern/kernel.asm	/^f0107650:	68 00 00 c0 ef       	push   $0xefc00000$/;"	l
f0107655	obj/kern/kernel.asm	/^f0107655:	ff 35 bc 0e 28 f0    	pushl  0xf0280ebc$/;"	l
f010765b	obj/kern/kernel.asm	/^f010765b:	e8 26 a2 ff ff       	call   f0101886 <boot_map_region>$/;"	l
f0107660	obj/kern/kernel.asm	/^f0107660:	c7 05 ac 0e 28 f0 00 	movl   $0xefc00000,0xf0280eac$/;"	l
f0107667	obj/kern/kernel.asm	/^f0107667:	00 c0 ef $/;"	l
f010766a	obj/kern/kernel.asm	/^f010766a:	a1 ac 0e 28 f0       	mov    0xf0280eac,%eax$/;"	l
f010766f	obj/kern/kernel.asm	/^f010766f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0107672	obj/kern/kernel.asm	/^f0107672:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107675	obj/kern/kernel.asm	/^f0107675:	3d 83 07 08 80       	cmp    $0x80080783,%eax$/;"	l
f010767a	obj/kern/kernel.asm	/^f010767a:	74 16                	je     f0107692 <e1000_attach+0x64>$/;"	l
f010767c	obj/kern/kernel.asm	/^f010767c:	68 9c 9c 10 f0       	push   $0xf0109c9c$/;"	l
f0107681	obj/kern/kernel.asm	/^f0107681:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0107686	obj/kern/kernel.asm	/^f0107686:	6a 6c                	push   $0x6c$/;"	l
f0107688	obj/kern/kernel.asm	/^f0107688:	68 c2 9c 10 f0       	push   $0xf0109cc2$/;"	l
f010768d	obj/kern/kernel.asm	/^f010768d:	e8 ae 89 ff ff       	call   f0100040 <_panic>$/;"	l
f0107692	obj/kern/kernel.asm	/^f0107692:	e8 55 fc ff ff       	call   f01072ec <transmit_init>$/;"	l
f0107697	obj/kern/kernel.asm	/^f0107697:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010769c	obj/kern/kernel.asm	/^f010769c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010769f	obj/kern/kernel.asm	/^f010769f:	c9                   	leave  $/;"	l
f01076a0	obj/kern/kernel.asm	/^f01076a0:	c3                   	ret    $/;"	l
f01076a1	obj/kern/kernel.asm	/^f01076a1 <pci_attach_match>:$/;"	l
f01076a1	obj/kern/kernel.asm	/^f01076a1:	55                   	push   %ebp$/;"	l
f01076a2	obj/kern/kernel.asm	/^f01076a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01076a4	obj/kern/kernel.asm	/^f01076a4:	57                   	push   %edi$/;"	l
f01076a5	obj/kern/kernel.asm	/^f01076a5:	56                   	push   %esi$/;"	l
f01076a6	obj/kern/kernel.asm	/^f01076a6:	53                   	push   %ebx$/;"	l
f01076a7	obj/kern/kernel.asm	/^f01076a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01076aa	obj/kern/kernel.asm	/^f01076aa:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01076ad	obj/kern/kernel.asm	/^f01076ad:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01076b0	obj/kern/kernel.asm	/^f01076b0:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01076b3	obj/kern/kernel.asm	/^f01076b3:	85 c0                	test   %eax,%eax$/;"	l
f01076b5	obj/kern/kernel.asm	/^f01076b5:	74 43                	je     f01076fa <pci_attach_match+0x59>$/;"	l
f01076b7	obj/kern/kernel.asm	/^f01076b7:	39 33                	cmp    %esi,(%ebx)$/;"	l
f01076b9	obj/kern/kernel.asm	/^f01076b9:	75 33                	jne    f01076ee <pci_attach_match+0x4d>$/;"	l
f01076bb	obj/kern/kernel.asm	/^f01076bb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01076be	obj/kern/kernel.asm	/^f01076be:	39 53 04             	cmp    %edx,0x4(%ebx)$/;"	l
f01076c1	obj/kern/kernel.asm	/^f01076c1:	75 2b                	jne    f01076ee <pci_attach_match+0x4d>$/;"	l
f01076c3	obj/kern/kernel.asm	/^f01076c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01076c6	obj/kern/kernel.asm	/^f01076c6:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f01076c9	obj/kern/kernel.asm	/^f01076c9:	ff d0                	call   *%eax$/;"	l
f01076cb	obj/kern/kernel.asm	/^f01076cb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01076ce	obj/kern/kernel.asm	/^f01076ce:	85 c0                	test   %eax,%eax$/;"	l
f01076d0	obj/kern/kernel.asm	/^f01076d0:	7f 2d                	jg     f01076ff <pci_attach_match+0x5e>$/;"	l
f01076d2	obj/kern/kernel.asm	/^f01076d2:	85 c0                	test   %eax,%eax$/;"	l
f01076d4	obj/kern/kernel.asm	/^f01076d4:	79 18                	jns    f01076ee <pci_attach_match+0x4d>$/;"	l
f01076d6	obj/kern/kernel.asm	/^f01076d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01076d9	obj/kern/kernel.asm	/^f01076d9:	50                   	push   %eax$/;"	l
f01076da	obj/kern/kernel.asm	/^f01076da:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01076dd	obj/kern/kernel.asm	/^f01076dd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01076e0	obj/kern/kernel.asm	/^f01076e0:	56                   	push   %esi$/;"	l
f01076e1	obj/kern/kernel.asm	/^f01076e1:	68 00 9d 10 f0       	push   $0xf0109d00$/;"	l
f01076e6	obj/kern/kernel.asm	/^f01076e6:	e8 fd c7 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01076eb	obj/kern/kernel.asm	/^f01076eb:	83 c4 20             	add    $0x20,%esp$/;"	l
f01076ee	obj/kern/kernel.asm	/^f01076ee:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01076f1	obj/kern/kernel.asm	/^f01076f1:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01076f4	obj/kern/kernel.asm	/^f01076f4:	85 c0                	test   %eax,%eax$/;"	l
f01076f6	obj/kern/kernel.asm	/^f01076f6:	75 bf                	jne    f01076b7 <pci_attach_match+0x16>$/;"	l
f01076f8	obj/kern/kernel.asm	/^f01076f8:	eb 05                	jmp    f01076ff <pci_attach_match+0x5e>$/;"	l
f01076fa	obj/kern/kernel.asm	/^f01076fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01076ff	obj/kern/kernel.asm	/^f01076ff:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0107702	obj/kern/kernel.asm	/^f0107702:	5b                   	pop    %ebx$/;"	l
f0107703	obj/kern/kernel.asm	/^f0107703:	5e                   	pop    %esi$/;"	l
f0107704	obj/kern/kernel.asm	/^f0107704:	5f                   	pop    %edi$/;"	l
f0107705	obj/kern/kernel.asm	/^f0107705:	5d                   	pop    %ebp$/;"	l
f0107706	obj/kern/kernel.asm	/^f0107706:	c3                   	ret    $/;"	l
f0107707	obj/kern/kernel.asm	/^f0107707 <pci_conf1_set_addr>:$/;"	l
f0107707	obj/kern/kernel.asm	/^f0107707:	55                   	push   %ebp$/;"	l
f0107708	obj/kern/kernel.asm	/^f0107708:	89 e5                	mov    %esp,%ebp$/;"	l
f010770a	obj/kern/kernel.asm	/^f010770a:	53                   	push   %ebx$/;"	l
f010770b	obj/kern/kernel.asm	/^f010770b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010770e	obj/kern/kernel.asm	/^f010770e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107711	obj/kern/kernel.asm	/^f0107711:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f0107716	obj/kern/kernel.asm	/^f0107716:	76 16                	jbe    f010772e <pci_conf1_set_addr+0x27>$/;"	l
f0107718	obj/kern/kernel.asm	/^f0107718:	68 58 9e 10 f0       	push   $0xf0109e58$/;"	l
f010771d	obj/kern/kernel.asm	/^f010771d:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0107722	obj/kern/kernel.asm	/^f0107722:	6a 2b                	push   $0x2b$/;"	l
f0107724	obj/kern/kernel.asm	/^f0107724:	68 62 9e 10 f0       	push   $0xf0109e62$/;"	l
f0107729	obj/kern/kernel.asm	/^f0107729:	e8 12 89 ff ff       	call   f0100040 <_panic>$/;"	l
f010772e	obj/kern/kernel.asm	/^f010772e:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f0107731	obj/kern/kernel.asm	/^f0107731:	76 16                	jbe    f0107749 <pci_conf1_set_addr+0x42>$/;"	l
f0107733	obj/kern/kernel.asm	/^f0107733:	68 6d 9e 10 f0       	push   $0xf0109e6d$/;"	l
f0107738	obj/kern/kernel.asm	/^f0107738:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f010773d	obj/kern/kernel.asm	/^f010773d:	6a 2c                	push   $0x2c$/;"	l
f010773f	obj/kern/kernel.asm	/^f010773f:	68 62 9e 10 f0       	push   $0xf0109e62$/;"	l
f0107744	obj/kern/kernel.asm	/^f0107744:	e8 f7 88 ff ff       	call   f0100040 <_panic>$/;"	l
f0107749	obj/kern/kernel.asm	/^f0107749:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f010774c	obj/kern/kernel.asm	/^f010774c:	76 16                	jbe    f0107764 <pci_conf1_set_addr+0x5d>$/;"	l
f010774e	obj/kern/kernel.asm	/^f010774e:	68 76 9e 10 f0       	push   $0xf0109e76$/;"	l
f0107753	obj/kern/kernel.asm	/^f0107753:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0107758	obj/kern/kernel.asm	/^f0107758:	6a 2d                	push   $0x2d$/;"	l
f010775a	obj/kern/kernel.asm	/^f010775a:	68 62 9e 10 f0       	push   $0xf0109e62$/;"	l
f010775f	obj/kern/kernel.asm	/^f010775f:	e8 dc 88 ff ff       	call   f0100040 <_panic>$/;"	l
f0107764	obj/kern/kernel.asm	/^f0107764:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f010776a	obj/kern/kernel.asm	/^f010776a:	76 16                	jbe    f0107782 <pci_conf1_set_addr+0x7b>$/;"	l
f010776c	obj/kern/kernel.asm	/^f010776c:	68 7f 9e 10 f0       	push   $0xf0109e7f$/;"	l
f0107771	obj/kern/kernel.asm	/^f0107771:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0107776	obj/kern/kernel.asm	/^f0107776:	6a 2e                	push   $0x2e$/;"	l
f0107778	obj/kern/kernel.asm	/^f0107778:	68 62 9e 10 f0       	push   $0xf0109e62$/;"	l
f010777d	obj/kern/kernel.asm	/^f010777d:	e8 be 88 ff ff       	call   f0100040 <_panic>$/;"	l
f0107782	obj/kern/kernel.asm	/^f0107782:	f6 c3 03             	test   $0x3,%bl$/;"	l
f0107785	obj/kern/kernel.asm	/^f0107785:	74 16                	je     f010779d <pci_conf1_set_addr+0x96>$/;"	l
f0107787	obj/kern/kernel.asm	/^f0107787:	68 8c 9e 10 f0       	push   $0xf0109e8c$/;"	l
f010778c	obj/kern/kernel.asm	/^f010778c:	68 fb 8c 10 f0       	push   $0xf0108cfb$/;"	l
f0107791	obj/kern/kernel.asm	/^f0107791:	6a 2f                	push   $0x2f$/;"	l
f0107793	obj/kern/kernel.asm	/^f0107793:	68 62 9e 10 f0       	push   $0xf0109e62$/;"	l
f0107798	obj/kern/kernel.asm	/^f0107798:	e8 a3 88 ff ff       	call   f0100040 <_panic>$/;"	l
f010779d	obj/kern/kernel.asm	/^f010779d:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01077a0	obj/kern/kernel.asm	/^f01077a0:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f01077a6	obj/kern/kernel.asm	/^f01077a6:	09 cb                	or     %ecx,%ebx$/;"	l
f01077a8	obj/kern/kernel.asm	/^f01077a8:	c1 e2 0b             	shl    $0xb,%edx$/;"	l
f01077ab	obj/kern/kernel.asm	/^f01077ab:	09 d3                	or     %edx,%ebx$/;"	l
f01077ad	obj/kern/kernel.asm	/^f01077ad:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01077b0	obj/kern/kernel.asm	/^f01077b0:	09 d8                	or     %ebx,%eax$/;"	l
f01077b2	obj/kern/kernel.asm	/^f01077b2:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f01077b7	obj/kern/kernel.asm	/^f01077b7:	ef                   	out    %eax,(%dx)$/;"	l
f01077b8	obj/kern/kernel.asm	/^f01077b8:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01077bb	obj/kern/kernel.asm	/^f01077bb:	c9                   	leave  $/;"	l
f01077bc	obj/kern/kernel.asm	/^f01077bc:	c3                   	ret    $/;"	l
f01077bd	obj/kern/kernel.asm	/^f01077bd <pci_conf_read>:$/;"	l
f01077bd	obj/kern/kernel.asm	/^f01077bd:	55                   	push   %ebp$/;"	l
f01077be	obj/kern/kernel.asm	/^f01077be:	89 e5                	mov    %esp,%ebp$/;"	l
f01077c0	obj/kern/kernel.asm	/^f01077c0:	53                   	push   %ebx$/;"	l
f01077c1	obj/kern/kernel.asm	/^f01077c1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01077c4	obj/kern/kernel.asm	/^f01077c4:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f01077c7	obj/kern/kernel.asm	/^f01077c7:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f01077ca	obj/kern/kernel.asm	/^f01077ca:	8b 00                	mov    (%eax),%eax$/;"	l
f01077cc	obj/kern/kernel.asm	/^f01077cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01077cf	obj/kern/kernel.asm	/^f01077cf:	52                   	push   %edx$/;"	l
f01077d0	obj/kern/kernel.asm	/^f01077d0:	89 da                	mov    %ebx,%edx$/;"	l
f01077d2	obj/kern/kernel.asm	/^f01077d2:	e8 30 ff ff ff       	call   f0107707 <pci_conf1_set_addr>$/;"	l
f01077d7	obj/kern/kernel.asm	/^f01077d7:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f01077dc	obj/kern/kernel.asm	/^f01077dc:	ed                   	in     (%dx),%eax$/;"	l
f01077dd	obj/kern/kernel.asm	/^f01077dd:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01077e0	obj/kern/kernel.asm	/^f01077e0:	c9                   	leave  $/;"	l
f01077e1	obj/kern/kernel.asm	/^f01077e1:	c3                   	ret    $/;"	l
f01077e2	obj/kern/kernel.asm	/^f01077e2 <pci_scan_bus>:$/;"	l
f01077e2	obj/kern/kernel.asm	/^f01077e2:	55                   	push   %ebp$/;"	l
f01077e3	obj/kern/kernel.asm	/^f01077e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01077e5	obj/kern/kernel.asm	/^f01077e5:	57                   	push   %edi$/;"	l
f01077e6	obj/kern/kernel.asm	/^f01077e6:	56                   	push   %esi$/;"	l
f01077e7	obj/kern/kernel.asm	/^f01077e7:	53                   	push   %ebx$/;"	l
f01077e8	obj/kern/kernel.asm	/^f01077e8:	81 ec 00 01 00 00    	sub    $0x100,%esp$/;"	l
f01077ee	obj/kern/kernel.asm	/^f01077ee:	89 c3                	mov    %eax,%ebx$/;"	l
f01077f0	obj/kern/kernel.asm	/^f01077f0:	6a 48                	push   $0x48$/;"	l
f01077f2	obj/kern/kernel.asm	/^f01077f2:	6a 00                	push   $0x0$/;"	l
f01077f4	obj/kern/kernel.asm	/^f01077f4:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f01077f7	obj/kern/kernel.asm	/^f01077f7:	50                   	push   %eax$/;"	l
f01077f8	obj/kern/kernel.asm	/^f01077f8:	e8 e5 ee ff ff       	call   f01066e2 <memset>$/;"	l
f01077fd	obj/kern/kernel.asm	/^f01077fd:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0107800	obj/kern/kernel.asm	/^f0107800:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0107807	obj/kern/kernel.asm	/^f0107807:	83 c4 10             	add    $0x10,%esp$/;"	l
f010780a	obj/kern/kernel.asm	/^f010780a:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f0107811	obj/kern/kernel.asm	/^f0107811:	00 00 00 $/;"	l
f0107814	obj/kern/kernel.asm	/^f0107814:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f0107819	obj/kern/kernel.asm	/^f0107819:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f010781c	obj/kern/kernel.asm	/^f010781c:	e8 9c ff ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f0107821	obj/kern/kernel.asm	/^f0107821:	89 c2                	mov    %eax,%edx$/;"	l
f0107823	obj/kern/kernel.asm	/^f0107823:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107826	obj/kern/kernel.asm	/^f0107826:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0107829	obj/kern/kernel.asm	/^f0107829:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f010782c	obj/kern/kernel.asm	/^f010782c:	0f 87 4b 01 00 00    	ja     f010797d <pci_scan_bus+0x19b>$/;"	l
f0107832	obj/kern/kernel.asm	/^f0107832:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f0107839	obj/kern/kernel.asm	/^f0107839:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f010783f	obj/kern/kernel.asm	/^f010783f:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f0107842	obj/kern/kernel.asm	/^f0107842:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0107847	obj/kern/kernel.asm	/^f0107847:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0107849	obj/kern/kernel.asm	/^f0107849:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f0107850	obj/kern/kernel.asm	/^f0107850:	00 00 00 $/;"	l
f0107853	obj/kern/kernel.asm	/^f0107853:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f0107858	obj/kern/kernel.asm	/^f0107858:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010785b	obj/kern/kernel.asm	/^f010785b:	19 c0                	sbb    %eax,%eax$/;"	l
f010785d	obj/kern/kernel.asm	/^f010785d:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0107860	obj/kern/kernel.asm	/^f0107860:	83 c0 08             	add    $0x8,%eax$/;"	l
f0107863	obj/kern/kernel.asm	/^f0107863:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f0107869	obj/kern/kernel.asm	/^f0107869:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f010786f	obj/kern/kernel.asm	/^f010786f:	e9 f7 00 00 00       	jmp    f010796b <pci_scan_bus+0x189>$/;"	l
f0107874	obj/kern/kernel.asm	/^f0107874:	8d bd 58 ff ff ff    	lea    -0xa8(%ebp),%edi$/;"	l
f010787a	obj/kern/kernel.asm	/^f010787a:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f0107880	obj/kern/kernel.asm	/^f0107880:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0107885	obj/kern/kernel.asm	/^f0107885:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0107887	obj/kern/kernel.asm	/^f0107887:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010788c	obj/kern/kernel.asm	/^f010788c:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f0107892	obj/kern/kernel.asm	/^f0107892:	e8 26 ff ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f0107897	obj/kern/kernel.asm	/^f0107897:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f010789d	obj/kern/kernel.asm	/^f010789d:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f01078a1	obj/kern/kernel.asm	/^f01078a1:	0f 84 bd 00 00 00    	je     f0107964 <pci_scan_bus+0x182>$/;"	l
f01078a7	obj/kern/kernel.asm	/^f01078a7:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f01078ac	obj/kern/kernel.asm	/^f01078ac:	89 d8                	mov    %ebx,%eax$/;"	l
f01078ae	obj/kern/kernel.asm	/^f01078ae:	e8 0a ff ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f01078b3	obj/kern/kernel.asm	/^f01078b3:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f01078b6	obj/kern/kernel.asm	/^f01078b6:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f01078bb	obj/kern/kernel.asm	/^f01078bb:	89 d8                	mov    %ebx,%eax$/;"	l
f01078bd	obj/kern/kernel.asm	/^f01078bd:	e8 fb fe ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f01078c2	obj/kern/kernel.asm	/^f01078c2:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f01078c8	obj/kern/kernel.asm	/^f01078c8:	89 c1                	mov    %eax,%ecx$/;"	l
f01078ca	obj/kern/kernel.asm	/^f01078ca:	c1 e9 18             	shr    $0x18,%ecx$/;"	l
f01078cd	obj/kern/kernel.asm	/^f01078cd:	be a0 9e 10 f0       	mov    $0xf0109ea0,%esi$/;"	l
f01078d2	obj/kern/kernel.asm	/^f01078d2:	83 f9 06             	cmp    $0x6,%ecx$/;"	l
f01078d5	obj/kern/kernel.asm	/^f01078d5:	77 07                	ja     f01078de <pci_scan_bus+0xfc>$/;"	l
f01078d7	obj/kern/kernel.asm	/^f01078d7:	8b 34 8d 14 9f 10 f0 	mov    -0xfef60ec(,%ecx,4),%esi$/;"	l
f01078de	obj/kern/kernel.asm	/^f01078de:	8b 95 64 ff ff ff    	mov    -0x9c(%ebp),%edx$/;"	l
f01078e4	obj/kern/kernel.asm	/^f01078e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01078e7	obj/kern/kernel.asm	/^f01078e7:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f01078eb	obj/kern/kernel.asm	/^f01078eb:	57                   	push   %edi$/;"	l
f01078ec	obj/kern/kernel.asm	/^f01078ec:	56                   	push   %esi$/;"	l
f01078ed	obj/kern/kernel.asm	/^f01078ed:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01078f0	obj/kern/kernel.asm	/^f01078f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01078f3	obj/kern/kernel.asm	/^f01078f3:	50                   	push   %eax$/;"	l
f01078f4	obj/kern/kernel.asm	/^f01078f4:	51                   	push   %ecx$/;"	l
f01078f5	obj/kern/kernel.asm	/^f01078f5:	89 d0                	mov    %edx,%eax$/;"	l
f01078f7	obj/kern/kernel.asm	/^f01078f7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01078fa	obj/kern/kernel.asm	/^f01078fa:	50                   	push   %eax$/;"	l
f01078fb	obj/kern/kernel.asm	/^f01078fb:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f01078fe	obj/kern/kernel.asm	/^f01078fe:	52                   	push   %edx$/;"	l
f01078ff	obj/kern/kernel.asm	/^f01078ff:	ff b5 60 ff ff ff    	pushl  -0xa0(%ebp)$/;"	l
f0107905	obj/kern/kernel.asm	/^f0107905:	ff b5 5c ff ff ff    	pushl  -0xa4(%ebp)$/;"	l
f010790b	obj/kern/kernel.asm	/^f010790b:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f0107911	obj/kern/kernel.asm	/^f0107911:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0107914	obj/kern/kernel.asm	/^f0107914:	68 2c 9d 10 f0       	push   $0xf0109d2c$/;"	l
f0107919	obj/kern/kernel.asm	/^f0107919:	e8 ca c5 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f010791e	obj/kern/kernel.asm	/^f010791e:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f0107924	obj/kern/kernel.asm	/^f0107924:	83 c4 30             	add    $0x30,%esp$/;"	l
f0107927	obj/kern/kernel.asm	/^f0107927:	53                   	push   %ebx$/;"	l
f0107928	obj/kern/kernel.asm	/^f0107928:	68 f0 63 12 f0       	push   $0xf01263f0$/;"	l
f010792d	obj/kern/kernel.asm	/^f010792d:	89 c2                	mov    %eax,%edx$/;"	l
f010792f	obj/kern/kernel.asm	/^f010792f:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107932	obj/kern/kernel.asm	/^f0107932:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0107935	obj/kern/kernel.asm	/^f0107935:	52                   	push   %edx$/;"	l
f0107936	obj/kern/kernel.asm	/^f0107936:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0107939	obj/kern/kernel.asm	/^f0107939:	50                   	push   %eax$/;"	l
f010793a	obj/kern/kernel.asm	/^f010793a:	e8 62 fd ff ff       	call   f01076a1 <pci_attach_match>$/;"	l
f010793f	obj/kern/kernel.asm	/^f010793f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107942	obj/kern/kernel.asm	/^f0107942:	85 c0                	test   %eax,%eax$/;"	l
f0107944	obj/kern/kernel.asm	/^f0107944:	75 1e                	jne    f0107964 <pci_scan_bus+0x182>$/;"	l
f0107946	obj/kern/kernel.asm	/^f0107946:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f010794c	obj/kern/kernel.asm	/^f010794c:	53                   	push   %ebx$/;"	l
f010794d	obj/kern/kernel.asm	/^f010794d:	68 d8 63 12 f0       	push   $0xf01263d8$/;"	l
f0107952	obj/kern/kernel.asm	/^f0107952:	89 c2                	mov    %eax,%edx$/;"	l
f0107954	obj/kern/kernel.asm	/^f0107954:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107957	obj/kern/kernel.asm	/^f0107957:	52                   	push   %edx$/;"	l
f0107958	obj/kern/kernel.asm	/^f0107958:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010795b	obj/kern/kernel.asm	/^f010795b:	50                   	push   %eax$/;"	l
f010795c	obj/kern/kernel.asm	/^f010795c:	e8 40 fd ff ff       	call   f01076a1 <pci_attach_match>$/;"	l
f0107961	obj/kern/kernel.asm	/^f0107961:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107964	obj/kern/kernel.asm	/^f0107964:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f010796b	obj/kern/kernel.asm	/^f010796b:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax$/;"	l
f0107971	obj/kern/kernel.asm	/^f0107971:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f0107977	obj/kern/kernel.asm	/^f0107977:	0f 87 f7 fe ff ff    	ja     f0107874 <pci_scan_bus+0x92>$/;"	l
f010797d	obj/kern/kernel.asm	/^f010797d:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0107980	obj/kern/kernel.asm	/^f0107980:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107983	obj/kern/kernel.asm	/^f0107983:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0107986	obj/kern/kernel.asm	/^f0107986:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0107989	obj/kern/kernel.asm	/^f0107989:	0f 86 85 fe ff ff    	jbe    f0107814 <pci_scan_bus+0x32>$/;"	l
f010798f	obj/kern/kernel.asm	/^f010798f:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f0107995	obj/kern/kernel.asm	/^f0107995:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0107998	obj/kern/kernel.asm	/^f0107998:	5b                   	pop    %ebx$/;"	l
f0107999	obj/kern/kernel.asm	/^f0107999:	5e                   	pop    %esi$/;"	l
f010799a	obj/kern/kernel.asm	/^f010799a:	5f                   	pop    %edi$/;"	l
f010799b	obj/kern/kernel.asm	/^f010799b:	5d                   	pop    %ebp$/;"	l
f010799c	obj/kern/kernel.asm	/^f010799c:	c3                   	ret    $/;"	l
f010799d	obj/kern/kernel.asm	/^f010799d <pci_bridge_attach>:$/;"	l
f010799d	obj/kern/kernel.asm	/^f010799d:	55                   	push   %ebp$/;"	l
f010799e	obj/kern/kernel.asm	/^f010799e:	89 e5                	mov    %esp,%ebp$/;"	l
f01079a0	obj/kern/kernel.asm	/^f01079a0:	57                   	push   %edi$/;"	l
f01079a1	obj/kern/kernel.asm	/^f01079a1:	56                   	push   %esi$/;"	l
f01079a2	obj/kern/kernel.asm	/^f01079a2:	53                   	push   %ebx$/;"	l
f01079a3	obj/kern/kernel.asm	/^f01079a3:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01079a6	obj/kern/kernel.asm	/^f01079a6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01079a9	obj/kern/kernel.asm	/^f01079a9:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f01079ae	obj/kern/kernel.asm	/^f01079ae:	89 d8                	mov    %ebx,%eax$/;"	l
f01079b0	obj/kern/kernel.asm	/^f01079b0:	e8 08 fe ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f01079b5	obj/kern/kernel.asm	/^f01079b5:	89 c7                	mov    %eax,%edi$/;"	l
f01079b7	obj/kern/kernel.asm	/^f01079b7:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f01079bc	obj/kern/kernel.asm	/^f01079bc:	89 d8                	mov    %ebx,%eax$/;"	l
f01079be	obj/kern/kernel.asm	/^f01079be:	e8 fa fd ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f01079c3	obj/kern/kernel.asm	/^f01079c3:	83 e7 0f             	and    $0xf,%edi$/;"	l
f01079c6	obj/kern/kernel.asm	/^f01079c6:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f01079c9	obj/kern/kernel.asm	/^f01079c9:	75 1f                	jne    f01079ea <pci_bridge_attach+0x4d>$/;"	l
f01079cb	obj/kern/kernel.asm	/^f01079cb:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f01079ce	obj/kern/kernel.asm	/^f01079ce:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f01079d1	obj/kern/kernel.asm	/^f01079d1:	8b 03                	mov    (%ebx),%eax$/;"	l
f01079d3	obj/kern/kernel.asm	/^f01079d3:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f01079d6	obj/kern/kernel.asm	/^f01079d6:	68 68 9d 10 f0       	push   $0xf0109d68$/;"	l
f01079db	obj/kern/kernel.asm	/^f01079db:	e8 08 c5 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f01079e0	obj/kern/kernel.asm	/^f01079e0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01079e3	obj/kern/kernel.asm	/^f01079e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01079e8	obj/kern/kernel.asm	/^f01079e8:	eb 4e                	jmp    f0107a38 <pci_bridge_attach+0x9b>$/;"	l
f01079ea	obj/kern/kernel.asm	/^f01079ea:	89 c6                	mov    %eax,%esi$/;"	l
f01079ec	obj/kern/kernel.asm	/^f01079ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01079ef	obj/kern/kernel.asm	/^f01079ef:	6a 08                	push   $0x8$/;"	l
f01079f1	obj/kern/kernel.asm	/^f01079f1:	6a 00                	push   $0x0$/;"	l
f01079f3	obj/kern/kernel.asm	/^f01079f3:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f01079f6	obj/kern/kernel.asm	/^f01079f6:	57                   	push   %edi$/;"	l
f01079f7	obj/kern/kernel.asm	/^f01079f7:	e8 e6 ec ff ff       	call   f01066e2 <memset>$/;"	l
f01079fc	obj/kern/kernel.asm	/^f01079fc:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f01079ff	obj/kern/kernel.asm	/^f01079ff:	89 f0                	mov    %esi,%eax$/;"	l
f0107a01	obj/kern/kernel.asm	/^f0107a01:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f0107a04	obj/kern/kernel.asm	/^f0107a04:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107a07	obj/kern/kernel.asm	/^f0107a07:	83 c4 08             	add    $0x8,%esp$/;"	l
f0107a0a	obj/kern/kernel.asm	/^f0107a0a:	89 f2                	mov    %esi,%edx$/;"	l
f0107a0c	obj/kern/kernel.asm	/^f0107a0c:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107a0f	obj/kern/kernel.asm	/^f0107a0f:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0107a12	obj/kern/kernel.asm	/^f0107a12:	56                   	push   %esi$/;"	l
f0107a13	obj/kern/kernel.asm	/^f0107a13:	50                   	push   %eax$/;"	l
f0107a14	obj/kern/kernel.asm	/^f0107a14:	ff 73 08             	pushl  0x8(%ebx)$/;"	l
f0107a17	obj/kern/kernel.asm	/^f0107a17:	ff 73 04             	pushl  0x4(%ebx)$/;"	l
f0107a1a	obj/kern/kernel.asm	/^f0107a1a:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107a1c	obj/kern/kernel.asm	/^f0107a1c:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0107a1f	obj/kern/kernel.asm	/^f0107a1f:	68 9c 9d 10 f0       	push   $0xf0109d9c$/;"	l
f0107a24	obj/kern/kernel.asm	/^f0107a24:	e8 bf c4 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0107a29	obj/kern/kernel.asm	/^f0107a29:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107a2c	obj/kern/kernel.asm	/^f0107a2c:	89 f8                	mov    %edi,%eax$/;"	l
f0107a2e	obj/kern/kernel.asm	/^f0107a2e:	e8 af fd ff ff       	call   f01077e2 <pci_scan_bus>$/;"	l
f0107a33	obj/kern/kernel.asm	/^f0107a33:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107a38	obj/kern/kernel.asm	/^f0107a38:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0107a3b	obj/kern/kernel.asm	/^f0107a3b:	5b                   	pop    %ebx$/;"	l
f0107a3c	obj/kern/kernel.asm	/^f0107a3c:	5e                   	pop    %esi$/;"	l
f0107a3d	obj/kern/kernel.asm	/^f0107a3d:	5f                   	pop    %edi$/;"	l
f0107a3e	obj/kern/kernel.asm	/^f0107a3e:	5d                   	pop    %ebp$/;"	l
f0107a3f	obj/kern/kernel.asm	/^f0107a3f:	c3                   	ret    $/;"	l
f0107a40	obj/kern/kernel.asm	/^f0107a40 <pci_conf_write>:$/;"	l
f0107a40	obj/kern/kernel.asm	/^f0107a40:	55                   	push   %ebp$/;"	l
f0107a41	obj/kern/kernel.asm	/^f0107a41:	89 e5                	mov    %esp,%ebp$/;"	l
f0107a43	obj/kern/kernel.asm	/^f0107a43:	56                   	push   %esi$/;"	l
f0107a44	obj/kern/kernel.asm	/^f0107a44:	53                   	push   %ebx$/;"	l
f0107a45	obj/kern/kernel.asm	/^f0107a45:	89 cb                	mov    %ecx,%ebx$/;"	l
f0107a47	obj/kern/kernel.asm	/^f0107a47:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107a4a	obj/kern/kernel.asm	/^f0107a4a:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0107a4d	obj/kern/kernel.asm	/^f0107a4d:	8b 00                	mov    (%eax),%eax$/;"	l
f0107a4f	obj/kern/kernel.asm	/^f0107a4f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107a52	obj/kern/kernel.asm	/^f0107a52:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107a55	obj/kern/kernel.asm	/^f0107a55:	52                   	push   %edx$/;"	l
f0107a56	obj/kern/kernel.asm	/^f0107a56:	89 f2                	mov    %esi,%edx$/;"	l
f0107a58	obj/kern/kernel.asm	/^f0107a58:	e8 aa fc ff ff       	call   f0107707 <pci_conf1_set_addr>$/;"	l
f0107a5d	obj/kern/kernel.asm	/^f0107a5d:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107a62	obj/kern/kernel.asm	/^f0107a62:	89 d8                	mov    %ebx,%eax$/;"	l
f0107a64	obj/kern/kernel.asm	/^f0107a64:	ef                   	out    %eax,(%dx)$/;"	l
f0107a65	obj/kern/kernel.asm	/^f0107a65:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107a68	obj/kern/kernel.asm	/^f0107a68:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0107a6b	obj/kern/kernel.asm	/^f0107a6b:	5b                   	pop    %ebx$/;"	l
f0107a6c	obj/kern/kernel.asm	/^f0107a6c:	5e                   	pop    %esi$/;"	l
f0107a6d	obj/kern/kernel.asm	/^f0107a6d:	5d                   	pop    %ebp$/;"	l
f0107a6e	obj/kern/kernel.asm	/^f0107a6e:	c3                   	ret    $/;"	l
f0107a6f	obj/kern/kernel.asm	/^f0107a6f <pci_func_enable>:$/;"	l
f0107a6f	obj/kern/kernel.asm	/^f0107a6f:	55                   	push   %ebp$/;"	l
f0107a70	obj/kern/kernel.asm	/^f0107a70:	89 e5                	mov    %esp,%ebp$/;"	l
f0107a72	obj/kern/kernel.asm	/^f0107a72:	57                   	push   %edi$/;"	l
f0107a73	obj/kern/kernel.asm	/^f0107a73:	56                   	push   %esi$/;"	l
f0107a74	obj/kern/kernel.asm	/^f0107a74:	53                   	push   %ebx$/;"	l
f0107a75	obj/kern/kernel.asm	/^f0107a75:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0107a78	obj/kern/kernel.asm	/^f0107a78:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0107a7b	obj/kern/kernel.asm	/^f0107a7b:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0107a80	obj/kern/kernel.asm	/^f0107a80:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0107a85	obj/kern/kernel.asm	/^f0107a85:	89 f8                	mov    %edi,%eax$/;"	l
f0107a87	obj/kern/kernel.asm	/^f0107a87:	e8 b4 ff ff ff       	call   f0107a40 <pci_conf_write>$/;"	l
f0107a8c	obj/kern/kernel.asm	/^f0107a8c:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0107a91	obj/kern/kernel.asm	/^f0107a91:	89 f2                	mov    %esi,%edx$/;"	l
f0107a93	obj/kern/kernel.asm	/^f0107a93:	89 f8                	mov    %edi,%eax$/;"	l
f0107a95	obj/kern/kernel.asm	/^f0107a95:	e8 23 fd ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f0107a9a	obj/kern/kernel.asm	/^f0107a9a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107a9d	obj/kern/kernel.asm	/^f0107a9d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0107aa2	obj/kern/kernel.asm	/^f0107aa2:	89 f2                	mov    %esi,%edx$/;"	l
f0107aa4	obj/kern/kernel.asm	/^f0107aa4:	89 f8                	mov    %edi,%eax$/;"	l
f0107aa6	obj/kern/kernel.asm	/^f0107aa6:	e8 95 ff ff ff       	call   f0107a40 <pci_conf_write>$/;"	l
f0107aab	obj/kern/kernel.asm	/^f0107aab:	89 f2                	mov    %esi,%edx$/;"	l
f0107aad	obj/kern/kernel.asm	/^f0107aad:	89 f8                	mov    %edi,%eax$/;"	l
f0107aaf	obj/kern/kernel.asm	/^f0107aaf:	e8 09 fd ff ff       	call   f01077bd <pci_conf_read>$/;"	l
f0107ab4	obj/kern/kernel.asm	/^f0107ab4:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107ab9	obj/kern/kernel.asm	/^f0107ab9:	85 c0                	test   %eax,%eax$/;"	l
f0107abb	obj/kern/kernel.asm	/^f0107abb:	0f 84 a6 00 00 00    	je     f0107b67 <pci_func_enable+0xf8>$/;"	l
f0107ac1	obj/kern/kernel.asm	/^f0107ac1:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107ac4	obj/kern/kernel.asm	/^f0107ac4:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107ac7	obj/kern/kernel.asm	/^f0107ac7:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0107aca	obj/kern/kernel.asm	/^f0107aca:	a8 01                	test   $0x1,%al$/;"	l
f0107acc	obj/kern/kernel.asm	/^f0107acc:	75 2c                	jne    f0107afa <pci_func_enable+0x8b>$/;"	l
f0107ace	obj/kern/kernel.asm	/^f0107ace:	89 c2                	mov    %eax,%edx$/;"	l
f0107ad0	obj/kern/kernel.asm	/^f0107ad0:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107ad3	obj/kern/kernel.asm	/^f0107ad3:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107ad6	obj/kern/kernel.asm	/^f0107ad6:	0f 94 c3             	sete   %bl$/;"	l
f0107ad9	obj/kern/kernel.asm	/^f0107ad9:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0107adc	obj/kern/kernel.asm	/^f0107adc:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f0107ae3	obj/kern/kernel.asm	/^f0107ae3:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107ae6	obj/kern/kernel.asm	/^f0107ae6:	89 c2                	mov    %eax,%edx$/;"	l
f0107ae8	obj/kern/kernel.asm	/^f0107ae8:	f7 da                	neg    %edx$/;"	l
f0107aea	obj/kern/kernel.asm	/^f0107aea:	21 c2                	and    %eax,%edx$/;"	l
f0107aec	obj/kern/kernel.asm	/^f0107aec:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0107aef	obj/kern/kernel.asm	/^f0107aef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107af2	obj/kern/kernel.asm	/^f0107af2:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107af5	obj/kern/kernel.asm	/^f0107af5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0107af8	obj/kern/kernel.asm	/^f0107af8:	eb 1a                	jmp    f0107b14 <pci_func_enable+0xa5>$/;"	l
f0107afa	obj/kern/kernel.asm	/^f0107afa:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107afd	obj/kern/kernel.asm	/^f0107afd:	89 c2                	mov    %eax,%edx$/;"	l
f0107aff	obj/kern/kernel.asm	/^f0107aff:	f7 da                	neg    %edx$/;"	l
f0107b01	obj/kern/kernel.asm	/^f0107b01:	21 c2                	and    %eax,%edx$/;"	l
f0107b03	obj/kern/kernel.asm	/^f0107b03:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0107b06	obj/kern/kernel.asm	/^f0107b06:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107b09	obj/kern/kernel.asm	/^f0107b09:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107b0c	obj/kern/kernel.asm	/^f0107b0c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0107b0f	obj/kern/kernel.asm	/^f0107b0f:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107b14	obj/kern/kernel.asm	/^f0107b14:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0107b17	obj/kern/kernel.asm	/^f0107b17:	89 f2                	mov    %esi,%edx$/;"	l
f0107b19	obj/kern/kernel.asm	/^f0107b19:	89 f8                	mov    %edi,%eax$/;"	l
f0107b1b	obj/kern/kernel.asm	/^f0107b1b:	e8 20 ff ff ff       	call   f0107a40 <pci_conf_write>$/;"	l
f0107b20	obj/kern/kernel.asm	/^f0107b20:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0107b23	obj/kern/kernel.asm	/^f0107b23:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0107b26	obj/kern/kernel.asm	/^f0107b26:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0107b29	obj/kern/kernel.asm	/^f0107b29:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
f0107b2c	obj/kern/kernel.asm	/^f0107b2c:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107b2f	obj/kern/kernel.asm	/^f0107b2f:	89 48 2c             	mov    %ecx,0x2c(%eax)$/;"	l
f0107b32	obj/kern/kernel.asm	/^f0107b32:	85 c9                	test   %ecx,%ecx$/;"	l
f0107b34	obj/kern/kernel.asm	/^f0107b34:	74 31                	je     f0107b67 <pci_func_enable+0xf8>$/;"	l
f0107b36	obj/kern/kernel.asm	/^f0107b36:	85 d2                	test   %edx,%edx$/;"	l
f0107b38	obj/kern/kernel.asm	/^f0107b38:	75 2d                	jne    f0107b67 <pci_func_enable+0xf8>$/;"	l
f0107b3a	obj/kern/kernel.asm	/^f0107b3a:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107b3d	obj/kern/kernel.asm	/^f0107b3d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107b40	obj/kern/kernel.asm	/^f0107b40:	51                   	push   %ecx$/;"	l
f0107b41	obj/kern/kernel.asm	/^f0107b41:	52                   	push   %edx$/;"	l
f0107b42	obj/kern/kernel.asm	/^f0107b42:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0107b45	obj/kern/kernel.asm	/^f0107b45:	89 c2                	mov    %eax,%edx$/;"	l
f0107b47	obj/kern/kernel.asm	/^f0107b47:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107b4a	obj/kern/kernel.asm	/^f0107b4a:	52                   	push   %edx$/;"	l
f0107b4b	obj/kern/kernel.asm	/^f0107b4b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107b4e	obj/kern/kernel.asm	/^f0107b4e:	50                   	push   %eax$/;"	l
f0107b4f	obj/kern/kernel.asm	/^f0107b4f:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0107b52	obj/kern/kernel.asm	/^f0107b52:	ff 77 04             	pushl  0x4(%edi)$/;"	l
f0107b55	obj/kern/kernel.asm	/^f0107b55:	8b 07                	mov    (%edi),%eax$/;"	l
f0107b57	obj/kern/kernel.asm	/^f0107b57:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0107b5a	obj/kern/kernel.asm	/^f0107b5a:	68 cc 9d 10 f0       	push   $0xf0109dcc$/;"	l
f0107b5f	obj/kern/kernel.asm	/^f0107b5f:	e8 84 c3 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0107b64	obj/kern/kernel.asm	/^f0107b64:	83 c4 30             	add    $0x30,%esp$/;"	l
f0107b67	obj/kern/kernel.asm	/^f0107b67:	01 de                	add    %ebx,%esi$/;"	l
f0107b69	obj/kern/kernel.asm	/^f0107b69:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0107b6c	obj/kern/kernel.asm	/^f0107b6c:	0f 86 1f ff ff ff    	jbe    f0107a91 <pci_func_enable+0x22>$/;"	l
f0107b72	obj/kern/kernel.asm	/^f0107b72:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107b75	obj/kern/kernel.asm	/^f0107b75:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107b78	obj/kern/kernel.asm	/^f0107b78:	89 c2                	mov    %eax,%edx$/;"	l
f0107b7a	obj/kern/kernel.asm	/^f0107b7a:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107b7d	obj/kern/kernel.asm	/^f0107b7d:	52                   	push   %edx$/;"	l
f0107b7e	obj/kern/kernel.asm	/^f0107b7e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107b81	obj/kern/kernel.asm	/^f0107b81:	50                   	push   %eax$/;"	l
f0107b82	obj/kern/kernel.asm	/^f0107b82:	ff 77 08             	pushl  0x8(%edi)$/;"	l
f0107b85	obj/kern/kernel.asm	/^f0107b85:	ff 77 04             	pushl  0x4(%edi)$/;"	l
f0107b88	obj/kern/kernel.asm	/^f0107b88:	8b 07                	mov    (%edi),%eax$/;"	l
f0107b8a	obj/kern/kernel.asm	/^f0107b8a:	ff 70 04             	pushl  0x4(%eax)$/;"	l
f0107b8d	obj/kern/kernel.asm	/^f0107b8d:	68 28 9e 10 f0       	push   $0xf0109e28$/;"	l
f0107b92	obj/kern/kernel.asm	/^f0107b92:	e8 51 c3 ff ff       	call   f0103ee8 <cprintf>$/;"	l
f0107b97	obj/kern/kernel.asm	/^f0107b97:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107b9a	obj/kern/kernel.asm	/^f0107b9a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0107b9d	obj/kern/kernel.asm	/^f0107b9d:	5b                   	pop    %ebx$/;"	l
f0107b9e	obj/kern/kernel.asm	/^f0107b9e:	5e                   	pop    %esi$/;"	l
f0107b9f	obj/kern/kernel.asm	/^f0107b9f:	5f                   	pop    %edi$/;"	l
f0107ba0	obj/kern/kernel.asm	/^f0107ba0:	5d                   	pop    %ebp$/;"	l
f0107ba1	obj/kern/kernel.asm	/^f0107ba1:	c3                   	ret    $/;"	l
f0107ba2	obj/kern/kernel.asm	/^f0107ba2 <pci_init>:$/;"	l
f0107ba2	obj/kern/kernel.asm	/^f0107ba2:	55                   	push   %ebp$/;"	l
f0107ba3	obj/kern/kernel.asm	/^f0107ba3:	89 e5                	mov    %esp,%ebp$/;"	l
f0107ba5	obj/kern/kernel.asm	/^f0107ba5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107ba8	obj/kern/kernel.asm	/^f0107ba8:	6a 08                	push   $0x8$/;"	l
f0107baa	obj/kern/kernel.asm	/^f0107baa:	6a 00                	push   $0x0$/;"	l
f0107bac	obj/kern/kernel.asm	/^f0107bac:	68 a0 0e 28 f0       	push   $0xf0280ea0$/;"	l
f0107bb1	obj/kern/kernel.asm	/^f0107bb1:	e8 2c eb ff ff       	call   f01066e2 <memset>$/;"	l
f0107bb6	obj/kern/kernel.asm	/^f0107bb6:	b8 a0 0e 28 f0       	mov    $0xf0280ea0,%eax$/;"	l
f0107bbb	obj/kern/kernel.asm	/^f0107bbb:	e8 22 fc ff ff       	call   f01077e2 <pci_scan_bus>$/;"	l
f0107bc0	obj/kern/kernel.asm	/^f0107bc0:	c9                   	leave  $/;"	l
f0107bc1	obj/kern/kernel.asm	/^f0107bc1:	c3                   	ret    $/;"	l
f0107bc2	obj/kern/kernel.asm	/^f0107bc2 <time_init>:$/;"	l
f0107bc2	obj/kern/kernel.asm	/^f0107bc2:	55                   	push   %ebp$/;"	l
f0107bc3	obj/kern/kernel.asm	/^f0107bc3:	89 e5                	mov    %esp,%ebp$/;"	l
f0107bc5	obj/kern/kernel.asm	/^f0107bc5:	c7 05 a8 0e 28 f0 00 	movl   $0x0,0xf0280ea8$/;"	l
f0107bcc	obj/kern/kernel.asm	/^f0107bcc:	00 00 00 $/;"	l
f0107bcf	obj/kern/kernel.asm	/^f0107bcf:	5d                   	pop    %ebp$/;"	l
f0107bd0	obj/kern/kernel.asm	/^f0107bd0:	c3                   	ret    $/;"	l
f0107bd1	obj/kern/kernel.asm	/^f0107bd1 <time_tick>:$/;"	l
f0107bd1	obj/kern/kernel.asm	/^f0107bd1:	a1 a8 0e 28 f0       	mov    0xf0280ea8,%eax$/;"	l
f0107bd6	obj/kern/kernel.asm	/^f0107bd6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107bd9	obj/kern/kernel.asm	/^f0107bd9:	a3 a8 0e 28 f0       	mov    %eax,0xf0280ea8$/;"	l
f0107bde	obj/kern/kernel.asm	/^f0107bde:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0107be1	obj/kern/kernel.asm	/^f0107be1:	01 d2                	add    %edx,%edx$/;"	l
f0107be3	obj/kern/kernel.asm	/^f0107be3:	39 d0                	cmp    %edx,%eax$/;"	l
f0107be5	obj/kern/kernel.asm	/^f0107be5:	76 17                	jbe    f0107bfe <time_tick+0x2d>$/;"	l
f0107be7	obj/kern/kernel.asm	/^f0107be7:	55                   	push   %ebp$/;"	l
f0107be8	obj/kern/kernel.asm	/^f0107be8:	89 e5                	mov    %esp,%ebp$/;"	l
f0107bea	obj/kern/kernel.asm	/^f0107bea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107bed	obj/kern/kernel.asm	/^f0107bed:	68 30 9f 10 f0       	push   $0xf0109f30$/;"	l
f0107bf2	obj/kern/kernel.asm	/^f0107bf2:	6a 13                	push   $0x13$/;"	l
f0107bf4	obj/kern/kernel.asm	/^f0107bf4:	68 4b 9f 10 f0       	push   $0xf0109f4b$/;"	l
f0107bf9	obj/kern/kernel.asm	/^f0107bf9:	e8 42 84 ff ff       	call   f0100040 <_panic>$/;"	l
f0107bfe	obj/kern/kernel.asm	/^f0107bfe:	f3 c3                	repz ret $/;"	l
f0107c00	obj/kern/kernel.asm	/^f0107c00 <time_msec>:$/;"	l
f0107c00	obj/kern/kernel.asm	/^f0107c00:	55                   	push   %ebp$/;"	l
f0107c01	obj/kern/kernel.asm	/^f0107c01:	89 e5                	mov    %esp,%ebp$/;"	l
f0107c03	obj/kern/kernel.asm	/^f0107c03:	a1 a8 0e 28 f0       	mov    0xf0280ea8,%eax$/;"	l
f0107c08	obj/kern/kernel.asm	/^f0107c08:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0107c0b	obj/kern/kernel.asm	/^f0107c0b:	01 c0                	add    %eax,%eax$/;"	l
f0107c0d	obj/kern/kernel.asm	/^f0107c0d:	5d                   	pop    %ebp$/;"	l
f0107c0e	obj/kern/kernel.asm	/^f0107c0e:	c3                   	ret    $/;"	l
f0107c0f	obj/kern/kernel.asm	/^f0107c0f:	90                   	nop$/;"	l
f0107c10	obj/kern/kernel.asm	/^f0107c10 <__udivdi3>:$/;"	l
f0107c10	obj/kern/kernel.asm	/^f0107c10:	55                   	push   %ebp$/;"	l
f0107c11	obj/kern/kernel.asm	/^f0107c11:	57                   	push   %edi$/;"	l
f0107c12	obj/kern/kernel.asm	/^f0107c12:	56                   	push   %esi$/;"	l
f0107c13	obj/kern/kernel.asm	/^f0107c13:	53                   	push   %ebx$/;"	l
f0107c14	obj/kern/kernel.asm	/^f0107c14:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0107c17	obj/kern/kernel.asm	/^f0107c17:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f0107c1b	obj/kern/kernel.asm	/^f0107c1b:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f0107c1f	obj/kern/kernel.asm	/^f0107c1f:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f0107c23	obj/kern/kernel.asm	/^f0107c23:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0107c27	obj/kern/kernel.asm	/^f0107c27:	85 f6                	test   %esi,%esi$/;"	l
f0107c29	obj/kern/kernel.asm	/^f0107c29:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0107c2d	obj/kern/kernel.asm	/^f0107c2d:	89 ca                	mov    %ecx,%edx$/;"	l
f0107c2f	obj/kern/kernel.asm	/^f0107c2f:	89 f8                	mov    %edi,%eax$/;"	l
f0107c31	obj/kern/kernel.asm	/^f0107c31:	75 3d                	jne    f0107c70 <__udivdi3+0x60>$/;"	l
f0107c33	obj/kern/kernel.asm	/^f0107c33:	39 cf                	cmp    %ecx,%edi$/;"	l
f0107c35	obj/kern/kernel.asm	/^f0107c35:	0f 87 c5 00 00 00    	ja     f0107d00 <__udivdi3+0xf0>$/;"	l
f0107c3b	obj/kern/kernel.asm	/^f0107c3b:	85 ff                	test   %edi,%edi$/;"	l
f0107c3d	obj/kern/kernel.asm	/^f0107c3d:	89 fd                	mov    %edi,%ebp$/;"	l
f0107c3f	obj/kern/kernel.asm	/^f0107c3f:	75 0b                	jne    f0107c4c <__udivdi3+0x3c>$/;"	l
f0107c41	obj/kern/kernel.asm	/^f0107c41:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107c46	obj/kern/kernel.asm	/^f0107c46:	31 d2                	xor    %edx,%edx$/;"	l
f0107c48	obj/kern/kernel.asm	/^f0107c48:	f7 f7                	div    %edi$/;"	l
f0107c4a	obj/kern/kernel.asm	/^f0107c4a:	89 c5                	mov    %eax,%ebp$/;"	l
f0107c4c	obj/kern/kernel.asm	/^f0107c4c:	89 c8                	mov    %ecx,%eax$/;"	l
f0107c4e	obj/kern/kernel.asm	/^f0107c4e:	31 d2                	xor    %edx,%edx$/;"	l
f0107c50	obj/kern/kernel.asm	/^f0107c50:	f7 f5                	div    %ebp$/;"	l
f0107c52	obj/kern/kernel.asm	/^f0107c52:	89 c1                	mov    %eax,%ecx$/;"	l
f0107c54	obj/kern/kernel.asm	/^f0107c54:	89 d8                	mov    %ebx,%eax$/;"	l
f0107c56	obj/kern/kernel.asm	/^f0107c56:	89 cf                	mov    %ecx,%edi$/;"	l
f0107c58	obj/kern/kernel.asm	/^f0107c58:	f7 f5                	div    %ebp$/;"	l
f0107c5a	obj/kern/kernel.asm	/^f0107c5a:	89 c3                	mov    %eax,%ebx$/;"	l
f0107c5c	obj/kern/kernel.asm	/^f0107c5c:	89 d8                	mov    %ebx,%eax$/;"	l
f0107c5e	obj/kern/kernel.asm	/^f0107c5e:	89 fa                	mov    %edi,%edx$/;"	l
f0107c60	obj/kern/kernel.asm	/^f0107c60:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107c63	obj/kern/kernel.asm	/^f0107c63:	5b                   	pop    %ebx$/;"	l
f0107c64	obj/kern/kernel.asm	/^f0107c64:	5e                   	pop    %esi$/;"	l
f0107c65	obj/kern/kernel.asm	/^f0107c65:	5f                   	pop    %edi$/;"	l
f0107c66	obj/kern/kernel.asm	/^f0107c66:	5d                   	pop    %ebp$/;"	l
f0107c67	obj/kern/kernel.asm	/^f0107c67:	c3                   	ret    $/;"	l
f0107c68	obj/kern/kernel.asm	/^f0107c68:	90                   	nop$/;"	l
f0107c69	obj/kern/kernel.asm	/^f0107c69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107c70	obj/kern/kernel.asm	/^f0107c70:	39 ce                	cmp    %ecx,%esi$/;"	l
f0107c72	obj/kern/kernel.asm	/^f0107c72:	77 74                	ja     f0107ce8 <__udivdi3+0xd8>$/;"	l
f0107c74	obj/kern/kernel.asm	/^f0107c74:	0f bd fe             	bsr    %esi,%edi$/;"	l
f0107c77	obj/kern/kernel.asm	/^f0107c77:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f0107c7a	obj/kern/kernel.asm	/^f0107c7a:	0f 84 98 00 00 00    	je     f0107d18 <__udivdi3+0x108>$/;"	l
f0107c80	obj/kern/kernel.asm	/^f0107c80:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0107c85	obj/kern/kernel.asm	/^f0107c85:	89 f9                	mov    %edi,%ecx$/;"	l
f0107c87	obj/kern/kernel.asm	/^f0107c87:	89 c5                	mov    %eax,%ebp$/;"	l
f0107c89	obj/kern/kernel.asm	/^f0107c89:	29 fb                	sub    %edi,%ebx$/;"	l
f0107c8b	obj/kern/kernel.asm	/^f0107c8b:	d3 e6                	shl    %cl,%esi$/;"	d
f0107c8d	obj/kern/kernel.asm	/^f0107c8d:	89 d9                	mov    %ebx,%ecx$/;"	l
f0107c8f	obj/kern/kernel.asm	/^f0107c8f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0107c91	obj/kern/kernel.asm	/^f0107c91:	89 f9                	mov    %edi,%ecx$/;"	l
f0107c93	obj/kern/kernel.asm	/^f0107c93:	d3 e0                	shl    %cl,%eax$/;"	d
f0107c95	obj/kern/kernel.asm	/^f0107c95:	09 ee                	or     %ebp,%esi$/;"	l
f0107c97	obj/kern/kernel.asm	/^f0107c97:	89 d9                	mov    %ebx,%ecx$/;"	l
f0107c99	obj/kern/kernel.asm	/^f0107c99:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107c9d	obj/kern/kernel.asm	/^f0107c9d:	89 d5                	mov    %edx,%ebp$/;"	l
f0107c9f	obj/kern/kernel.asm	/^f0107c9f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0107ca3	obj/kern/kernel.asm	/^f0107ca3:	d3 ed                	shr    %cl,%ebp$/;"	d
f0107ca5	obj/kern/kernel.asm	/^f0107ca5:	89 f9                	mov    %edi,%ecx$/;"	l
f0107ca7	obj/kern/kernel.asm	/^f0107ca7:	d3 e2                	shl    %cl,%edx$/;"	d
f0107ca9	obj/kern/kernel.asm	/^f0107ca9:	89 d9                	mov    %ebx,%ecx$/;"	l
f0107cab	obj/kern/kernel.asm	/^f0107cab:	d3 e8                	shr    %cl,%eax$/;"	d
f0107cad	obj/kern/kernel.asm	/^f0107cad:	09 c2                	or     %eax,%edx$/;"	l
f0107caf	obj/kern/kernel.asm	/^f0107caf:	89 d0                	mov    %edx,%eax$/;"	l
f0107cb1	obj/kern/kernel.asm	/^f0107cb1:	89 ea                	mov    %ebp,%edx$/;"	l
f0107cb3	obj/kern/kernel.asm	/^f0107cb3:	f7 f6                	div    %esi$/;"	l
f0107cb5	obj/kern/kernel.asm	/^f0107cb5:	89 d5                	mov    %edx,%ebp$/;"	l
f0107cb7	obj/kern/kernel.asm	/^f0107cb7:	89 c3                	mov    %eax,%ebx$/;"	l
f0107cb9	obj/kern/kernel.asm	/^f0107cb9:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f0107cbd	obj/kern/kernel.asm	/^f0107cbd:	39 d5                	cmp    %edx,%ebp$/;"	l
f0107cbf	obj/kern/kernel.asm	/^f0107cbf:	72 10                	jb     f0107cd1 <__udivdi3+0xc1>$/;"	l
f0107cc1	obj/kern/kernel.asm	/^f0107cc1:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0107cc5	obj/kern/kernel.asm	/^f0107cc5:	89 f9                	mov    %edi,%ecx$/;"	l
f0107cc7	obj/kern/kernel.asm	/^f0107cc7:	d3 e6                	shl    %cl,%esi$/;"	d
f0107cc9	obj/kern/kernel.asm	/^f0107cc9:	39 c6                	cmp    %eax,%esi$/;"	l
f0107ccb	obj/kern/kernel.asm	/^f0107ccb:	73 07                	jae    f0107cd4 <__udivdi3+0xc4>$/;"	l
f0107ccd	obj/kern/kernel.asm	/^f0107ccd:	39 d5                	cmp    %edx,%ebp$/;"	l
f0107ccf	obj/kern/kernel.asm	/^f0107ccf:	75 03                	jne    f0107cd4 <__udivdi3+0xc4>$/;"	l
f0107cd1	obj/kern/kernel.asm	/^f0107cd1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0107cd4	obj/kern/kernel.asm	/^f0107cd4:	31 ff                	xor    %edi,%edi$/;"	l
f0107cd6	obj/kern/kernel.asm	/^f0107cd6:	89 d8                	mov    %ebx,%eax$/;"	l
f0107cd8	obj/kern/kernel.asm	/^f0107cd8:	89 fa                	mov    %edi,%edx$/;"	l
f0107cda	obj/kern/kernel.asm	/^f0107cda:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107cdd	obj/kern/kernel.asm	/^f0107cdd:	5b                   	pop    %ebx$/;"	l
f0107cde	obj/kern/kernel.asm	/^f0107cde:	5e                   	pop    %esi$/;"	l
f0107cdf	obj/kern/kernel.asm	/^f0107cdf:	5f                   	pop    %edi$/;"	l
f0107ce0	obj/kern/kernel.asm	/^f0107ce0:	5d                   	pop    %ebp$/;"	l
f0107ce1	obj/kern/kernel.asm	/^f0107ce1:	c3                   	ret    $/;"	l
f0107ce2	obj/kern/kernel.asm	/^f0107ce2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107ce8	obj/kern/kernel.asm	/^f0107ce8:	31 ff                	xor    %edi,%edi$/;"	l
f0107cea	obj/kern/kernel.asm	/^f0107cea:	31 db                	xor    %ebx,%ebx$/;"	l
f0107cec	obj/kern/kernel.asm	/^f0107cec:	89 d8                	mov    %ebx,%eax$/;"	l
f0107cee	obj/kern/kernel.asm	/^f0107cee:	89 fa                	mov    %edi,%edx$/;"	l
f0107cf0	obj/kern/kernel.asm	/^f0107cf0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107cf3	obj/kern/kernel.asm	/^f0107cf3:	5b                   	pop    %ebx$/;"	l
f0107cf4	obj/kern/kernel.asm	/^f0107cf4:	5e                   	pop    %esi$/;"	l
f0107cf5	obj/kern/kernel.asm	/^f0107cf5:	5f                   	pop    %edi$/;"	l
f0107cf6	obj/kern/kernel.asm	/^f0107cf6:	5d                   	pop    %ebp$/;"	l
f0107cf7	obj/kern/kernel.asm	/^f0107cf7:	c3                   	ret    $/;"	l
f0107cf8	obj/kern/kernel.asm	/^f0107cf8:	90                   	nop$/;"	l
f0107cf9	obj/kern/kernel.asm	/^f0107cf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107d00	obj/kern/kernel.asm	/^f0107d00:	89 d8                	mov    %ebx,%eax$/;"	l
f0107d02	obj/kern/kernel.asm	/^f0107d02:	f7 f7                	div    %edi$/;"	l
f0107d04	obj/kern/kernel.asm	/^f0107d04:	31 ff                	xor    %edi,%edi$/;"	l
f0107d06	obj/kern/kernel.asm	/^f0107d06:	89 c3                	mov    %eax,%ebx$/;"	l
f0107d08	obj/kern/kernel.asm	/^f0107d08:	89 d8                	mov    %ebx,%eax$/;"	l
f0107d0a	obj/kern/kernel.asm	/^f0107d0a:	89 fa                	mov    %edi,%edx$/;"	l
f0107d0c	obj/kern/kernel.asm	/^f0107d0c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107d0f	obj/kern/kernel.asm	/^f0107d0f:	5b                   	pop    %ebx$/;"	l
f0107d10	obj/kern/kernel.asm	/^f0107d10:	5e                   	pop    %esi$/;"	l
f0107d11	obj/kern/kernel.asm	/^f0107d11:	5f                   	pop    %edi$/;"	l
f0107d12	obj/kern/kernel.asm	/^f0107d12:	5d                   	pop    %ebp$/;"	l
f0107d13	obj/kern/kernel.asm	/^f0107d13:	c3                   	ret    $/;"	l
f0107d14	obj/kern/kernel.asm	/^f0107d14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107d18	obj/kern/kernel.asm	/^f0107d18:	39 ce                	cmp    %ecx,%esi$/;"	l
f0107d1a	obj/kern/kernel.asm	/^f0107d1a:	72 0c                	jb     f0107d28 <__udivdi3+0x118>$/;"	l
f0107d1c	obj/kern/kernel.asm	/^f0107d1c:	31 db                	xor    %ebx,%ebx$/;"	l
f0107d1e	obj/kern/kernel.asm	/^f0107d1e:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f0107d22	obj/kern/kernel.asm	/^f0107d22:	0f 87 34 ff ff ff    	ja     f0107c5c <__udivdi3+0x4c>$/;"	l
f0107d28	obj/kern/kernel.asm	/^f0107d28:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0107d2d	obj/kern/kernel.asm	/^f0107d2d:	e9 2a ff ff ff       	jmp    f0107c5c <__udivdi3+0x4c>$/;"	l
f0107d32	obj/kern/kernel.asm	/^f0107d32:	66 90                	xchg   %ax,%ax$/;"	l
f0107d34	obj/kern/kernel.asm	/^f0107d34:	66 90                	xchg   %ax,%ax$/;"	l
f0107d36	obj/kern/kernel.asm	/^f0107d36:	66 90                	xchg   %ax,%ax$/;"	l
f0107d38	obj/kern/kernel.asm	/^f0107d38:	66 90                	xchg   %ax,%ax$/;"	l
f0107d3a	obj/kern/kernel.asm	/^f0107d3a:	66 90                	xchg   %ax,%ax$/;"	l
f0107d3c	obj/kern/kernel.asm	/^f0107d3c:	66 90                	xchg   %ax,%ax$/;"	l
f0107d3e	obj/kern/kernel.asm	/^f0107d3e:	66 90                	xchg   %ax,%ax$/;"	l
f0107d40	obj/kern/kernel.asm	/^f0107d40 <__umoddi3>:$/;"	l
f0107d40	obj/kern/kernel.asm	/^f0107d40:	55                   	push   %ebp$/;"	l
f0107d41	obj/kern/kernel.asm	/^f0107d41:	57                   	push   %edi$/;"	l
f0107d42	obj/kern/kernel.asm	/^f0107d42:	56                   	push   %esi$/;"	l
f0107d43	obj/kern/kernel.asm	/^f0107d43:	53                   	push   %ebx$/;"	l
f0107d44	obj/kern/kernel.asm	/^f0107d44:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0107d47	obj/kern/kernel.asm	/^f0107d47:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f0107d4b	obj/kern/kernel.asm	/^f0107d4b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f0107d4f	obj/kern/kernel.asm	/^f0107d4f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f0107d53	obj/kern/kernel.asm	/^f0107d53:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f0107d57	obj/kern/kernel.asm	/^f0107d57:	85 d2                	test   %edx,%edx$/;"	l
f0107d59	obj/kern/kernel.asm	/^f0107d59:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0107d5d	obj/kern/kernel.asm	/^f0107d5d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107d61	obj/kern/kernel.asm	/^f0107d61:	89 f3                	mov    %esi,%ebx$/;"	l
f0107d63	obj/kern/kernel.asm	/^f0107d63:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107d66	obj/kern/kernel.asm	/^f0107d66:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0107d6a	obj/kern/kernel.asm	/^f0107d6a:	75 1c                	jne    f0107d88 <__umoddi3+0x48>$/;"	l
f0107d6c	obj/kern/kernel.asm	/^f0107d6c:	39 f7                	cmp    %esi,%edi$/;"	l
f0107d6e	obj/kern/kernel.asm	/^f0107d6e:	76 50                	jbe    f0107dc0 <__umoddi3+0x80>$/;"	l
f0107d70	obj/kern/kernel.asm	/^f0107d70:	89 c8                	mov    %ecx,%eax$/;"	l
f0107d72	obj/kern/kernel.asm	/^f0107d72:	89 f2                	mov    %esi,%edx$/;"	l
f0107d74	obj/kern/kernel.asm	/^f0107d74:	f7 f7                	div    %edi$/;"	l
f0107d76	obj/kern/kernel.asm	/^f0107d76:	89 d0                	mov    %edx,%eax$/;"	l
f0107d78	obj/kern/kernel.asm	/^f0107d78:	31 d2                	xor    %edx,%edx$/;"	l
f0107d7a	obj/kern/kernel.asm	/^f0107d7a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107d7d	obj/kern/kernel.asm	/^f0107d7d:	5b                   	pop    %ebx$/;"	l
f0107d7e	obj/kern/kernel.asm	/^f0107d7e:	5e                   	pop    %esi$/;"	l
f0107d7f	obj/kern/kernel.asm	/^f0107d7f:	5f                   	pop    %edi$/;"	l
f0107d80	obj/kern/kernel.asm	/^f0107d80:	5d                   	pop    %ebp$/;"	l
f0107d81	obj/kern/kernel.asm	/^f0107d81:	c3                   	ret    $/;"	l
f0107d82	obj/kern/kernel.asm	/^f0107d82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107d88	obj/kern/kernel.asm	/^f0107d88:	39 f2                	cmp    %esi,%edx$/;"	l
f0107d8a	obj/kern/kernel.asm	/^f0107d8a:	89 d0                	mov    %edx,%eax$/;"	l
f0107d8c	obj/kern/kernel.asm	/^f0107d8c:	77 52                	ja     f0107de0 <__umoddi3+0xa0>$/;"	l
f0107d8e	obj/kern/kernel.asm	/^f0107d8e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0107d91	obj/kern/kernel.asm	/^f0107d91:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107d94	obj/kern/kernel.asm	/^f0107d94:	75 5a                	jne    f0107df0 <__umoddi3+0xb0>$/;"	l
f0107d96	obj/kern/kernel.asm	/^f0107d96:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f0107d9a	obj/kern/kernel.asm	/^f0107d9a:	0f 82 e0 00 00 00    	jb     f0107e80 <__umoddi3+0x140>$/;"	l
f0107da0	obj/kern/kernel.asm	/^f0107da0:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0107da3	obj/kern/kernel.asm	/^f0107da3:	0f 86 d7 00 00 00    	jbe    f0107e80 <__umoddi3+0x140>$/;"	l
f0107da9	obj/kern/kernel.asm	/^f0107da9:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0107dad	obj/kern/kernel.asm	/^f0107dad:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0107db1	obj/kern/kernel.asm	/^f0107db1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107db4	obj/kern/kernel.asm	/^f0107db4:	5b                   	pop    %ebx$/;"	l
f0107db5	obj/kern/kernel.asm	/^f0107db5:	5e                   	pop    %esi$/;"	l
f0107db6	obj/kern/kernel.asm	/^f0107db6:	5f                   	pop    %edi$/;"	l
f0107db7	obj/kern/kernel.asm	/^f0107db7:	5d                   	pop    %ebp$/;"	l
f0107db8	obj/kern/kernel.asm	/^f0107db8:	c3                   	ret    $/;"	l
f0107db9	obj/kern/kernel.asm	/^f0107db9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107dc0	obj/kern/kernel.asm	/^f0107dc0:	85 ff                	test   %edi,%edi$/;"	l
f0107dc2	obj/kern/kernel.asm	/^f0107dc2:	89 fd                	mov    %edi,%ebp$/;"	l
f0107dc4	obj/kern/kernel.asm	/^f0107dc4:	75 0b                	jne    f0107dd1 <__umoddi3+0x91>$/;"	l
f0107dc6	obj/kern/kernel.asm	/^f0107dc6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107dcb	obj/kern/kernel.asm	/^f0107dcb:	31 d2                	xor    %edx,%edx$/;"	l
f0107dcd	obj/kern/kernel.asm	/^f0107dcd:	f7 f7                	div    %edi$/;"	l
f0107dcf	obj/kern/kernel.asm	/^f0107dcf:	89 c5                	mov    %eax,%ebp$/;"	l
f0107dd1	obj/kern/kernel.asm	/^f0107dd1:	89 f0                	mov    %esi,%eax$/;"	l
f0107dd3	obj/kern/kernel.asm	/^f0107dd3:	31 d2                	xor    %edx,%edx$/;"	l
f0107dd5	obj/kern/kernel.asm	/^f0107dd5:	f7 f5                	div    %ebp$/;"	l
f0107dd7	obj/kern/kernel.asm	/^f0107dd7:	89 c8                	mov    %ecx,%eax$/;"	l
f0107dd9	obj/kern/kernel.asm	/^f0107dd9:	f7 f5                	div    %ebp$/;"	l
f0107ddb	obj/kern/kernel.asm	/^f0107ddb:	89 d0                	mov    %edx,%eax$/;"	l
f0107ddd	obj/kern/kernel.asm	/^f0107ddd:	eb 99                	jmp    f0107d78 <__umoddi3+0x38>$/;"	l
f0107ddf	obj/kern/kernel.asm	/^f0107ddf:	90                   	nop$/;"	l
f0107de0	obj/kern/kernel.asm	/^f0107de0:	89 c8                	mov    %ecx,%eax$/;"	l
f0107de2	obj/kern/kernel.asm	/^f0107de2:	89 f2                	mov    %esi,%edx$/;"	l
f0107de4	obj/kern/kernel.asm	/^f0107de4:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107de7	obj/kern/kernel.asm	/^f0107de7:	5b                   	pop    %ebx$/;"	l
f0107de8	obj/kern/kernel.asm	/^f0107de8:	5e                   	pop    %esi$/;"	l
f0107de9	obj/kern/kernel.asm	/^f0107de9:	5f                   	pop    %edi$/;"	l
f0107dea	obj/kern/kernel.asm	/^f0107dea:	5d                   	pop    %ebp$/;"	l
f0107deb	obj/kern/kernel.asm	/^f0107deb:	c3                   	ret    $/;"	l
f0107dec	obj/kern/kernel.asm	/^f0107dec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107df0	obj/kern/kernel.asm	/^f0107df0:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0107df3	obj/kern/kernel.asm	/^f0107df3:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0107df8	obj/kern/kernel.asm	/^f0107df8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107dfa	obj/kern/kernel.asm	/^f0107dfa:	29 ef                	sub    %ebp,%edi$/;"	l
f0107dfc	obj/kern/kernel.asm	/^f0107dfc:	d3 e0                	shl    %cl,%eax$/;"	d
f0107dfe	obj/kern/kernel.asm	/^f0107dfe:	89 f9                	mov    %edi,%ecx$/;"	l
f0107e00	obj/kern/kernel.asm	/^f0107e00:	89 f2                	mov    %esi,%edx$/;"	l
f0107e02	obj/kern/kernel.asm	/^f0107e02:	d3 ea                	shr    %cl,%edx$/;"	d
f0107e04	obj/kern/kernel.asm	/^f0107e04:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107e06	obj/kern/kernel.asm	/^f0107e06:	09 c2                	or     %eax,%edx$/;"	l
f0107e08	obj/kern/kernel.asm	/^f0107e08:	89 d8                	mov    %ebx,%eax$/;"	l
f0107e0a	obj/kern/kernel.asm	/^f0107e0a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107e0d	obj/kern/kernel.asm	/^f0107e0d:	89 f2                	mov    %esi,%edx$/;"	l
f0107e0f	obj/kern/kernel.asm	/^f0107e0f:	d3 e2                	shl    %cl,%edx$/;"	d
f0107e11	obj/kern/kernel.asm	/^f0107e11:	89 f9                	mov    %edi,%ecx$/;"	l
f0107e13	obj/kern/kernel.asm	/^f0107e13:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107e17	obj/kern/kernel.asm	/^f0107e17:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0107e1b	obj/kern/kernel.asm	/^f0107e1b:	d3 e8                	shr    %cl,%eax$/;"	d
f0107e1d	obj/kern/kernel.asm	/^f0107e1d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107e1f	obj/kern/kernel.asm	/^f0107e1f:	89 c6                	mov    %eax,%esi$/;"	l
f0107e21	obj/kern/kernel.asm	/^f0107e21:	d3 e3                	shl    %cl,%ebx$/;"	d
f0107e23	obj/kern/kernel.asm	/^f0107e23:	89 f9                	mov    %edi,%ecx$/;"	l
f0107e25	obj/kern/kernel.asm	/^f0107e25:	89 d0                	mov    %edx,%eax$/;"	l
f0107e27	obj/kern/kernel.asm	/^f0107e27:	d3 e8                	shr    %cl,%eax$/;"	d
f0107e29	obj/kern/kernel.asm	/^f0107e29:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107e2b	obj/kern/kernel.asm	/^f0107e2b:	09 d8                	or     %ebx,%eax$/;"	l
f0107e2d	obj/kern/kernel.asm	/^f0107e2d:	89 d3                	mov    %edx,%ebx$/;"	l
f0107e2f	obj/kern/kernel.asm	/^f0107e2f:	89 f2                	mov    %esi,%edx$/;"	l
f0107e31	obj/kern/kernel.asm	/^f0107e31:	f7 34 24             	divl   (%esp)$/;"	l
f0107e34	obj/kern/kernel.asm	/^f0107e34:	89 d6                	mov    %edx,%esi$/;"	l
f0107e36	obj/kern/kernel.asm	/^f0107e36:	d3 e3                	shl    %cl,%ebx$/;"	d
f0107e38	obj/kern/kernel.asm	/^f0107e38:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f0107e3c	obj/kern/kernel.asm	/^f0107e3c:	39 d6                	cmp    %edx,%esi$/;"	l
f0107e3e	obj/kern/kernel.asm	/^f0107e3e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0107e42	obj/kern/kernel.asm	/^f0107e42:	89 d1                	mov    %edx,%ecx$/;"	l
f0107e44	obj/kern/kernel.asm	/^f0107e44:	89 c3                	mov    %eax,%ebx$/;"	l
f0107e46	obj/kern/kernel.asm	/^f0107e46:	72 08                	jb     f0107e50 <__umoddi3+0x110>$/;"	l
f0107e48	obj/kern/kernel.asm	/^f0107e48:	75 11                	jne    f0107e5b <__umoddi3+0x11b>$/;"	l
f0107e4a	obj/kern/kernel.asm	/^f0107e4a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0107e4e	obj/kern/kernel.asm	/^f0107e4e:	73 0b                	jae    f0107e5b <__umoddi3+0x11b>$/;"	l
f0107e50	obj/kern/kernel.asm	/^f0107e50:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0107e54	obj/kern/kernel.asm	/^f0107e54:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f0107e57	obj/kern/kernel.asm	/^f0107e57:	89 d1                	mov    %edx,%ecx$/;"	l
f0107e59	obj/kern/kernel.asm	/^f0107e59:	89 c3                	mov    %eax,%ebx$/;"	l
f0107e5b	obj/kern/kernel.asm	/^f0107e5b:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f0107e5f	obj/kern/kernel.asm	/^f0107e5f:	29 da                	sub    %ebx,%edx$/;"	l
f0107e61	obj/kern/kernel.asm	/^f0107e61:	19 ce                	sbb    %ecx,%esi$/;"	l
f0107e63	obj/kern/kernel.asm	/^f0107e63:	89 f9                	mov    %edi,%ecx$/;"	l
f0107e65	obj/kern/kernel.asm	/^f0107e65:	89 f0                	mov    %esi,%eax$/;"	l
f0107e67	obj/kern/kernel.asm	/^f0107e67:	d3 e0                	shl    %cl,%eax$/;"	d
f0107e69	obj/kern/kernel.asm	/^f0107e69:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107e6b	obj/kern/kernel.asm	/^f0107e6b:	d3 ea                	shr    %cl,%edx$/;"	d
f0107e6d	obj/kern/kernel.asm	/^f0107e6d:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107e6f	obj/kern/kernel.asm	/^f0107e6f:	d3 ee                	shr    %cl,%esi$/;"	d
f0107e71	obj/kern/kernel.asm	/^f0107e71:	09 d0                	or     %edx,%eax$/;"	l
f0107e73	obj/kern/kernel.asm	/^f0107e73:	89 f2                	mov    %esi,%edx$/;"	l
f0107e75	obj/kern/kernel.asm	/^f0107e75:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107e78	obj/kern/kernel.asm	/^f0107e78:	5b                   	pop    %ebx$/;"	l
f0107e79	obj/kern/kernel.asm	/^f0107e79:	5e                   	pop    %esi$/;"	l
f0107e7a	obj/kern/kernel.asm	/^f0107e7a:	5f                   	pop    %edi$/;"	l
f0107e7b	obj/kern/kernel.asm	/^f0107e7b:	5d                   	pop    %ebp$/;"	l
f0107e7c	obj/kern/kernel.asm	/^f0107e7c:	c3                   	ret    $/;"	l
f0107e7d	obj/kern/kernel.asm	/^f0107e7d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107e80	obj/kern/kernel.asm	/^f0107e80:	29 f9                	sub    %edi,%ecx$/;"	l
f0107e82	obj/kern/kernel.asm	/^f0107e82:	19 d6                	sbb    %edx,%esi$/;"	l
f0107e84	obj/kern/kernel.asm	/^f0107e84:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0107e88	obj/kern/kernel.asm	/^f0107e88:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107e8c	obj/kern/kernel.asm	/^f0107e8c:	e9 18 ff ff ff       	jmp    f0107da9 <__umoddi3+0x69>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
fail	grade-functions.sh	/^fail () {$/;"	f
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sbrktest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sbrktest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/writemotd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/writemotd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdSock
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_remove	fs/fs.c	/^file_remove(const char *path)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sbrktest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/writemotd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt	obj/user/evilhello2.asm	/^		gdt = (struct Segdesc *)(base + offset);$/;"	d
gdt	user/evilhello2.c	/^struct Segdesc *gdt;$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon25::__anon26	typeref:struct:netifapi_msg_msg::__anon25::__anon26::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon28::__anon31
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output, buf=buf):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
head	obj/kern/kernel.asm	/^				head = tmp;$/;"	d
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon37
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle	obj/kern/kernel.asm	/^	idle = &envs[cpunum()];$/;"	d
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon37
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon25::__anon26
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::__anon29
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon25::__anon26
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int $/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int e1000_attach(struct pci_func *pcif) {$/;"	l
int	obj/kern/kernel.asm	/^int e1000_receive(uint8_t *data) {$/;"	l
int	obj/kern/kernel.asm	/^int e1000_transmit(uint8_t *data, uint32_t length) {$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int $/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int $/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int $/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int $/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int $/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int $/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int $/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int $/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int $/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int $/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int $/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int $/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/evilhello2.asm	/^int $/;"	l
int	obj/user/evilhello2.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int $/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int $/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int $/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int $/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int $/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int $/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int $/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int $/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int $/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int $/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int $/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int $/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int $/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int $/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int $/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int $/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int $/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int $/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int $/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int $/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int $/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sbrktest.asm	/^int $/;"	l
int	obj/user/sbrktest.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int $/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int $/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int $/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int $/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int $/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int $/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/writemotd.asm	/^int $/;"	l
int	obj/user/writemotd.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int $/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sbrktest.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/writemotd.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon13::__anon19	typeref:struct:api_msg_msg::__anon13::__anon19::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
interval	obj/kern/kernel.asm	/^		interval = 0;$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon12	typeref:struct:netconn::__anon12::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon13::__anon15	typeref:struct:api_msg_msg::__anon13::__anon15::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon13::__anon16	typeref:struct:api_msg_msg::__anon13::__anon16::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon25::__anon26	typeref:struct:netifapi_msg_msg::__anon25::__anon26::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^    ipr = ip_reass_enqueue_new_datagram(fraghdr, clen);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr_prev	obj/net/ns.asm	/^    ipr_prev = ipr;$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon13	typeref:struct:api_msg_msg::__anon13::__anon19
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon13::__anon19	typeref:enum:api_msg_msg::__anon13::__anon19::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
judge_time_for_space	lib/printfmt.c	/^static int judge_time_for_space = 0;$/;"	v	file:
judge_time_for_space	obj/fs/fs.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/fs/fs.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/kern/kernel.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/kern/kernel.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/net/ns.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/net/ns.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/net/testinput.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/net/testinput.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/net/testoutput.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/net/testoutput.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/badsegment.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/badsegment.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/breakpoint.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/breakpoint.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/buggyhello.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/buggyhello.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/buggyhello2.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/buggyhello2.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/divzero.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/divzero.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/dumbfork.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/dumbfork.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/echosrv.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/echosrv.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/echotest.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/echotest.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/evilhello.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/evilhello.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/evilhello2.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/evilhello2.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/fairness.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/fairness.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultalloc.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultalloc.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultallocbad.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultallocbad.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultbadhandler.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultbadhandler.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultdie.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultdie.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultevilhandler.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultevilhandler.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultnostack.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultnostack.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultread.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultread.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultreadkernel.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultreadkernel.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultregs.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultregs.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultwrite.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultwrite.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/faultwritekernel.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/faultwritekernel.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/forktree.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/forktree.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/hello.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/hello.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/httpd.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/httpd.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/icode.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/icode.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/idle.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/idle.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/init.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/init.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/pingpong.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/pingpong.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/pingpongs.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/pingpongs.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/primes.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/primes.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/sbrktest.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/sbrktest.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/softint.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/softint.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/spin.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/spin.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/stresssched.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/stresssched.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/testbss.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/testbss.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/testfile.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/testfile.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/testtime.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/testtime.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/writemotd.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/writemotd.asm	/^		judge_time_for_space = width;$/;"	d
judge_time_for_space	obj/user/yield.asm	/^		judge_time_for_space = 0;$/;"	d
judge_time_for_space	obj/user/yield.asm	/^		judge_time_for_space = width;$/;"	d
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kill	gradelib.py	/^    def kill(self):$/;"	m	class:GDBClient
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	v
lapic	obj/kern/kernel.asm	/^		lapic = NULL;$/;"	d
lapic	obj/kern/kernel.asm	/^	lapic = (uint32_t *)conf->lapicaddr;$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon13	typeref:struct:api_msg_msg::__anon13::__anon20
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon13::__anon17
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon13::__anon18
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000.h	/^    uint16_t length;$/;"	m	struct:rx_desc
length	kern/e1000.h	/^    uint16_t length;$/;"	m	struct:tx_desc
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sbrktest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/writemotd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
list	obj/kern/kernel.asm	/^				list = check->pp_link;$/;"	d
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon13::__anon16
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/evilhello2.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sbrktest.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/writemotd.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sbrktest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/writemotd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/exec.c	/^map_segment(envid_t this_id, uintptr_t va, size_t memsz,$/;"	f	file:
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon22
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon21
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_debug_continue	kern/monitor.c	/^mon_debug_continue(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_debug_display	kern/monitor.c	/^mon_debug_display(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_debug_step	kern/monitor.c	/^mon_debug_step(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_time	kern/monitor.c	/^mon_time(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon28::__anon31
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon13
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon25
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon28
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon43	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon43	file:
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon13::__anon19	typeref:struct:api_msg_msg::__anon13::__anon19::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon13	typeref:struct:api_msg_msg::__anon13::__anon14
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct Page), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon38
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon28::__anon29	typeref:struct:tcpip_msg::__anon28::__anon29::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon25::__anon26	typeref:struct:netifapi_msg_msg::__anon25::__anon26::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sbrktest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/writemotd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP(KADDR(PADDR(nextfree)), PGSIZE);$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sbrktest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/writemotd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sbrktest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sbrktest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sbrktest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/writemotd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/writemotd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/writemotd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/writemotd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
num_of_space	lib/printfmt.c	/^static int num_of_space = 0;$/;"	v	file:
num_of_space	obj/fs/fs.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/fs/fs.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/kern/kernel.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/kern/kernel.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/net/ns.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/net/ns.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/net/testinput.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/net/testinput.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/net/testoutput.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/net/testoutput.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/badsegment.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/badsegment.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/breakpoint.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/breakpoint.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/buggyhello.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/buggyhello.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/buggyhello2.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/buggyhello2.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/divzero.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/divzero.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/dumbfork.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/dumbfork.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/echosrv.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/echosrv.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/echotest.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/echotest.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/evilhello.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/evilhello.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/evilhello2.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/evilhello2.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/fairness.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/fairness.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultalloc.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultalloc.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultallocbad.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultallocbad.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultbadhandler.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultbadhandler.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultdie.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultdie.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultevilhandler.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultevilhandler.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultnostack.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultnostack.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultread.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultread.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultreadkernel.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultreadkernel.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultregs.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultregs.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultwrite.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultwrite.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/faultwritekernel.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/faultwritekernel.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/forktree.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/forktree.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/hello.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/hello.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/httpd.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/httpd.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/icode.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/icode.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/idle.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/idle.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/init.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/init.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/pingpong.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/pingpong.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/pingpongs.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/pingpongs.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/primes.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/primes.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/sbrktest.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/sbrktest.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/softint.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/softint.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/spin.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/spin.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/stresssched.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/stresssched.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/testbss.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/testbss.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/testfile.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/testfile.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/testtime.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/testtime.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/writemotd.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/writemotd.asm	/^		num_of_space = 0;$/;"	d
num_of_space	obj/user/yield.asm	/^			num_of_space = width - 1;$/;"	d
num_of_space	obj/user/yield.asm	/^		num_of_space = 0;$/;"	d
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/evilhello2.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sbrktest.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/writemotd.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sbrktest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/writemotd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	70;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sbrktest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/writemotd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon28::__anon29	typeref:struct:tcpip_msg::__anon28::__anon29::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sbrktest.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/writemotd.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '-';$/;"	d
padc	obj/user/sbrktest.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
padc	obj/user/writemotd.asm	/^			padc = '-';$/;"	d
padc	obj/user/writemotd.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc_npages	kern/pmap.c	/^page_alloc_npages(int alloc_flags, int n)$/;"	f
page_alloc_npages_helper	kern/pmap.c	/^page_alloc_npages_helper(int alloc_flags, int n, struct Page* list)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = tmp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_npages	kern/pmap.c	/^page_free_npages(struct Page *pp, int n)$/;"	f
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_realloc_npages	kern/pmap.c	/^page_realloc_npages(struct Page *pp, int old_n, int new_n)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
page_table	obj/kern/kernel.asm	/^		page_table = (pte_t *)KADDR(PTE_ADDR(*pde));$/;"	d
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	obj/kern/kernel.asm	/^	pages = boot_alloc(npages * sizeof(struct Page));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
pass	grade-functions.sh	/^pass () {$/;"	f
passfailmsg	grade-functions.sh	/^passfailmsg () {$/;"	f
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon23
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon24
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon12
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon7
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon7
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon7
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon7
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/kern/kernel.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/net/ns.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/net/testinput.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perm	obj/net/testoutput.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perm	obj/user/forktree.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/pingpong.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perm	obj/user/pingpongs.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perm	obj/user/primes.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perm	obj/user/spin.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perm	obj/user/stresssched.asm	/^		perm = (perm | PTE_COW) & ~PTE_W;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/fs/fs.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/net/ns.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/net/testinput.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/net/testoutput.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/badsegment.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/breakpoint.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/buggyhello.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/buggyhello2.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/divzero.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/dumbfork.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/echosrv.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/echotest.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/evilhello.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/evilhello2.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/fairness.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultalloc.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultallocbad.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultbadhandler.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultdie.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultevilhandler.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultnostack.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultread.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultreadkernel.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultregs.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultwrite.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/faultwritekernel.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/forktree.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/hello.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/httpd.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/icode.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/idle.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/init.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/primes.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/sbrktest.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/softint.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/spin.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/stresssched.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/testbss.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/testfile.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/testtime.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/writemotd.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pg	obj/user/yield.asm	/^	pg = pg ? pg : (void *)UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) (binary + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	kern/e1000.h	/^    uint8_t pkt[RX_MAX_PKT_LEN];$/;"	m	struct:rx_pkt
pkt	kern/e1000.h	/^    uint8_t pkt[TX_MAX_PKT_LEN];$/;"	m	struct:tx_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
plusflag	obj/fs/fs.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/fs/fs.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/kern/kernel.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/kern/kernel.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/net/ns.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/net/ns.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/net/testinput.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/net/testinput.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/net/testoutput.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/net/testoutput.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/badsegment.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/badsegment.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/breakpoint.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/breakpoint.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/buggyhello.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/buggyhello.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/buggyhello2.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/buggyhello2.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/divzero.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/divzero.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/dumbfork.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/dumbfork.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/echosrv.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/echosrv.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/echotest.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/echotest.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/evilhello.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/evilhello.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/evilhello2.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/evilhello2.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/fairness.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/fairness.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultalloc.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultalloc.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultallocbad.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultallocbad.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultbadhandler.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultbadhandler.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultdie.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultdie.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultevilhandler.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultevilhandler.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultnostack.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultnostack.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultread.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultread.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultreadkernel.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultreadkernel.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultregs.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultregs.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultwrite.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultwrite.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/faultwritekernel.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/faultwritekernel.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/forktree.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/forktree.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/hello.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/hello.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/httpd.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/httpd.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/icode.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/icode.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/idle.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/idle.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/init.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/init.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/pingpong.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/pingpong.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/pingpongs.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/pingpongs.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/primes.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/primes.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/sbrktest.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/sbrktest.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/softint.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/softint.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/spin.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/spin.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/stresssched.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/stresssched.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/testbss.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/testbss.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/testfile.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/testfile.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/testtime.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/testtime.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/writemotd.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/writemotd.asm	/^			plusflag = 1;$/;"	d
plusflag	obj/user/yield.asm	/^				plusflag = 0;$/;"	d
plusflag	obj/user/yield.asm	/^			plusflag = 1;$/;"	d
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon13::__anon16
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon13::__anon15
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^		pp = NULL;$/;"	d
pp	obj/kern/kernel.asm	/^	pp =  page_alloc(0);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_alloc_npages(0, 4);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_alloc_npages(0, 8);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = pp0 = 0;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = page_alloc(0);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = page_alloc_npages(ALLOC_ZERO, 4);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sbrktest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sbrktest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/writemotd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/writemotd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sbrktest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/writemotd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon13::__anon14
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(env->env_pgdir, (void *)i, 0);$/;"	d
pte	obj/net/ns.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello2.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/sbrktest.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/writemotd.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = vpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
quicktest	grade-functions.sh	/^quicktest () {$/;"	f
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon13	typeref:struct:api_msg_msg::__anon13::__anon18
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(curenv->env_pgdir, p, va, PTE_U | PTE_W);$/;"	d
r	obj/kern/kernel.asm	/^	r = page_insert(env->env_pgdir, new_page, va, perm);$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/net/ns.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/evilhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello2.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello2.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/httpd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/user/sbrktest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sbrktest.asm	/^			r = 0;$/;"	d
r	obj/user/sbrktest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sbrktest.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/user/spin.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_env_set_pgfault_upcall(child_id, _pgfault_upcall);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_env_set_status(child_id, ENV_RUNNABLE);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_alloc(child_id, (void *)(UTOP - PGSIZE), PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, pn_addr, 0, pn_addr, perm);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, pn_addr, envid, pn_addr, perm);$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(0, (void *)PFTEMP, PTE_U | PTE_W | PTE_P);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_map(0, (void *)PFTEMP,$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_unmap(0, (void *)PFTEMP);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/writemotd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/writemotd.asm	/^			r = 0;$/;"	d
r	obj/user/writemotd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/writemotd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon12	typeref:struct:netconn::__anon12::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sbrktest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/writemotd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
rdtsc	kern/monitor.c	/^rdtsc()$/;"	f
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
rear	obj/kern/kernel.asm	/^				rear = tmp->pp_link;$/;"	d
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
region_alloc	kern/syscall.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
remove	lib/file.c	/^remove(const char *path)$/;"	f
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^				result = check->pp_link;$/;"	d
result	obj/kern/kernel.asm	/^		result = page_alloc_npages_helper(alloc_flags, n, page_free_list);$/;"	d
result	obj/kern/kernel.asm	/^		result = page_free_list;$/;"	d
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sbrktest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/writemotd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sbrktest.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/writemotd.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
ring0_call	user/evilhello2.c	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	f
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon10	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run	grade-functions.sh	/^run () {$/;"	f
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runexpect	grade-functions.sh	/^runexpect () {$/;"	f
runtest	grade-functions.sh	/^runtest () {$/;"	f
runtest1	grade-functions.sh	/^runtest1 () {$/;"	f
runtest2	grade-functions.sh	/^runtest2 () {$/;"	f
rx_desc	kern/e1000.h	/^struct rx_desc {$/;"	s
rx_desc_buf	kern/e1000.c	/^struct rx_desc rx_desc_buf[RX_ARRAY_LEN] __attribute__((aligned(16)));$/;"	v	typeref:struct:rx_desc
rx_pkt	kern/e1000.h	/^struct rx_pkt {$/;"	s
rx_pkt_buf	kern/e1000.c	/^struct rx_pkt rx_pkt_buf[RX_ARRAY_LEN] __attribute__((aligned(16)));$/;"	v	typeref:struct:rx_pkt
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/evilhello2.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sbrktest.asm	/^	s = (char *) start;$/;"	d
s	obj/user/sbrktest.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/writemotd.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_remove	fs/serv.c	/^serve_remove(envid_t envid, struct Fsreq_remove *req)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sgdt	user/evilhello2.c	/^sgdt(struct Pseudodesc* gdtd)$/;"	f	file:
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
sharepage	lib/fork.c	/^sharepage(envid_t envid, unsigned pn)$/;"	f	file:
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
showfinal	grade-functions.sh	/^showfinal () {$/;"	f
showpart	grade-functions.sh	/^showpart () {$/;"	f
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/evilhello2.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sbrktest.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/writemotd.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000.h	/^    uint16_t special;$/;"	m	struct:rx_desc
special	kern/e1000.h	/^    uint16_t special;$/;"	m	struct:tx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	37;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock_test	kern/init.c	/^void spinlock_test()$/;"	f
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sbrktest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/writemotd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon39
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start	obj/user/sbrktest.asm	/^	start = sys_sbrk(0);$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon25::__anon26
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static inline int32_t$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/fs/fs.asm	/^static int num_of_space = 0;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/kern/kernel.asm	/^static int num_of_space = 0;$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static volatile int test_ctr = 0;$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline int32_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/net/ns.asm	/^static int num_of_space = 0;$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static uint8_t *mptr;$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static inline int32_t$/;"	l
static	obj/net/testinput.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/net/testinput.asm	/^static int num_of_space = 0;$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static inline int32_t$/;"	l
static	obj/net/testoutput.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/net/testoutput.asm	/^static int num_of_space = 0;$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline int32_t$/;"	l
static	obj/user/badsegment.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/badsegment.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/breakpoint.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/buggyhello.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/buggyhello2.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline int32_t$/;"	l
static	obj/user/divzero.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/divzero.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/dumbfork.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static inline int32_t$/;"	l
static	obj/user/echosrv.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/echosrv.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static inline int32_t$/;"	l
static	obj/user/echotest.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/echotest.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/evilhello.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/evilhello2.asm	/^static __inline void$/;"	l
static	obj/user/evilhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello2.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/evilhello2.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/evilhello2.asm	/^static int$/;"	l
static	obj/user/evilhello2.asm	/^static long long$/;"	l
static	obj/user/evilhello2.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello2.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline int32_t$/;"	l
static	obj/user/fairness.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/fairness.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultalloc.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultallocbad.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultbadhandler.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline int32_t$/;"	l
static	obj/user/faultdie.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultdie.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultevilhandler.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultnostack.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline int32_t$/;"	l
static	obj/user/faultread.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultread.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultreadkernel.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline int32_t$/;"	l
static	obj/user/faultregs.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultregs.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultwrite.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/faultwritekernel.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/forktree.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline int32_t$/;"	l
static	obj/user/hello.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/hello.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static inline int32_t$/;"	l
static	obj/user/httpd.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/httpd.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static uint8_t *mptr;$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static inline int32_t$/;"	l
static	obj/user/icode.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/icode.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/idle.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static inline int32_t$/;"	l
static	obj/user/init.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/init.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/pingpong.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/pingpongs.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/primes.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sbrktest.asm	/^static inline int32_t$/;"	l
static	obj/user/sbrktest.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/sbrktest.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/sbrktest.asm	/^static int$/;"	l
static	obj/user/sbrktest.asm	/^static long long$/;"	l
static	obj/user/sbrktest.asm	/^static ssize_t$/;"	l
static	obj/user/sbrktest.asm	/^static unsigned long long$/;"	l
static	obj/user/sbrktest.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline int32_t$/;"	l
static	obj/user/softint.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/softint.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline int32_t$/;"	l
static	obj/user/spin.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/spin.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline int32_t$/;"	l
static	obj/user/stresssched.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/stresssched.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline int32_t$/;"	l
static	obj/user/testbss.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/testbss.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static inline int32_t$/;"	l
static	obj/user/testfile.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/testfile.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static inline int32_t$/;"	l
static	obj/user/testtime.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/testtime.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/writemotd.asm	/^static inline int32_t$/;"	l
static	obj/user/writemotd.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/writemotd.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/writemotd.asm	/^static int$/;"	l
static	obj/user/writemotd.asm	/^static long long$/;"	l
static	obj/user/writemotd.asm	/^static ssize_t$/;"	l
static	obj/user/writemotd.asm	/^static unsigned long long$/;"	l
static	obj/user/writemotd.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline int32_t$/;"	l
static	obj/user/yield.asm	/^static int judge_time_for_space = 0;$/;"	l
static	obj/user/yield.asm	/^static int num_of_space = 0;$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e1000.h	/^    uint8_t status;$/;"	m	struct:rx_desc
status	kern/e1000.h	/^    uint8_t status;$/;"	m	struct:tx_desc
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP2 + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exec	kern/syscall.c	/^sys_exec(struct Trapframe *tf, struct Proghdr *ph, uint32_t phnum)$/;"	f	file:
sys_exec	lib/syscall.c	/^sys_exec(struct Trapframe *tf, struct Proghdr *ph, uint32_t phnum)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_map_kernel_page	kern/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f	file:
sys_map_kernel_page	lib/syscall.c	/^sys_map_kernel_page(void* kpage, void* va)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_pkt_receive	kern/syscall.c	/^sys_pkt_receive(uint8_t * data) $/;"	f	file:
sys_pkt_receive	lib/syscall.c	/^sys_pkt_receive(uint8_t *data)$/;"	f
sys_pkt_transmit	kern/syscall.c	/^sys_pkt_transmit(uint8_t *data, uint32_t length) $/;"	f	file:
sys_pkt_transmit	lib/syscall.c	/^sys_pkt_transmit(uint8_t *data, uint32_t length) $/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sbrk	kern/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f	file:
sys_sbrk	lib/syscall.c	/^sys_sbrk(uint32_t inc)$/;"	f
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscall_helper	kern/syscall.c	/^syscall_helper(struct Trapframe *tf)$/;"	f
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
sysenter_handler	kern/trapentry.S	/^sysenter_handler:$/;"	l
sysenter_handler	obj/kern/kernel.asm	/^sysenter_handler:$/;"	l
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon12	typeref:struct:netconn::__anon12::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_ctr	kern/init.c	/^static volatile int test_ctr = 0;$/;"	v	file:
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
test_writemotd1	grade-lab5	/^def test_writemotd1():$/;"	f
test_writemotd2	grade-lab5	/^def test_writemotd2():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
this_tf	obj/user/icode.asm	/^    this_tf = envs[ENVX(sys_getenvid())].env_tf;$/;"	d
thiscpu	kern/cpu.h	37;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sbrktest.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/writemotd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon42	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::__anon31
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/kern/kernel.asm	/^				tmp = check;	\/\/ Record junction$/;"	d
tmp	obj/kern/kernel.asm	/^				tmp = rear;$/;"	d
tmp	obj/kern/kernel.asm	/^				tmp = tmp->pp_link;$/;"	d
tmp	obj/kern/kernel.asm	/^			tmp = result;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
transmit_init	kern/e1000.c	/^void transmit_init() {$/;"	f
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tx_desc	kern/e1000.h	/^struct tx_desc {$/;"	s
tx_desc_buf	kern/e1000.c	/^struct tx_desc tx_desc_buf[TX_ARRAY_LEN] __attribute__((aligned(16)));$/;"	v	typeref:struct:tx_desc
tx_mem_init	kern/e1000.c	/^void tx_mem_init() {$/;"	f
tx_pkt	kern/e1000.h	/^struct tx_pkt {$/;"	s
tx_pkt_buf	kern/e1000.c	/^struct tx_pkt tx_pkt_buf[TX_ARRAY_LEN] __attribute__((aligned(16)));$/;"	v	typeref:struct:tx_pkt
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon12	typeref:struct:netconn::__anon12::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint64_t	obj/kern/kernel.asm	/^uint64_t$/;"	l
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/exec.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sbrktest.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned atomic_return_and_add(volatile unsigned *addr, unsigned value)$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned read_eip();$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/sbrktest.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/writemotd.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (i == start) ? (uintptr_t)va : i;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)$/;"	d
utf	obj/kern/kernel.asm	/^			utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon40	file:
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vaddr	user/evilhello2.c	/^char vaddr[PGSIZE];$/;"	v
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon33
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void spinlock_test()$/;"	l
void	obj/kern/kernel.asm	/^void transmit_init() {$/;"	l
void	obj/kern/kernel.asm	/^void tx_mem_init() {$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/evilhello2.asm	/^void *$/;"	l
void	obj/user/evilhello2.asm	/^void evil()$/;"	l
void	obj/user/evilhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello2.asm	/^void ring0_call(void (*fun_ptr)(void)) {$/;"	l
void	obj/user/evilhello2.asm	/^void warpper()$/;"	l
void	obj/user/evilhello2.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sbrktest.asm	/^void *$/;"	l
void	obj/user/sbrktest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sbrktest.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/writemotd.asm	/^void *$/;"	l
void	obj/user/writemotd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/writemotd.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon25::__anon27
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;  \/\/ Initialized in mp.c$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon13	typeref:struct:api_msg_msg::__anon13::__anon17
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon40::__anon41	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
warpper	user/evilhello2.c	/^void warpper()$/;"	f
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello2.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sbrktest.asm	/^				width = 0;$/;"	d
width	obj/user/sbrktest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/writemotd.asm	/^				width = 0;$/;"	d
width	obj/user/writemotd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon10	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrmsr	inc/x86.h	38;"	d
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
